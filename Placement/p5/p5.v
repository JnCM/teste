// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Fri May  8 16:19:28 2020
// ----------------------------------------------------------------------------
`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 12
`define MEMORY_CONTROLLER_TAG_SIZE 9
// This directory contains the memory initialization files generated by LegUp.
// This relative path is used by ModelSim and FPGA synthesis tool.
`define MEM_INIT_DIR "../mem_init/"
// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX1 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcX1_a {`TAG_g_main_opcX1, 23'd0}
// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX2 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcX2_a {`TAG_g_main_opcX2, 23'd0}
// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
`define TAG_g_main_opcX3 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcX3_a {`TAG_g_main_opcX3, 23'd0}
// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY0 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcY0_a {`TAG_g_main_opcY0, 23'd0}
// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcY1_a {`TAG_g_main_opcY1, 23'd0}
// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY2 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcY2_a {`TAG_g_main_opcY2, 23'd0}
// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY3 `MEMORY_CONTROLLER_TAG_SIZE'd5
`define TAG_g_main_opcY3_a {`TAG_g_main_opcY3, 23'd0}

`timescale 1 ns / 1 ns
module top
(
	clk,
	reset,
	start,
	finish,
	return_val
);

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
reg  main_inst_clk;
reg  main_inst_reset;
reg  main_inst_start;
wire  main_inst_finish;
wire [31:0] main_inst_return_val;
wire  main_inst_memory_controller_1_write_enable_a;
wire [63:0] main_inst_memory_controller_1_in_a;
wire  main_inst_memory_controller_1_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_a;
wire [1:0] main_inst_memory_controller_1_size_a;
reg [63:0] main_inst_memory_controller_1_out_a;
wire  main_inst_memory_controller_1_write_enable_b;
wire [63:0] main_inst_memory_controller_1_in_b;
wire  main_inst_memory_controller_1_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_b;
wire [1:0] main_inst_memory_controller_1_size_b;
reg [63:0] main_inst_memory_controller_1_out_b;
wire  main_inst_memory_controller_0_write_enable_a;
wire [63:0] main_inst_memory_controller_0_in_a;
wire  main_inst_memory_controller_0_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_a;
wire [1:0] main_inst_memory_controller_0_size_a;
reg [63:0] main_inst_memory_controller_0_out_a;
wire  main_inst_memory_controller_0_write_enable_b;
wire [63:0] main_inst_memory_controller_0_in_b;
wire  main_inst_memory_controller_0_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_b;
wire [1:0] main_inst_memory_controller_0_size_b;
reg [63:0] main_inst_memory_controller_0_out_b;
reg  main_inst_finish_reg;
reg [31:0] main_inst_return_val_reg;
reg  memory_controller_1_inst_clk;
wire  memory_controller_1_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_a;
reg  memory_controller_1_inst_memory_controller_enable_a;
reg [1:0] memory_controller_1_inst_memory_controller_size_a;
reg  memory_controller_1_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_1_inst_memory_controller_in_a;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_b;
reg  memory_controller_1_inst_memory_controller_enable_b;
reg [1:0] memory_controller_1_inst_memory_controller_size_b;
reg  memory_controller_1_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_1_inst_memory_controller_in_b;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_b;
reg  memory_controller_0_inst_clk;
wire  memory_controller_0_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_a;
reg  memory_controller_0_inst_memory_controller_enable_a;
reg [1:0] memory_controller_0_inst_memory_controller_size_a;
reg  memory_controller_0_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_0_inst_memory_controller_in_a;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_b;
reg  memory_controller_0_inst_memory_controller_enable_b;
reg [1:0] memory_controller_0_inst_memory_controller_size_b;
reg  memory_controller_0_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_0_inst_memory_controller_in_b;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_b;


main main_inst (
	.clk (main_inst_clk),
	.reset (main_inst_reset),
	.start (main_inst_start),
	.finish (main_inst_finish),
	.return_val (main_inst_return_val),
	.memory_controller_1_write_enable_a (main_inst_memory_controller_1_write_enable_a),
	.memory_controller_1_in_a (main_inst_memory_controller_1_in_a),
	.memory_controller_1_enable_a (main_inst_memory_controller_1_enable_a),
	.memory_controller_1_address_a (main_inst_memory_controller_1_address_a),
	.memory_controller_1_size_a (main_inst_memory_controller_1_size_a),
	.memory_controller_1_out_a (main_inst_memory_controller_1_out_a),
	.memory_controller_1_write_enable_b (main_inst_memory_controller_1_write_enable_b),
	.memory_controller_1_in_b (main_inst_memory_controller_1_in_b),
	.memory_controller_1_enable_b (main_inst_memory_controller_1_enable_b),
	.memory_controller_1_address_b (main_inst_memory_controller_1_address_b),
	.memory_controller_1_size_b (main_inst_memory_controller_1_size_b),
	.memory_controller_1_out_b (main_inst_memory_controller_1_out_b),
	.memory_controller_0_write_enable_a (main_inst_memory_controller_0_write_enable_a),
	.memory_controller_0_in_a (main_inst_memory_controller_0_in_a),
	.memory_controller_0_enable_a (main_inst_memory_controller_0_enable_a),
	.memory_controller_0_address_a (main_inst_memory_controller_0_address_a),
	.memory_controller_0_size_a (main_inst_memory_controller_0_size_a),
	.memory_controller_0_out_a (main_inst_memory_controller_0_out_a),
	.memory_controller_0_write_enable_b (main_inst_memory_controller_0_write_enable_b),
	.memory_controller_0_in_b (main_inst_memory_controller_0_in_b),
	.memory_controller_0_enable_b (main_inst_memory_controller_0_enable_b),
	.memory_controller_0_address_b (main_inst_memory_controller_0_address_b),
	.memory_controller_0_size_b (main_inst_memory_controller_0_size_b),
	.memory_controller_0_out_b (main_inst_memory_controller_0_out_b)
);



memory_controller_1 memory_controller_1_inst (
	.clk (memory_controller_1_inst_clk),
	.memory_controller_waitrequest (memory_controller_1_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_1_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_1_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_1_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_1_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_1_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_1_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_1_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_1_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_1_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_1_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_1_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_1_inst_memory_controller_out_reg_b)
);



memory_controller_0 memory_controller_0_inst (
	.clk (memory_controller_0_inst_clk),
	.memory_controller_waitrequest (memory_controller_0_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_0_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_0_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_0_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_0_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_0_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_0_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_0_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_0_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_0_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_0_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_0_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_0_inst_memory_controller_out_reg_b)
);



always @(*) begin
	main_inst_clk = clk;
end
always @(*) begin
	main_inst_reset = reset;
end
always @(*) begin
	main_inst_start = start;
end
always @(*) begin
	main_inst_memory_controller_1_out_a = memory_controller_1_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_1_out_b = memory_controller_1_inst_memory_controller_out_reg_b;
end
always @(*) begin
	main_inst_memory_controller_0_out_a = memory_controller_0_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_0_out_b = memory_controller_0_inst_memory_controller_out_reg_b;
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_finish_reg <= 1'd0;
	end
	if (main_inst_finish) begin
		main_inst_finish_reg <= 1'd1;
	end
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_return_val_reg <= 0;
	end
	if (main_inst_finish) begin
		main_inst_return_val_reg <= main_inst_return_val;
	end
end
always @(*) begin
	memory_controller_1_inst_clk = clk;
end
assign memory_controller_1_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_1_inst_memory_controller_address_a = main_inst_memory_controller_1_address_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_a = main_inst_memory_controller_1_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_a = main_inst_memory_controller_1_size_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_a = main_inst_memory_controller_1_write_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_a = main_inst_memory_controller_1_in_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_address_b = main_inst_memory_controller_1_address_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_b = main_inst_memory_controller_1_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_b = main_inst_memory_controller_1_size_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_b = main_inst_memory_controller_1_write_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_b = main_inst_memory_controller_1_in_b;
end
always @(*) begin
	memory_controller_0_inst_clk = clk;
end
assign memory_controller_0_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_0_inst_memory_controller_address_a = main_inst_memory_controller_0_address_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_a = main_inst_memory_controller_0_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_a = main_inst_memory_controller_0_size_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_a = main_inst_memory_controller_0_write_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_a = main_inst_memory_controller_0_in_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_address_b = main_inst_memory_controller_0_address_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_b = main_inst_memory_controller_0_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_b = main_inst_memory_controller_0_size_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_b = main_inst_memory_controller_0_write_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_b = main_inst_memory_controller_0_in_b;
end
always @(*) begin
	finish = main_inst_finish;
end
always @(*) begin
	return_val = main_inst_return_val;
end

endmodule
`timescale 1 ns / 1 ns
module memory_controller_0
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcY0_address_a;
reg [5:0] main_opcY0_address_b;
reg main_opcY0_write_enable_a;
reg main_opcY0_write_enable_b;
reg [31:0] main_opcY0_in_a;
reg [31:0] main_opcY0_in_b;
wire [31:0] main_opcY0_out_a;
wire [31:0] main_opcY0_out_b;

// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY0 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY0_address_a ),
	.q_a( main_opcY0_out_a ),
	.address_b( main_opcY0_address_b ),
	.q_b( main_opcY0_out_b )
);
defparam main_opcY0.width_a = 32;
defparam main_opcY0.widthad_a = 6;
defparam main_opcY0.numwords_a = 62;
defparam main_opcY0.width_b = 32;
defparam main_opcY0.widthad_b = 6;
defparam main_opcY0.numwords_b = 62;
defparam main_opcY0.latency = ram_latency;
defparam main_opcY0.init_file = {`MEM_INIT_DIR, "main_opcY0.mif"};

reg [5:0] main_opcY1_address_a;
reg [5:0] main_opcY1_address_b;
reg main_opcY1_write_enable_a;
reg main_opcY1_write_enable_b;
reg [31:0] main_opcY1_in_a;
reg [31:0] main_opcY1_in_b;
wire [31:0] main_opcY1_out_a;
wire [31:0] main_opcY1_out_b;

// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY1_address_a ),
	.q_a( main_opcY1_out_a ),
	.address_b( main_opcY1_address_b ),
	.q_b( main_opcY1_out_b )
);
defparam main_opcY1.width_a = 32;
defparam main_opcY1.widthad_a = 6;
defparam main_opcY1.numwords_a = 62;
defparam main_opcY1.width_b = 32;
defparam main_opcY1.widthad_b = 6;
defparam main_opcY1.numwords_b = 62;
defparam main_opcY1.latency = ram_latency;
defparam main_opcY1.init_file = {`MEM_INIT_DIR, "main_opcY1.mif"};

reg [5:0] main_opcY2_address_a;
reg [5:0] main_opcY2_address_b;
reg main_opcY2_write_enable_a;
reg main_opcY2_write_enable_b;
reg [31:0] main_opcY2_in_a;
reg [31:0] main_opcY2_in_b;
wire [31:0] main_opcY2_out_a;
wire [31:0] main_opcY2_out_b;

// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY2_address_a ),
	.q_a( main_opcY2_out_a ),
	.address_b( main_opcY2_address_b ),
	.q_b( main_opcY2_out_b )
);
defparam main_opcY2.width_a = 32;
defparam main_opcY2.widthad_a = 6;
defparam main_opcY2.numwords_a = 62;
defparam main_opcY2.width_b = 32;
defparam main_opcY2.widthad_b = 6;
defparam main_opcY2.numwords_b = 62;
defparam main_opcY2.latency = ram_latency;
defparam main_opcY2.init_file = {`MEM_INIT_DIR, "main_opcY2.mif"};

reg [5:0] main_opcY3_address_a;
reg [5:0] main_opcY3_address_b;
reg main_opcY3_write_enable_a;
reg main_opcY3_write_enable_b;
reg [31:0] main_opcY3_in_a;
reg [31:0] main_opcY3_in_b;
wire [31:0] main_opcY3_out_a;
wire [31:0] main_opcY3_out_b;

// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY3_address_a ),
	.q_a( main_opcY3_out_a ),
	.address_b( main_opcY3_address_b ),
	.q_b( main_opcY3_out_b )
);
defparam main_opcY3.width_a = 32;
defparam main_opcY3.widthad_a = 6;
defparam main_opcY3.numwords_a = 62;
defparam main_opcY3.width_b = 32;
defparam main_opcY3.widthad_b = 6;
defparam main_opcY3.numwords_b = 62;
defparam main_opcY3.latency = ram_latency;
defparam main_opcY3.init_file = {`MEM_INIT_DIR, "main_opcY3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcY0_a;
assign select_main_opcY0_a = (tag_a == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_a;
wire [31:0] memory_controller_main_opcY0_out_a;
assign memory_controller_main_opcY0_out_a = {32{ select_main_opcY0_reg_a[ram_latency]}} & main_opcY0_out_a;

wire select_main_opcY1_a;
assign select_main_opcY1_a = (tag_a == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_a;
wire [31:0] memory_controller_main_opcY1_out_a;
assign memory_controller_main_opcY1_out_a = {32{ select_main_opcY1_reg_a[ram_latency]}} & main_opcY1_out_a;

wire select_main_opcY2_a;
assign select_main_opcY2_a = (tag_a == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_a;
wire [31:0] memory_controller_main_opcY2_out_a;
assign memory_controller_main_opcY2_out_a = {32{ select_main_opcY2_reg_a[ram_latency]}} & main_opcY2_out_a;

wire select_main_opcY3_a;
assign select_main_opcY3_a = (tag_a == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_a;
wire [31:0] memory_controller_main_opcY3_out_a;
assign memory_controller_main_opcY3_out_a = {32{ select_main_opcY3_reg_a[ram_latency]}} & main_opcY3_out_a;

always @(*)
begin
main_opcY0_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY0_a}};
main_opcY0_write_enable_a = memory_controller_write_enable_a & select_main_opcY0_a;
main_opcY0_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY1_a}};
main_opcY1_write_enable_a = memory_controller_write_enable_a & select_main_opcY1_a;
main_opcY1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY2_a}};
main_opcY2_write_enable_a = memory_controller_write_enable_a & select_main_opcY2_a;
main_opcY2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY3_a}};
main_opcY3_write_enable_a = memory_controller_write_enable_a & select_main_opcY3_a;
main_opcY3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcY0_reg_a[ram_latency]}} | {2{select_main_opcY1_reg_a[ram_latency]}} | {2{select_main_opcY2_reg_a[ram_latency]}} | {2{select_main_opcY3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcY0_out_a | memory_controller_main_opcY1_out_a | memory_controller_main_opcY2_out_a | memory_controller_main_opcY3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_a[j+1] <= select_main_opcY0_reg_a[j];
select_main_opcY1_reg_a[j+1] <= select_main_opcY1_reg_a[j];
select_main_opcY2_reg_a[j+1] <= select_main_opcY2_reg_a[j];
select_main_opcY3_reg_a[j+1] <= select_main_opcY3_reg_a[j];
end
always @(*)
begin
select_main_opcY0_reg_a[0] <= select_main_opcY0_a;
select_main_opcY1_reg_a[0] <= select_main_opcY1_a;
select_main_opcY2_reg_a[0] <= select_main_opcY2_a;
select_main_opcY3_reg_a[0] <= select_main_opcY3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcY0_b;
assign select_main_opcY0_b = (tag_b == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_b;
wire [31:0] memory_controller_main_opcY0_out_b;
assign memory_controller_main_opcY0_out_b = {32{ select_main_opcY0_reg_b[ram_latency]}} & main_opcY0_out_b;

wire select_main_opcY1_b;
assign select_main_opcY1_b = (tag_b == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_b;
wire [31:0] memory_controller_main_opcY1_out_b;
assign memory_controller_main_opcY1_out_b = {32{ select_main_opcY1_reg_b[ram_latency]}} & main_opcY1_out_b;

wire select_main_opcY2_b;
assign select_main_opcY2_b = (tag_b == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_b;
wire [31:0] memory_controller_main_opcY2_out_b;
assign memory_controller_main_opcY2_out_b = {32{ select_main_opcY2_reg_b[ram_latency]}} & main_opcY2_out_b;

wire select_main_opcY3_b;
assign select_main_opcY3_b = (tag_b == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_b;
wire [31:0] memory_controller_main_opcY3_out_b;
assign memory_controller_main_opcY3_out_b = {32{ select_main_opcY3_reg_b[ram_latency]}} & main_opcY3_out_b;

always @(*)
begin
main_opcY0_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY0_b}};
main_opcY0_write_enable_b = memory_controller_write_enable_b & select_main_opcY0_b;
main_opcY0_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY1_b}};
main_opcY1_write_enable_b = memory_controller_write_enable_b & select_main_opcY1_b;
main_opcY1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY2_b}};
main_opcY2_write_enable_b = memory_controller_write_enable_b & select_main_opcY2_b;
main_opcY2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY3_b}};
main_opcY3_write_enable_b = memory_controller_write_enable_b & select_main_opcY3_b;
main_opcY3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcY0_reg_b[ram_latency]}} | {2{select_main_opcY1_reg_b[ram_latency]}} | {2{select_main_opcY2_reg_b[ram_latency]}} | {2{select_main_opcY3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcY0_out_b | memory_controller_main_opcY1_out_b | memory_controller_main_opcY2_out_b | memory_controller_main_opcY3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_b[j+1] <= select_main_opcY0_reg_b[j];
select_main_opcY1_reg_b[j+1] <= select_main_opcY1_reg_b[j];
select_main_opcY2_reg_b[j+1] <= select_main_opcY2_reg_b[j];
select_main_opcY3_reg_b[j+1] <= select_main_opcY3_reg_b[j];
end
always @(*)
begin
select_main_opcY0_reg_b[0] <= select_main_opcY0_b;
select_main_opcY1_reg_b[0] <= select_main_opcY1_b;
select_main_opcY2_reg_b[0] <= select_main_opcY2_b;
select_main_opcY3_reg_b[0] <= select_main_opcY3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module memory_controller_1
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcX1_address_a;
reg [5:0] main_opcX1_address_b;
reg main_opcX1_write_enable_a;
reg main_opcX1_write_enable_b;
reg [31:0] main_opcX1_in_a;
reg [31:0] main_opcX1_in_b;
wire [31:0] main_opcX1_out_a;
wire [31:0] main_opcX1_out_b;

// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX1_address_a ),
	.q_a( main_opcX1_out_a ),
	.address_b( main_opcX1_address_b ),
	.q_b( main_opcX1_out_b )
);
defparam main_opcX1.width_a = 32;
defparam main_opcX1.widthad_a = 6;
defparam main_opcX1.numwords_a = 62;
defparam main_opcX1.width_b = 32;
defparam main_opcX1.widthad_b = 6;
defparam main_opcX1.numwords_b = 62;
defparam main_opcX1.latency = ram_latency;
defparam main_opcX1.init_file = {`MEM_INIT_DIR, "main_opcX1.mif"};

reg [5:0] main_opcX2_address_a;
reg [5:0] main_opcX2_address_b;
reg main_opcX2_write_enable_a;
reg main_opcX2_write_enable_b;
reg [31:0] main_opcX2_in_a;
reg [31:0] main_opcX2_in_b;
wire [31:0] main_opcX2_out_a;
wire [31:0] main_opcX2_out_b;

// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX2_address_a ),
	.q_a( main_opcX2_out_a ),
	.address_b( main_opcX2_address_b ),
	.q_b( main_opcX2_out_b )
);
defparam main_opcX2.width_a = 32;
defparam main_opcX2.widthad_a = 6;
defparam main_opcX2.numwords_a = 62;
defparam main_opcX2.width_b = 32;
defparam main_opcX2.widthad_b = 6;
defparam main_opcX2.numwords_b = 62;
defparam main_opcX2.latency = ram_latency;
defparam main_opcX2.init_file = {`MEM_INIT_DIR, "main_opcX2.mif"};

reg [5:0] main_opcX3_address_a;
reg [5:0] main_opcX3_address_b;
reg main_opcX3_write_enable_a;
reg main_opcX3_write_enable_b;
reg [31:0] main_opcX3_in_a;
reg [31:0] main_opcX3_in_b;
wire [31:0] main_opcX3_out_a;
wire [31:0] main_opcX3_out_b;

// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
rom_dual_port main_opcX3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX3_address_a ),
	.q_a( main_opcX3_out_a ),
	.address_b( main_opcX3_address_b ),
	.q_b( main_opcX3_out_b )
);
defparam main_opcX3.width_a = 32;
defparam main_opcX3.widthad_a = 6;
defparam main_opcX3.numwords_a = 62;
defparam main_opcX3.width_b = 32;
defparam main_opcX3.widthad_b = 6;
defparam main_opcX3.numwords_b = 62;
defparam main_opcX3.latency = ram_latency;
defparam main_opcX3.init_file = {`MEM_INIT_DIR, "main_opcX3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcX1_a;
assign select_main_opcX1_a = (tag_a == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_a;
wire [31:0] memory_controller_main_opcX1_out_a;
assign memory_controller_main_opcX1_out_a = {32{ select_main_opcX1_reg_a[ram_latency]}} & main_opcX1_out_a;

wire select_main_opcX2_a;
assign select_main_opcX2_a = (tag_a == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_a;
wire [31:0] memory_controller_main_opcX2_out_a;
assign memory_controller_main_opcX2_out_a = {32{ select_main_opcX2_reg_a[ram_latency]}} & main_opcX2_out_a;

wire select_main_opcX3_a;
assign select_main_opcX3_a = (tag_a == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_a;
wire [31:0] memory_controller_main_opcX3_out_a;
assign memory_controller_main_opcX3_out_a = {32{ select_main_opcX3_reg_a[ram_latency]}} & main_opcX3_out_a;

always @(*)
begin
main_opcX1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX1_a}};
main_opcX1_write_enable_a = memory_controller_write_enable_a & select_main_opcX1_a;
main_opcX1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX2_a}};
main_opcX2_write_enable_a = memory_controller_write_enable_a & select_main_opcX2_a;
main_opcX2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX3_a}};
main_opcX3_write_enable_a = memory_controller_write_enable_a & select_main_opcX3_a;
main_opcX3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcX1_reg_a[ram_latency]}} | {2{select_main_opcX2_reg_a[ram_latency]}} | {2{select_main_opcX3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcX1_out_a | memory_controller_main_opcX2_out_a | memory_controller_main_opcX3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_a[j+1] <= select_main_opcX1_reg_a[j];
select_main_opcX2_reg_a[j+1] <= select_main_opcX2_reg_a[j];
select_main_opcX3_reg_a[j+1] <= select_main_opcX3_reg_a[j];
end
always @(*)
begin
select_main_opcX1_reg_a[0] <= select_main_opcX1_a;
select_main_opcX2_reg_a[0] <= select_main_opcX2_a;
select_main_opcX3_reg_a[0] <= select_main_opcX3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcX1_b;
assign select_main_opcX1_b = (tag_b == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_b;
wire [31:0] memory_controller_main_opcX1_out_b;
assign memory_controller_main_opcX1_out_b = {32{ select_main_opcX1_reg_b[ram_latency]}} & main_opcX1_out_b;

wire select_main_opcX2_b;
assign select_main_opcX2_b = (tag_b == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_b;
wire [31:0] memory_controller_main_opcX2_out_b;
assign memory_controller_main_opcX2_out_b = {32{ select_main_opcX2_reg_b[ram_latency]}} & main_opcX2_out_b;

wire select_main_opcX3_b;
assign select_main_opcX3_b = (tag_b == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_b;
wire [31:0] memory_controller_main_opcX3_out_b;
assign memory_controller_main_opcX3_out_b = {32{ select_main_opcX3_reg_b[ram_latency]}} & main_opcX3_out_b;

always @(*)
begin
main_opcX1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX1_b}};
main_opcX1_write_enable_b = memory_controller_write_enable_b & select_main_opcX1_b;
main_opcX1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX2_b}};
main_opcX2_write_enable_b = memory_controller_write_enable_b & select_main_opcX2_b;
main_opcX2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX3_b}};
main_opcX3_write_enable_b = memory_controller_write_enable_b & select_main_opcX3_b;
main_opcX3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcX1_reg_b[ram_latency]}} | {2{select_main_opcX2_reg_b[ram_latency]}} | {2{select_main_opcX3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcX1_out_b | memory_controller_main_opcX2_out_b | memory_controller_main_opcX3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_b[j+1] <= select_main_opcX1_reg_b[j];
select_main_opcX2_reg_b[j+1] <= select_main_opcX2_reg_b[j];
select_main_opcX3_reg_b[j+1] <= select_main_opcX3_reg_b[j];
end
always @(*)
begin
select_main_opcX1_reg_b[0] <= select_main_opcX1_b;
select_main_opcX2_reg_b[0] <= select_main_opcX2_b;
select_main_opcX3_reg_b[0] <= select_main_opcX3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module main
(
	clk,
	reset,
	start,
	finish,
	return_val,
	memory_controller_1_write_enable_a,
	memory_controller_1_in_a,
	memory_controller_1_enable_a,
	memory_controller_1_address_a,
	memory_controller_1_size_a,
	memory_controller_1_out_a,
	memory_controller_1_write_enable_b,
	memory_controller_1_in_b,
	memory_controller_1_enable_b,
	memory_controller_1_address_b,
	memory_controller_1_size_b,
	memory_controller_1_out_b,
	memory_controller_0_write_enable_a,
	memory_controller_0_in_a,
	memory_controller_0_enable_a,
	memory_controller_0_address_a,
	memory_controller_0_size_a,
	memory_controller_0_out_a,
	memory_controller_0_write_enable_b,
	memory_controller_0_in_b,
	memory_controller_0_enable_b,
	memory_controller_0_address_b,
	memory_controller_0_size_b,
	memory_controller_0_out_b
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_main_BB_entry_1 = 9'd1;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_2 = 9'd2;
parameter [8:0] LEGUP_F_main_BB_NodeBlock7_3 = 9'd3;
parameter [8:0] LEGUP_F_main_BB_NodeBlock5_4 = 9'd4;
parameter [8:0] LEGUP_F_main_BB_LeafBlock3_5 = 9'd5;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_backedge_6 = 9'd6;
parameter [8:0] LEGUP_F_main_BB_for_cond377_preheader_preheader_7 = 9'd7;
parameter [8:0] LEGUP_F_main_BB_NodeBlock1_8 = 9'd8;
parameter [8:0] LEGUP_F_main_BB_NodeBlock_9 = 9'd9;
parameter [8:0] LEGUP_F_main_BB_LeafBlock_10 = 9'd10;
parameter [8:0] LEGUP_F_main_BB_sw_bb_11 = 9'd11;
parameter [8:0] LEGUP_F_main_BB_sw_bb_12 = 9'd12;
parameter [8:0] LEGUP_F_main_BB_sw_bb_13 = 9'd13;
parameter [8:0] LEGUP_F_main_BB_sw_bb_14 = 9'd14;
parameter [8:0] LEGUP_F_main_BB_sw_bb_15 = 9'd15;
parameter [8:0] LEGUP_F_main_BB_sw_bb_16 = 9'd16;
parameter [8:0] LEGUP_F_main_BB_sw_bb_17 = 9'd17;
parameter [8:0] LEGUP_F_main_BB_sw_bb_18 = 9'd18;
parameter [8:0] LEGUP_F_main_BB_sw_bb_19 = 9'd19;
parameter [8:0] LEGUP_F_main_BB_sw_bb_20 = 9'd20;
parameter [8:0] LEGUP_F_main_BB_sw_bb_21 = 9'd21;
parameter [8:0] LEGUP_F_main_BB_sw_bb_22 = 9'd22;
parameter [8:0] LEGUP_F_main_BB_sw_bb_23 = 9'd23;
parameter [8:0] LEGUP_F_main_BB_sw_bb_24 = 9'd24;
parameter [8:0] LEGUP_F_main_BB_sw_bb_25 = 9'd25;
parameter [8:0] LEGUP_F_main_BB_sw_bb_26 = 9'd26;
parameter [8:0] LEGUP_F_main_BB_sw_bb_27 = 9'd27;
parameter [8:0] LEGUP_F_main_BB_sw_bb_28 = 9'd28;
parameter [8:0] LEGUP_F_main_BB_sw_bb_29 = 9'd29;
parameter [8:0] LEGUP_F_main_BB_sw_bb_30 = 9'd30;
parameter [8:0] LEGUP_F_main_BB_sw_bb_31 = 9'd31;
parameter [8:0] LEGUP_F_main_BB_sw_bb_32 = 9'd32;
parameter [8:0] LEGUP_F_main_BB_sw_bb_33 = 9'd33;
parameter [8:0] LEGUP_F_main_BB_sw_bb_34 = 9'd34;
parameter [8:0] LEGUP_F_main_BB_sw_bb_35 = 9'd35;
parameter [8:0] LEGUP_F_main_BB_sw_bb_36 = 9'd36;
parameter [8:0] LEGUP_F_main_BB_sw_bb_37 = 9'd37;
parameter [8:0] LEGUP_F_main_BB_sw_bb_38 = 9'd38;
parameter [8:0] LEGUP_F_main_BB_sw_bb_39 = 9'd39;
parameter [8:0] LEGUP_F_main_BB_sw_bb_40 = 9'd40;
parameter [8:0] LEGUP_F_main_BB_sw_bb_41 = 9'd41;
parameter [8:0] LEGUP_F_main_BB_for_cond125_preheader_42 = 9'd42;
parameter [8:0] LEGUP_F_main_BB_for_cond125_preheader_43 = 9'd43;
parameter [8:0] LEGUP_F_main_BB_for_cond125_preheader_44 = 9'd44;
parameter [8:0] LEGUP_F_main_BB_for_cond125_preheader_45 = 9'd45;
parameter [8:0] LEGUP_F_main_BB_for_cond125_preheader_46 = 9'd46;
parameter [8:0] LEGUP_F_main_BB_for_cond125_preheader_47 = 9'd47;
parameter [8:0] LEGUP_F_main_BB_for_body135_preheader_48 = 9'd48;
parameter [8:0] LEGUP_F_main_BB_for_body135_49 = 9'd49;
parameter [8:0] LEGUP_F_main_BB_for_body135_50 = 9'd50;
parameter [8:0] LEGUP_F_main_BB_for_end140_51 = 9'd51;
parameter [8:0] LEGUP_F_main_BB_for_end140_52 = 9'd52;
parameter [8:0] LEGUP_F_main_BB_for_end140_53 = 9'd53;
parameter [8:0] LEGUP_F_main_BB_for_end140_54 = 9'd54;
parameter [8:0] LEGUP_F_main_BB_for_end140_55 = 9'd55;
parameter [8:0] LEGUP_F_main_BB_for_end140_56 = 9'd56;
parameter [8:0] LEGUP_F_main_BB_for_end140_57 = 9'd57;
parameter [8:0] LEGUP_F_main_BB_for_end140_58 = 9'd58;
parameter [8:0] LEGUP_F_main_BB_for_end140_59 = 9'd59;
parameter [8:0] LEGUP_F_main_BB_for_end140_60 = 9'd60;
parameter [8:0] LEGUP_F_main_BB_for_end140_61 = 9'd61;
parameter [8:0] LEGUP_F_main_BB_for_end140_62 = 9'd62;
parameter [8:0] LEGUP_F_main_BB_for_end140_63 = 9'd63;
parameter [8:0] LEGUP_F_main_BB_for_end140_64 = 9'd64;
parameter [8:0] LEGUP_F_main_BB_for_end140_65 = 9'd65;
parameter [8:0] LEGUP_F_main_BB_for_end140_66 = 9'd66;
parameter [8:0] LEGUP_F_main_BB_for_end140_67 = 9'd67;
parameter [8:0] LEGUP_F_main_BB_for_end140_68 = 9'd68;
parameter [8:0] LEGUP_F_main_BB_for_end140_69 = 9'd69;
parameter [8:0] LEGUP_F_main_BB_for_end140_70 = 9'd70;
parameter [8:0] LEGUP_F_main_BB_for_end140_71 = 9'd71;
parameter [8:0] LEGUP_F_main_BB_for_end140_72 = 9'd72;
parameter [8:0] LEGUP_F_main_BB_for_end140_73 = 9'd73;
parameter [8:0] LEGUP_F_main_BB_for_end140_74 = 9'd74;
parameter [8:0] LEGUP_F_main_BB_for_end140_75 = 9'd75;
parameter [8:0] LEGUP_F_main_BB_for_end140_76 = 9'd76;
parameter [8:0] LEGUP_F_main_BB_for_end140_77 = 9'd77;
parameter [8:0] LEGUP_F_main_BB_for_end140_78 = 9'd78;
parameter [8:0] LEGUP_F_main_BB_for_end140_79 = 9'd79;
parameter [8:0] LEGUP_F_main_BB_for_end140_80 = 9'd80;
parameter [8:0] LEGUP_F_main_BB_for_end140_81 = 9'd81;
parameter [8:0] LEGUP_F_main_BB_for_end140_82 = 9'd82;
parameter [8:0] LEGUP_F_main_BB_for_end140_83 = 9'd83;
parameter [8:0] LEGUP_F_main_BB_for_end140_84 = 9'd84;
parameter [8:0] LEGUP_F_main_BB_for_end140_85 = 9'd85;
parameter [8:0] LEGUP_F_main_BB_for_end140_86 = 9'd86;
parameter [8:0] LEGUP_F_main_BB_sw_bb151_87 = 9'd87;
parameter [8:0] LEGUP_F_main_BB_if_end_88 = 9'd88;
parameter [8:0] LEGUP_F_main_BB_if_end_89 = 9'd89;
parameter [8:0] LEGUP_F_main_BB_if_end_90 = 9'd90;
parameter [8:0] LEGUP_F_main_BB_sw_bb162_91 = 9'd91;
parameter [8:0] LEGUP_F_main_BB_if_end165_92 = 9'd92;
parameter [8:0] LEGUP_F_main_BB_if_end165_93 = 9'd93;
parameter [8:0] LEGUP_F_main_BB_if_end165_94 = 9'd94;
parameter [8:0] LEGUP_F_main_BB_if_end165_95 = 9'd95;
parameter [8:0] LEGUP_F_main_BB_if_end165_96 = 9'd96;
parameter [8:0] LEGUP_F_main_BB_if_end165_97 = 9'd97;
parameter [8:0] LEGUP_F_main_BB_if_end165_98 = 9'd98;
parameter [8:0] LEGUP_F_main_BB_if_end165_99 = 9'd99;
parameter [8:0] LEGUP_F_main_BB_if_end165_100 = 9'd100;
parameter [8:0] LEGUP_F_main_BB_if_end165_101 = 9'd101;
parameter [8:0] LEGUP_F_main_BB_if_end165_102 = 9'd102;
parameter [8:0] LEGUP_F_main_BB_if_end165_103 = 9'd103;
parameter [8:0] LEGUP_F_main_BB_if_end165_104 = 9'd104;
parameter [8:0] LEGUP_F_main_BB_if_end165_105 = 9'd105;
parameter [8:0] LEGUP_F_main_BB_if_end165_106 = 9'd106;
parameter [8:0] LEGUP_F_main_BB_if_end165_107 = 9'd107;
parameter [8:0] LEGUP_F_main_BB_if_end165_108 = 9'd108;
parameter [8:0] LEGUP_F_main_BB_if_end165_109 = 9'd109;
parameter [8:0] LEGUP_F_main_BB_if_end165_110 = 9'd110;
parameter [8:0] LEGUP_F_main_BB_if_end165_111 = 9'd111;
parameter [8:0] LEGUP_F_main_BB_if_end165_112 = 9'd112;
parameter [8:0] LEGUP_F_main_BB_if_end165_113 = 9'd113;
parameter [8:0] LEGUP_F_main_BB_if_end165_114 = 9'd114;
parameter [8:0] LEGUP_F_main_BB_if_end165_115 = 9'd115;
parameter [8:0] LEGUP_F_main_BB_if_end165_116 = 9'd116;
parameter [8:0] LEGUP_F_main_BB_if_end165_117 = 9'd117;
parameter [8:0] LEGUP_F_main_BB_if_end165_118 = 9'd118;
parameter [8:0] LEGUP_F_main_BB_if_end165_119 = 9'd119;
parameter [8:0] LEGUP_F_main_BB_if_end165_120 = 9'd120;
parameter [8:0] LEGUP_F_main_BB_if_end165_121 = 9'd121;
parameter [8:0] LEGUP_F_main_BB_if_end165_122 = 9'd122;
parameter [8:0] LEGUP_F_main_BB_if_end165_123 = 9'd123;
parameter [8:0] LEGUP_F_main_BB_if_end165_124 = 9'd124;
parameter [8:0] LEGUP_F_main_BB_if_then170_125 = 9'd125;
parameter [8:0] LEGUP_F_main_BB_if_then172_126 = 9'd126;
parameter [8:0] LEGUP_F_main_BB_if_then172_127 = 9'd127;
parameter [8:0] LEGUP_F_main_BB_if_then172_128 = 9'd128;
parameter [8:0] LEGUP_F_main_BB_if_then172_129 = 9'd129;
parameter [8:0] LEGUP_F_main_BB_if_then172_130 = 9'd130;
parameter [8:0] LEGUP_F_main_BB_if_then172_131 = 9'd131;
parameter [8:0] LEGUP_F_main_BB_if_then172_132 = 9'd132;
parameter [8:0] LEGUP_F_main_BB_if_then172_133 = 9'd133;
parameter [8:0] LEGUP_F_main_BB_if_then172_134 = 9'd134;
parameter [8:0] LEGUP_F_main_BB_if_then172_135 = 9'd135;
parameter [8:0] LEGUP_F_main_BB_if_then172_136 = 9'd136;
parameter [8:0] LEGUP_F_main_BB_if_then172_137 = 9'd137;
parameter [8:0] LEGUP_F_main_BB_if_then172_138 = 9'd138;
parameter [8:0] LEGUP_F_main_BB_if_then172_139 = 9'd139;
parameter [8:0] LEGUP_F_main_BB_if_then172_140 = 9'd140;
parameter [8:0] LEGUP_F_main_BB_if_then172_141 = 9'd141;
parameter [8:0] LEGUP_F_main_BB_if_then172_142 = 9'd142;
parameter [8:0] LEGUP_F_main_BB_if_then172_143 = 9'd143;
parameter [8:0] LEGUP_F_main_BB_if_then172_144 = 9'd144;
parameter [8:0] LEGUP_F_main_BB_if_then172_145 = 9'd145;
parameter [8:0] LEGUP_F_main_BB_if_then172_146 = 9'd146;
parameter [8:0] LEGUP_F_main_BB_if_then172_147 = 9'd147;
parameter [8:0] LEGUP_F_main_BB_if_then172_148 = 9'd148;
parameter [8:0] LEGUP_F_main_BB_if_then172_149 = 9'd149;
parameter [8:0] LEGUP_F_main_BB_if_then172_150 = 9'd150;
parameter [8:0] LEGUP_F_main_BB_if_then172_151 = 9'd151;
parameter [8:0] LEGUP_F_main_BB_if_then172_152 = 9'd152;
parameter [8:0] LEGUP_F_main_BB_if_then172_153 = 9'd153;
parameter [8:0] LEGUP_F_main_BB_if_then172_154 = 9'd154;
parameter [8:0] LEGUP_F_main_BB_if_then172_155 = 9'd155;
parameter [8:0] LEGUP_F_main_BB_if_then172_156 = 9'd156;
parameter [8:0] LEGUP_F_main_BB_if_then172_157 = 9'd157;
parameter [8:0] LEGUP_F_main_BB_if_then172_158 = 9'd158;
parameter [8:0] LEGUP_F_main_BB_if_then172_159 = 9'd159;
parameter [8:0] LEGUP_F_main_BB_if_else183_160 = 9'd160;
parameter [8:0] LEGUP_F_main_BB_if_then185_161 = 9'd161;
parameter [8:0] LEGUP_F_main_BB_if_then185_162 = 9'd162;
parameter [8:0] LEGUP_F_main_BB_if_then185_163 = 9'd163;
parameter [8:0] LEGUP_F_main_BB_if_then185_164 = 9'd164;
parameter [8:0] LEGUP_F_main_BB_if_then185_165 = 9'd165;
parameter [8:0] LEGUP_F_main_BB_if_then185_166 = 9'd166;
parameter [8:0] LEGUP_F_main_BB_if_then185_167 = 9'd167;
parameter [8:0] LEGUP_F_main_BB_if_then185_168 = 9'd168;
parameter [8:0] LEGUP_F_main_BB_if_then185_169 = 9'd169;
parameter [8:0] LEGUP_F_main_BB_if_then185_170 = 9'd170;
parameter [8:0] LEGUP_F_main_BB_if_then185_171 = 9'd171;
parameter [8:0] LEGUP_F_main_BB_if_then185_172 = 9'd172;
parameter [8:0] LEGUP_F_main_BB_if_then185_173 = 9'd173;
parameter [8:0] LEGUP_F_main_BB_if_then185_174 = 9'd174;
parameter [8:0] LEGUP_F_main_BB_if_then185_175 = 9'd175;
parameter [8:0] LEGUP_F_main_BB_if_then185_176 = 9'd176;
parameter [8:0] LEGUP_F_main_BB_if_then185_177 = 9'd177;
parameter [8:0] LEGUP_F_main_BB_if_then185_178 = 9'd178;
parameter [8:0] LEGUP_F_main_BB_if_then185_179 = 9'd179;
parameter [8:0] LEGUP_F_main_BB_if_then185_180 = 9'd180;
parameter [8:0] LEGUP_F_main_BB_if_then185_181 = 9'd181;
parameter [8:0] LEGUP_F_main_BB_if_then185_182 = 9'd182;
parameter [8:0] LEGUP_F_main_BB_if_then185_183 = 9'd183;
parameter [8:0] LEGUP_F_main_BB_if_then185_184 = 9'd184;
parameter [8:0] LEGUP_F_main_BB_if_then185_185 = 9'd185;
parameter [8:0] LEGUP_F_main_BB_if_then185_186 = 9'd186;
parameter [8:0] LEGUP_F_main_BB_if_then185_187 = 9'd187;
parameter [8:0] LEGUP_F_main_BB_if_then185_188 = 9'd188;
parameter [8:0] LEGUP_F_main_BB_if_then185_189 = 9'd189;
parameter [8:0] LEGUP_F_main_BB_if_then185_190 = 9'd190;
parameter [8:0] LEGUP_F_main_BB_if_then185_191 = 9'd191;
parameter [8:0] LEGUP_F_main_BB_if_then185_192 = 9'd192;
parameter [8:0] LEGUP_F_main_BB_if_then185_193 = 9'd193;
parameter [8:0] LEGUP_F_main_BB_if_then185_194 = 9'd194;
parameter [8:0] LEGUP_F_main_BB_if_else196_195 = 9'd195;
parameter [8:0] LEGUP_F_main_BB_if_else196_196 = 9'd196;
parameter [8:0] LEGUP_F_main_BB_if_else196_197 = 9'd197;
parameter [8:0] LEGUP_F_main_BB_if_else196_198 = 9'd198;
parameter [8:0] LEGUP_F_main_BB_if_else196_199 = 9'd199;
parameter [8:0] LEGUP_F_main_BB_if_else196_200 = 9'd200;
parameter [8:0] LEGUP_F_main_BB_if_else196_201 = 9'd201;
parameter [8:0] LEGUP_F_main_BB_if_else196_202 = 9'd202;
parameter [8:0] LEGUP_F_main_BB_if_else196_203 = 9'd203;
parameter [8:0] LEGUP_F_main_BB_if_else196_204 = 9'd204;
parameter [8:0] LEGUP_F_main_BB_if_else196_205 = 9'd205;
parameter [8:0] LEGUP_F_main_BB_if_else196_206 = 9'd206;
parameter [8:0] LEGUP_F_main_BB_if_else196_207 = 9'd207;
parameter [8:0] LEGUP_F_main_BB_if_else196_208 = 9'd208;
parameter [8:0] LEGUP_F_main_BB_if_else196_209 = 9'd209;
parameter [8:0] LEGUP_F_main_BB_if_else196_210 = 9'd210;
parameter [8:0] LEGUP_F_main_BB_if_else196_211 = 9'd211;
parameter [8:0] LEGUP_F_main_BB_if_else196_212 = 9'd212;
parameter [8:0] LEGUP_F_main_BB_if_else196_213 = 9'd213;
parameter [8:0] LEGUP_F_main_BB_if_else196_214 = 9'd214;
parameter [8:0] LEGUP_F_main_BB_if_else196_215 = 9'd215;
parameter [8:0] LEGUP_F_main_BB_if_else196_216 = 9'd216;
parameter [8:0] LEGUP_F_main_BB_if_else196_217 = 9'd217;
parameter [8:0] LEGUP_F_main_BB_if_else196_218 = 9'd218;
parameter [8:0] LEGUP_F_main_BB_if_else196_219 = 9'd219;
parameter [8:0] LEGUP_F_main_BB_if_else196_220 = 9'd220;
parameter [8:0] LEGUP_F_main_BB_if_else196_221 = 9'd221;
parameter [8:0] LEGUP_F_main_BB_if_else196_222 = 9'd222;
parameter [8:0] LEGUP_F_main_BB_if_else196_223 = 9'd223;
parameter [8:0] LEGUP_F_main_BB_if_else196_224 = 9'd224;
parameter [8:0] LEGUP_F_main_BB_if_else196_225 = 9'd225;
parameter [8:0] LEGUP_F_main_BB_if_else196_226 = 9'd226;
parameter [8:0] LEGUP_F_main_BB_if_else196_227 = 9'd227;
parameter [8:0] LEGUP_F_main_BB_if_then198_228 = 9'd228;
parameter [8:0] LEGUP_F_main_BB_if_then198_229 = 9'd229;
parameter [8:0] LEGUP_F_main_BB_if_then198_230 = 9'd230;
parameter [8:0] LEGUP_F_main_BB_if_then198_231 = 9'd231;
parameter [8:0] LEGUP_F_main_BB_if_then198_232 = 9'd232;
parameter [8:0] LEGUP_F_main_BB_if_then198_233 = 9'd233;
parameter [8:0] LEGUP_F_main_BB_if_then198_234 = 9'd234;
parameter [8:0] LEGUP_F_main_BB_if_then198_235 = 9'd235;
parameter [8:0] LEGUP_F_main_BB_if_then198_236 = 9'd236;
parameter [8:0] LEGUP_F_main_BB_if_then198_237 = 9'd237;
parameter [8:0] LEGUP_F_main_BB_if_then198_238 = 9'd238;
parameter [8:0] LEGUP_F_main_BB_if_then198_239 = 9'd239;
parameter [8:0] LEGUP_F_main_BB_if_then198_240 = 9'd240;
parameter [8:0] LEGUP_F_main_BB_if_then198_241 = 9'd241;
parameter [8:0] LEGUP_F_main_BB_if_then198_242 = 9'd242;
parameter [8:0] LEGUP_F_main_BB_if_then198_243 = 9'd243;
parameter [8:0] LEGUP_F_main_BB_if_then198_244 = 9'd244;
parameter [8:0] LEGUP_F_main_BB_if_then198_245 = 9'd245;
parameter [8:0] LEGUP_F_main_BB_if_then198_246 = 9'd246;
parameter [8:0] LEGUP_F_main_BB_if_then198_247 = 9'd247;
parameter [8:0] LEGUP_F_main_BB_if_then198_248 = 9'd248;
parameter [8:0] LEGUP_F_main_BB_if_then198_249 = 9'd249;
parameter [8:0] LEGUP_F_main_BB_if_then198_250 = 9'd250;
parameter [8:0] LEGUP_F_main_BB_if_then198_251 = 9'd251;
parameter [8:0] LEGUP_F_main_BB_if_then198_252 = 9'd252;
parameter [8:0] LEGUP_F_main_BB_if_then198_253 = 9'd253;
parameter [8:0] LEGUP_F_main_BB_if_then198_254 = 9'd254;
parameter [8:0] LEGUP_F_main_BB_if_then198_255 = 9'd255;
parameter [8:0] LEGUP_F_main_BB_if_then198_256 = 9'd256;
parameter [8:0] LEGUP_F_main_BB_if_then198_257 = 9'd257;
parameter [8:0] LEGUP_F_main_BB_if_then198_258 = 9'd258;
parameter [8:0] LEGUP_F_main_BB_if_then198_259 = 9'd259;
parameter [8:0] LEGUP_F_main_BB_if_then198_260 = 9'd260;
parameter [8:0] LEGUP_F_main_BB_if_else209_261 = 9'd261;
parameter [8:0] LEGUP_F_main_BB_if_else209_262 = 9'd262;
parameter [8:0] LEGUP_F_main_BB_if_else209_263 = 9'd263;
parameter [8:0] LEGUP_F_main_BB_if_else209_264 = 9'd264;
parameter [8:0] LEGUP_F_main_BB_if_else209_265 = 9'd265;
parameter [8:0] LEGUP_F_main_BB_if_else209_266 = 9'd266;
parameter [8:0] LEGUP_F_main_BB_if_else209_267 = 9'd267;
parameter [8:0] LEGUP_F_main_BB_if_else209_268 = 9'd268;
parameter [8:0] LEGUP_F_main_BB_if_else209_269 = 9'd269;
parameter [8:0] LEGUP_F_main_BB_if_else209_270 = 9'd270;
parameter [8:0] LEGUP_F_main_BB_if_else209_271 = 9'd271;
parameter [8:0] LEGUP_F_main_BB_if_else209_272 = 9'd272;
parameter [8:0] LEGUP_F_main_BB_if_else209_273 = 9'd273;
parameter [8:0] LEGUP_F_main_BB_if_else209_274 = 9'd274;
parameter [8:0] LEGUP_F_main_BB_if_else209_275 = 9'd275;
parameter [8:0] LEGUP_F_main_BB_if_else209_276 = 9'd276;
parameter [8:0] LEGUP_F_main_BB_if_else209_277 = 9'd277;
parameter [8:0] LEGUP_F_main_BB_if_else209_278 = 9'd278;
parameter [8:0] LEGUP_F_main_BB_if_else209_279 = 9'd279;
parameter [8:0] LEGUP_F_main_BB_if_else209_280 = 9'd280;
parameter [8:0] LEGUP_F_main_BB_if_else209_281 = 9'd281;
parameter [8:0] LEGUP_F_main_BB_if_else209_282 = 9'd282;
parameter [8:0] LEGUP_F_main_BB_if_else209_283 = 9'd283;
parameter [8:0] LEGUP_F_main_BB_if_else209_284 = 9'd284;
parameter [8:0] LEGUP_F_main_BB_if_else209_285 = 9'd285;
parameter [8:0] LEGUP_F_main_BB_if_else209_286 = 9'd286;
parameter [8:0] LEGUP_F_main_BB_if_else209_287 = 9'd287;
parameter [8:0] LEGUP_F_main_BB_if_else209_288 = 9'd288;
parameter [8:0] LEGUP_F_main_BB_if_else209_289 = 9'd289;
parameter [8:0] LEGUP_F_main_BB_if_else209_290 = 9'd290;
parameter [8:0] LEGUP_F_main_BB_if_else209_291 = 9'd291;
parameter [8:0] LEGUP_F_main_BB_if_else209_292 = 9'd292;
parameter [8:0] LEGUP_F_main_BB_if_else209_293 = 9'd293;
parameter [8:0] LEGUP_F_main_BB_if_else223_294 = 9'd294;
parameter [8:0] LEGUP_F_main_BB_if_then225_295 = 9'd295;
parameter [8:0] LEGUP_F_main_BB_if_then225_296 = 9'd296;
parameter [8:0] LEGUP_F_main_BB_if_then225_297 = 9'd297;
parameter [8:0] LEGUP_F_main_BB_NodeBlock16_298 = 9'd298;
parameter [8:0] LEGUP_F_main_BB_LeafBlock14_299 = 9'd299;
parameter [8:0] LEGUP_F_main_BB_LeafBlock12_300 = 9'd300;
parameter [8:0] LEGUP_F_main_BB_if_then232_301 = 9'd301;
parameter [8:0] LEGUP_F_main_BB_if_then232_302 = 9'd302;
parameter [8:0] LEGUP_F_main_BB_if_then232_303 = 9'd303;
parameter [8:0] LEGUP_F_main_BB_if_then239_304 = 9'd304;
parameter [8:0] LEGUP_F_main_BB_if_then239_305 = 9'd305;
parameter [8:0] LEGUP_F_main_BB_if_then239_306 = 9'd306;
parameter [8:0] LEGUP_F_main_BB_if_else244_307 = 9'd307;
parameter [8:0] LEGUP_F_main_BB_if_else244_308 = 9'd308;
parameter [8:0] LEGUP_F_main_BB_if_else244_309 = 9'd309;
parameter [8:0] LEGUP_F_main_BB_if_end252_310 = 9'd310;
parameter [8:0] LEGUP_F_main_BB_if_end252_311 = 9'd311;
parameter [8:0] LEGUP_F_main_BB_if_end252_312 = 9'd312;
parameter [8:0] LEGUP_F_main_BB_if_end252_313 = 9'd313;
parameter [8:0] LEGUP_F_main_BB_if_then264_314 = 9'd314;
parameter [8:0] LEGUP_F_main_BB_if_then264_315 = 9'd315;
parameter [8:0] LEGUP_F_main_BB_if_else269_316 = 9'd316;
parameter [8:0] LEGUP_F_main_BB_if_then271_317 = 9'd317;
parameter [8:0] LEGUP_F_main_BB_if_end274_318 = 9'd318;
parameter [8:0] LEGUP_F_main_BB_sw_bb279_319 = 9'd319;
parameter [8:0] LEGUP_F_main_BB_if_then281_320 = 9'd320;
parameter [8:0] LEGUP_F_main_BB_if_end283_321 = 9'd321;
parameter [8:0] LEGUP_F_main_BB_if_end283_322 = 9'd322;
parameter [8:0] LEGUP_F_main_BB_if_end283_323 = 9'd323;
parameter [8:0] LEGUP_F_main_BB_if_end283_324 = 9'd324;
parameter [8:0] LEGUP_F_main_BB_if_end283_325 = 9'd325;
parameter [8:0] LEGUP_F_main_BB_if_end283_326 = 9'd326;
parameter [8:0] LEGUP_F_main_BB_if_end283_327 = 9'd327;
parameter [8:0] LEGUP_F_main_BB_if_end283_328 = 9'd328;
parameter [8:0] LEGUP_F_main_BB_if_end283_329 = 9'd329;
parameter [8:0] LEGUP_F_main_BB_if_end283_330 = 9'd330;
parameter [8:0] LEGUP_F_main_BB_if_end283_331 = 9'd331;
parameter [8:0] LEGUP_F_main_BB_if_end283_332 = 9'd332;
parameter [8:0] LEGUP_F_main_BB_if_end283_333 = 9'd333;
parameter [8:0] LEGUP_F_main_BB_if_end283_334 = 9'd334;
parameter [8:0] LEGUP_F_main_BB_if_end283_335 = 9'd335;
parameter [8:0] LEGUP_F_main_BB_if_end283_336 = 9'd336;
parameter [8:0] LEGUP_F_main_BB_if_end283_337 = 9'd337;
parameter [8:0] LEGUP_F_main_BB_if_end283_338 = 9'd338;
parameter [8:0] LEGUP_F_main_BB_if_end283_339 = 9'd339;
parameter [8:0] LEGUP_F_main_BB_if_end283_340 = 9'd340;
parameter [8:0] LEGUP_F_main_BB_if_end283_341 = 9'd341;
parameter [8:0] LEGUP_F_main_BB_if_end283_342 = 9'd342;
parameter [8:0] LEGUP_F_main_BB_if_end283_343 = 9'd343;
parameter [8:0] LEGUP_F_main_BB_if_end283_344 = 9'd344;
parameter [8:0] LEGUP_F_main_BB_if_end283_345 = 9'd345;
parameter [8:0] LEGUP_F_main_BB_if_end283_346 = 9'd346;
parameter [8:0] LEGUP_F_main_BB_if_end283_347 = 9'd347;
parameter [8:0] LEGUP_F_main_BB_if_end283_348 = 9'd348;
parameter [8:0] LEGUP_F_main_BB_if_end283_349 = 9'd349;
parameter [8:0] LEGUP_F_main_BB_if_end283_350 = 9'd350;
parameter [8:0] LEGUP_F_main_BB_if_end283_351 = 9'd351;
parameter [8:0] LEGUP_F_main_BB_if_end283_352 = 9'd352;
parameter [8:0] LEGUP_F_main_BB_if_end283_353 = 9'd353;
parameter [8:0] LEGUP_F_main_BB_NodeBlock23_354 = 9'd354;
parameter [8:0] LEGUP_F_main_BB_LeafBlock21_355 = 9'd355;
parameter [8:0] LEGUP_F_main_BB_LeafBlock19_356 = 9'd356;
parameter [8:0] LEGUP_F_main_BB_if_then288_357 = 9'd357;
parameter [8:0] LEGUP_F_main_BB_if_then295_358 = 9'd358;
parameter [8:0] LEGUP_F_main_BB_if_then302_359 = 9'd359;
parameter [8:0] LEGUP_F_main_BB_if_else307_360 = 9'd360;
parameter [8:0] LEGUP_F_main_BB_if_end314_361 = 9'd361;
parameter [8:0] LEGUP_F_main_BB_if_end314_362 = 9'd362;
parameter [8:0] LEGUP_F_main_BB_if_end314_363 = 9'd363;
parameter [8:0] LEGUP_F_main_BB_if_end314_364 = 9'd364;
parameter [8:0] LEGUP_F_main_BB_if_end314_365 = 9'd365;
parameter [8:0] LEGUP_F_main_BB_if_end314_366 = 9'd366;
parameter [8:0] LEGUP_F_main_BB_if_then327_367 = 9'd367;
parameter [8:0] LEGUP_F_main_BB_if_then327_368 = 9'd368;
parameter [8:0] LEGUP_F_main_BB_if_else333_369 = 9'd369;
parameter [8:0] LEGUP_F_main_BB_if_then335_370 = 9'd370;
parameter [8:0] LEGUP_F_main_BB_sw_bb344_371 = 9'd371;
parameter [8:0] LEGUP_F_main_BB_if_end347_372 = 9'd372;
parameter [8:0] LEGUP_F_main_BB_if_end347_373 = 9'd373;
parameter [8:0] LEGUP_F_main_BB_if_end347_374 = 9'd374;
parameter [8:0] LEGUP_F_main_BB_if_end347_375 = 9'd375;
parameter [8:0] LEGUP_F_main_BB_if_end347_376 = 9'd376;
parameter [8:0] LEGUP_F_main_BB_if_end347_377 = 9'd377;
parameter [8:0] LEGUP_F_main_BB_if_end347_378 = 9'd378;
parameter [8:0] LEGUP_F_main_BB_if_end347_379 = 9'd379;
parameter [8:0] LEGUP_F_main_BB_if_end347_380 = 9'd380;
parameter [8:0] LEGUP_F_main_BB_if_end347_381 = 9'd381;
parameter [8:0] LEGUP_F_main_BB_if_end347_382 = 9'd382;
parameter [8:0] LEGUP_F_main_BB_if_end347_383 = 9'd383;
parameter [8:0] LEGUP_F_main_BB_if_end347_384 = 9'd384;
parameter [8:0] LEGUP_F_main_BB_if_end347_385 = 9'd385;
parameter [8:0] LEGUP_F_main_BB_if_end347_386 = 9'd386;
parameter [8:0] LEGUP_F_main_BB_if_end347_387 = 9'd387;
parameter [8:0] LEGUP_F_main_BB_if_end347_388 = 9'd388;
parameter [8:0] LEGUP_F_main_BB_if_end347_389 = 9'd389;
parameter [8:0] LEGUP_F_main_BB_if_end347_390 = 9'd390;
parameter [8:0] LEGUP_F_main_BB_if_end347_391 = 9'd391;
parameter [8:0] LEGUP_F_main_BB_if_end347_392 = 9'd392;
parameter [8:0] LEGUP_F_main_BB_if_end347_393 = 9'd393;
parameter [8:0] LEGUP_F_main_BB_if_end347_394 = 9'd394;
parameter [8:0] LEGUP_F_main_BB_if_end347_395 = 9'd395;
parameter [8:0] LEGUP_F_main_BB_if_end347_396 = 9'd396;
parameter [8:0] LEGUP_F_main_BB_if_end347_397 = 9'd397;
parameter [8:0] LEGUP_F_main_BB_if_end347_398 = 9'd398;
parameter [8:0] LEGUP_F_main_BB_if_end347_399 = 9'd399;
parameter [8:0] LEGUP_F_main_BB_if_end347_400 = 9'd400;
parameter [8:0] LEGUP_F_main_BB_if_end347_401 = 9'd401;
parameter [8:0] LEGUP_F_main_BB_if_end347_402 = 9'd402;
parameter [8:0] LEGUP_F_main_BB_if_end347_403 = 9'd403;
parameter [8:0] LEGUP_F_main_BB_if_end347_404 = 9'd404;
parameter [8:0] LEGUP_F_main_BB_if_end347_405 = 9'd405;
parameter [8:0] LEGUP_F_main_BB_if_end347_406 = 9'd406;
parameter [8:0] LEGUP_F_main_BB_if_end347_407 = 9'd407;
parameter [8:0] LEGUP_F_main_BB_if_end347_408 = 9'd408;
parameter [8:0] LEGUP_F_main_BB_for_cond377_preheader_409 = 9'd409;
parameter [8:0] LEGUP_F_main_BB_for_cond377_preheader_410 = 9'd410;
parameter [8:0] LEGUP_F_main_BB_for_cond377_preheader_411 = 9'd411;
parameter [8:0] LEGUP_F_main_BB_for_cond377_preheader_412 = 9'd412;
parameter [8:0] LEGUP_F_main_BB_for_cond377_preheader_413 = 9'd413;
parameter [8:0] LEGUP_F_main_BB_for_cond377_preheader_414 = 9'd414;
parameter [8:0] LEGUP_F_main_BB_for_end389_415 = 9'd415;
parameter [8:0] LEGUP_F_main_BB_cleanup_416 = 9'd416;

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
output  memory_controller_1_write_enable_a;
output [63:0] memory_controller_1_in_a;
output reg  memory_controller_1_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_a;
output reg [1:0] memory_controller_1_size_a;
input [63:0] memory_controller_1_out_a;
output  memory_controller_1_write_enable_b;
output [63:0] memory_controller_1_in_b;
output  memory_controller_1_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_b;
output [1:0] memory_controller_1_size_b;
input [63:0] memory_controller_1_out_b;
output  memory_controller_0_write_enable_a;
output [63:0] memory_controller_0_in_a;
output reg  memory_controller_0_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_a;
output reg [1:0] memory_controller_0_size_a;
input [63:0] memory_controller_0_out_a;
output  memory_controller_0_write_enable_b;
output [63:0] memory_controller_0_in_b;
output  memory_controller_0_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_b;
output [1:0] memory_controller_0_size_b;
input [63:0] memory_controller_0_out_b;
reg [8:0] cur_state/* synthesis syn_encoding="onehot" */;
reg [8:0] next_state;
wire  fsm_stall;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1572_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1572_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla571_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla571_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx68;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx68_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx69;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx69_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx70;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx70_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx71;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx71_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx72;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx72_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx74;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx74_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx75;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx75_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx76;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx76_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx77;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx77_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx78;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx78_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx79;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx79_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx80;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx80_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx81;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx81_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx82;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx82_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx83_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx84;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx84_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx85;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx85_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx86;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx86_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx87;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx87_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx88;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx88_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx89;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx89_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx90;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx90_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx91;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx91_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx92;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx92_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx93;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx93_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx94;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx94_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx95;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx95_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx96;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx96_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx97;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx97_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx98;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx98_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx99;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx99_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx100;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx100_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx101;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx101_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx102;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx102_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx103;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx103_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx104;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx104_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx105;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx105_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx106;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx106_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx107;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx107_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx108;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx108_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx109;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx109_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx110;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx110_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx111;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx111_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx112;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx112_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx113;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx113_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx114;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx114_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx115;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx115_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx116;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx116_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx117;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx117_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx118;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx118_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx119;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx119_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx120;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx120_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx121;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx121_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx122;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx122_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx123;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx123_reg;
reg [31:0] main_NodeBlock9_state_0;
reg [31:0] main_NodeBlock9_state_0_reg;
reg [31:0] main_NodeBlock9_i_0;
reg [31:0] main_NodeBlock9_i_0_reg;
reg [31:0] main_NodeBlock9_j_0;
reg [31:0] main_NodeBlock9_j_0_reg;
reg [31:0] main_NodeBlock9_a_0;
reg [31:0] main_NodeBlock9_a_0_reg;
reg [31:0] main_NodeBlock9_b_0;
reg [31:0] main_NodeBlock9_b_0_reg;
reg [31:0] main_NodeBlock9_pos_a_X_0;
reg [31:0] main_NodeBlock9_pos_a_X_0_reg;
reg [31:0] main_NodeBlock9_pos_a_Y_0;
reg [31:0] main_NodeBlock9_pos_a_Y_0_reg;
reg [31:0] main_NodeBlock9_pos_b_X_0;
reg [31:0] main_NodeBlock9_pos_b_X_0_reg;
reg [31:0] main_NodeBlock9_pos_b_Y_0;
reg [31:0] main_NodeBlock9_pos_b_Y_0_reg;
reg [31:0] main_NodeBlock9_sum_mesh_0;
reg [31:0] main_NodeBlock9_sum_mesh_0_reg;
reg [31:0] main_NodeBlock9_sum_1hop_0;
reg [31:0] main_NodeBlock9_sum_1hop_0_reg;
reg [31:0] main_NodeBlock9_seed_0;
reg [31:0] main_NodeBlock9_seed_0_reg;
reg  main_NodeBlock9_Pivot10;
reg  main_NodeBlock7_Pivot8;
reg  main_NodeBlock5_Pivot6;
reg  main_LeafBlock3_SwitchLeaf4;
reg [31:0] main_NodeBlock9_backedge_state_0_be;
reg [31:0] main_NodeBlock9_backedge_state_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_i_0_be;
reg [31:0] main_NodeBlock9_backedge_i_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_j_0_be;
reg [31:0] main_NodeBlock9_backedge_j_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_a_0_be;
reg [31:0] main_NodeBlock9_backedge_a_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_b_0_be;
reg [31:0] main_NodeBlock9_backedge_b_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_seed_0_be;
reg [31:0] main_NodeBlock9_backedge_seed_0_be_reg;
reg  main_NodeBlock1_Pivot2;
reg  main_NodeBlock_Pivot;
reg  main_LeafBlock_SwitchLeaf;
reg [31:0] main_for_cond125_preheader_i_1589;
reg [31:0] main_for_cond125_preheader_i_1589_reg;
reg [28:0] main_for_cond125_preheader_bit_select9;
reg [31:0] main_for_cond125_preheader_sr_negate;
reg [31:0] main_for_cond125_preheader_bit_concat10;
reg [31:0] main_for_cond125_preheader_sr_add;
reg [31:0] main_for_cond125_preheader_sr_add_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129;
reg [31:0] main_for_cond125_preheader_0;
reg [31:0] main_for_cond125_preheader_0_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_1;
reg [31:0] main_for_cond125_preheader_1;
reg [31:0] main_for_cond125_preheader_1_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_2;
reg [31:0] main_for_cond125_preheader_2;
reg [31:0] main_for_cond125_preheader_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_3_reg;
reg [31:0] main_for_cond125_preheader_3;
reg [31:0] main_for_cond125_preheader_3_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_4_reg;
reg [31:0] main_for_cond125_preheader_4;
reg [31:0] main_for_cond125_preheader_4_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_5_reg;
reg [31:0] main_for_cond125_preheader_5;
reg [31:0] main_for_cond125_preheader_5_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond125_preheader_arrayidx129_6_reg;
reg [31:0] main_for_cond125_preheader_6;
reg [31:0] main_for_cond125_preheader_6_reg;
reg  main_for_cond125_preheader_exitcond5;
reg  main_for_cond125_preheader_exitcond5_reg;
reg [31:0] main_for_body135_i_2590;
reg [31:0] main_for_body135_i_2590_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body135_arrayidx136;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body135_arrayidx137;
reg [31:0] main_for_body135_7;
reg [31:0] main_for_body135_7_reg;
reg  main_for_body135_exitcond6;
reg  main_for_body135_exitcond6_reg;
reg [31:0] main_for_end140_8;
reg [31:0] main_for_end140_8_reg;
reg [31:0] main_for_end140_sub_i;
reg [31:0] main_for_end140_xor2_i;
reg [3:0] main_for_end140_rem;
reg [3:0] main_for_end140_rem_reg;
reg [28:0] main_for_end140_bit_select7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end140_arrayidx142;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end140_arrayidx142_reg;
reg [31:0] main_for_end140_xor2_i16;
reg [31:0] main_for_end140_xor2_i16_reg;
reg [3:0] main_for_end140_rem144;
reg [3:0] main_for_end140_rem144_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end140_arrayidx145;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end140_arrayidx145_reg;
reg [31:0] main_for_end140_add146;
reg [31:0] main_for_end140_add146_reg;
reg [4:0] main_for_end140_sr_negate7;
reg [31:0] main_for_end140_bit_concat8;
reg [31:0] main_for_end140_sr_add10;
reg [31:0] main_for_end140_sr_add10_reg;
reg [31:0] main_for_end140_arrayidx149_sum;
reg [31:0] main_for_end140_arrayidx149_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end140_arrayidx150;
reg  main_sw_bb151_cmp152;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx153;
reg [31:0] main_if_end_9;
reg [31:0] main_if_end_9_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx154;
reg [31:0] main_if_end_10;
reg [31:0] main_if_end_10_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx155;
reg [31:0] main_if_end_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx156;
reg [31:0] main_if_end_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx157;
reg [31:0] main_if_end_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx158;
reg [31:0] main_if_end_14;
reg  main_if_end_cmp159;
reg [1:0] main_if_end_1;
reg [1:0] main_if_end_1_reg;
reg  main_sw_bb162_cmp163;
reg [31:0] main_if_end165_sub_i14;
reg [31:0] main_if_end165_xor2_i15;
reg [3:0] main_if_end165_rem167;
reg [3:0] main_if_end165_rem167_reg;
reg [31:0] main_if_end165_add168;
reg [31:0] main_if_end165_add168_reg;
reg  main_if_end165_cmp169;
reg  main_if_end165_cmp169_reg;
reg  main_if_end165_cmp171;
reg  main_if_end165_cmp171_reg;
reg [31:0] main_if_then172_xor2_i13;
reg [3:0] main_if_then172_rem174;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then172_arrayidx175;
reg [31:0] main_if_then172_15;
reg [31:0] main_if_then172_15_reg;
reg [31:0] main_if_then172_add176;
reg [31:0] main_if_then172_add176_reg;
reg [31:0] main_if_then172_xor2_i12;
reg [31:0] main_if_then172_xor2_i12_reg;
reg [3:0] main_if_then172_rem179;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then172_arrayidx180;
reg [31:0] main_if_then172_16;
reg [31:0] main_if_then172_16_reg;
reg [31:0] main_if_then172_add181;
reg [31:0] main_if_then172_add182;
reg [31:0] main_if_then172_add182_reg;
reg  main_if_else183_cmp184;
reg [31:0] main_if_then185_xor2_i10;
reg [3:0] main_if_then185_rem187;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then185_arrayidx188;
reg [31:0] main_if_then185_17;
reg [31:0] main_if_then185_17_reg;
reg [31:0] main_if_then185_add189;
reg [31:0] main_if_then185_add189_reg;
reg [31:0] main_if_then185_xor2_i9;
reg [31:0] main_if_then185_xor2_i9_reg;
reg [3:0] main_if_then185_rem192;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then185_arrayidx193;
reg [31:0] main_if_then185_18;
reg [31:0] main_if_then185_18_reg;
reg [31:0] main_if_then185_add194;
reg [31:0] main_if_then185_add195;
reg [31:0] main_if_then185_add195_reg;
reg  main_if_else196_cmp197;
reg  main_if_else196_cmp197_reg;
reg [31:0] main_if_else196_xor2_i7;
reg [3:0] main_if_else196_rem200;
reg [3:0] main_if_else196_rem200_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then198_arrayidx201;
reg [31:0] main_if_then198_19;
reg [31:0] main_if_then198_add202;
reg [31:0] main_if_then198_add202_reg;
reg [31:0] main_if_then198_xor2_i6;
reg [3:0] main_if_then198_rem205;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then198_arrayidx206;
reg [31:0] main_if_then198_20;
reg [31:0] main_if_then198_20_reg;
reg [31:0] main_if_then198_add207;
reg [31:0] main_if_then198_add208;
reg [31:0] main_if_then198_add208_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else209_arrayidx212;
reg [31:0] main_if_else209_21;
reg [31:0] main_if_else209_add213;
reg [31:0] main_if_else209_add213_reg;
reg [31:0] main_if_else209_xor2_i4;
reg [3:0] main_if_else209_rem216;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else209_arrayidx217;
reg [31:0] main_if_else209_22;
reg [31:0] main_if_else209_22_reg;
reg [31:0] main_if_else209_add218;
reg [31:0] main_if_else209_add219;
reg [31:0] main_if_else209_add219_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then225_arrayidx226;
reg [31:0] main_if_then225_23;
reg [31:0] main_if_then225_add227;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then225_arrayidx228;
reg [31:0] main_if_then225_24;
reg [31:0] main_if_then225_add229;
reg  main_NodeBlock16_Pivot17;
reg  main_LeafBlock14_SwitchLeaf15;
reg  main_LeafBlock12_SwitchLeaf13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then232_arrayidx233;
reg [31:0] main_if_then232_25;
reg [31:0] main_if_then232_add234;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then232_arrayidx235;
reg [31:0] main_if_then232_26;
reg [31:0] main_if_then232_add236;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then239_arrayidx240;
reg [31:0] main_if_then239_27;
reg [31:0] main_if_then239_add241;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then239_arrayidx242;
reg [31:0] main_if_then239_28;
reg [31:0] main_if_then239_add243;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else244_arrayidx245;
reg [31:0] main_if_else244_29;
reg [31:0] main_if_else244_add246;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else244_arrayidx247;
reg [31:0] main_if_else244_30;
reg [31:0] main_if_else244_add248;
reg [31:0] main_if_end252_xi_0;
reg [31:0] main_if_end252_xi_0_reg;
reg [31:0] main_if_end252_xj_0;
reg [31:0] main_if_end252_xj_0_reg;
reg [31:0] main_if_end252_seed_1;
reg [31:0] main_if_end252_seed_1_reg;
reg [28:0] main_if_end252_bit_select5;
reg [31:0] main_if_end252_inc253;
reg [31:0] main_if_end252_inc253_reg;
reg [31:0] main_if_end252_sr_negate11;
reg [31:0] main_if_end252_bit_concat6;
reg [31:0] main_if_end252_sr_add13;
reg [31:0] main_if_end252_sr_add13_reg;
reg [31:0] main_if_end252_arrayidx254_sum;
reg [31:0] main_if_end252_arrayidx254_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end252_arrayidx255;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end252_arrayidx255_reg;
reg [31:0] main_if_end252_31;
reg  main_if_end252_cmp256;
reg  main_if_end252_32;
reg  main_if_end252_32_reg;
reg  main_if_end252_or_cond;
reg  main_if_end252_33;
reg  main_if_end252_33_reg;
reg  main_if_end252_or_cond577;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then264_arrayidx267;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then264_arrayidx268;
reg  main_if_else269_cmp270;
reg [31:0] main_if_end274_pos_a_X_1;
reg [31:0] main_if_end274_pos_a_X_1_reg;
reg [31:0] main_if_end274_pos_a_Y_1;
reg [31:0] main_if_end274_pos_a_Y_1_reg;
reg  main_if_end274_cmp275;
reg [1:0] main_if_end274_578;
reg [31:0] main_if_end274_inc253_1;
reg  main_sw_bb279_cmp280;
reg [31:0] main_if_then281_inc282;
reg [31:0] main_if_end283_sub_i1;
reg [31:0] main_if_end283_xor2_i2;
reg [3:0] main_if_end283_rem285;
reg [3:0] main_if_end283_rem285_reg;
reg [31:0] main_if_end283_add286;
reg [31:0] main_if_end283_add286_reg;
reg  main_if_end283_Pivot26;
reg  main_NodeBlock23_Pivot24;
reg  main_LeafBlock21_SwitchLeaf22;
reg  main_LeafBlock19_SwitchLeaf20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then288_arrayidx289;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then288_arrayidx291;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then295_arrayidx296;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then295_arrayidx298;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then302_arrayidx303;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then302_arrayidx305;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else307_arrayidx308;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else307_arrayidx310;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end314_pn_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end314_pn_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end314_pn576_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end314_pn576_in_reg;
reg [31:0] main_if_end314_pn576;
reg [31:0] main_if_end314_pn;
reg [31:0] main_if_end314_xj_1;
reg [31:0] main_if_end314_xj_1_reg;
reg [31:0] main_if_end314_xi_1;
reg [31:0] main_if_end314_xi_1_reg;
reg [28:0] main_if_end314_bit_select3;
reg [31:0] main_if_end314_sr_negate14;
reg [31:0] main_if_end314_sr_negate14_reg;
reg [31:0] main_if_end314_bit_concat4;
reg [31:0] main_if_end314_bit_concat4_reg;
reg [31:0] main_if_end314_sr_add16;
reg [31:0] main_if_end314_arrayidx316_sum;
reg [31:0] main_if_end314_arrayidx316_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end314_arrayidx317;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end314_arrayidx317_reg;
reg [31:0] main_if_end314_34;
reg  main_if_end314_cmp318;
reg  main_if_end314_35;
reg  main_if_end314_35_reg;
reg  main_if_end314_or_cond579;
reg  main_if_end314_36;
reg  main_if_end314_36_reg;
reg  main_if_end314_or_cond580;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then327_arrayidx330;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then327_arrayidx331;
reg [31:0] main_if_then327_inc332;
reg [31:0] main_if_then327_inc332_reg;
reg [31:0] main_if_else333_inc315;
reg  main_if_else333_cmp334;
reg  main_sw_bb344_cmp345;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end347_arrayidx348;
reg [31:0] main_if_end347_37;
reg [31:0] main_if_end347_37_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end347_arrayidx349;
reg [31:0] main_if_end347_38;
reg [31:0] main_if_end347_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end347_arrayidx350;
reg [31:0] main_if_end347_39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end347_arrayidx351;
reg [31:0] main_if_end347_40;
reg [31:0] main_if_end347_sub;
reg [31:0] main_if_end347_sub_reg;
reg  main_if_end347_bit_select2;
reg  main_if_end347_bit_select2_reg;
reg [31:0] main_if_end347_mul;
reg [31:0] main_if_end347_mul_reg;
reg [31:0] main_if_end347_mul_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end347_arrayidx355;
reg [31:0] main_if_end347_41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end347_arrayidx356;
reg [31:0] main_if_end347_42;
reg [31:0] main_if_end347_sub357;
reg [31:0] main_if_end347_sub357_reg;
reg  main_if_end347_bit_select1;
reg  main_if_end347_bit_select1_reg;
reg [31:0] main_if_end347_mul360;
reg [31:0] main_if_end347_mul360_reg;
reg [31:0] main_if_end347_diff_pos_y_0;
reg [31:0] main_if_end347_diff_pos_y_0_reg;
reg [31:0] main_if_end347_add362;
reg [31:0] main_if_end347_add362_reg;
reg [31:0] main_if_end347_newEarly_add364;
reg [31:0] main_if_end347_newEarly_add364_reg;
reg [31:0] main_if_end347_newCurOp_add364;
reg [31:0] main_if_end347_newCurOp_add364_reg;
reg [30:0] main_if_end347_div;
reg [3:0] main_if_end347_rem365;
reg [30:0] main_if_end347_div367;
reg [3:0] main_if_end347_rem368;
reg [31:0] main_if_end347_add369;
reg [31:0] main_if_end347_add369_reg;
reg [31:0] main_if_end347_newEarly_add370;
reg [31:0] main_if_end347_newEarly_add370_reg;
reg [31:0] main_if_end347_newEarly_sub371;
reg [31:0] main_if_end347_newEarly_add372;
reg [31:0] main_if_end347_newCurOp_add372;
reg [31:0] main_if_end347_inc373;
reg [31:0] main_if_end347_inc373_reg;
reg [2:0] main_for_cond377_preheader_i_3587;
reg [2:0] main_for_cond377_preheader_i_3587_reg;
reg [28:0] main_for_cond377_preheader_bit_select;
reg [3:0] main_for_cond377_preheader_sr_negate17;
reg [31:0] main_for_cond377_preheader_bit_concat;
reg [31:0] main_for_cond377_preheader_sr_add19;
reg [31:0] main_for_cond377_preheader_sr_add19_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381;
reg [31:0] main_for_cond377_preheader_43;
reg [31:0] main_for_cond377_preheader_43_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_1;
reg [31:0] main_for_cond377_preheader_44;
reg [31:0] main_for_cond377_preheader_44_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_2;
reg [31:0] main_for_cond377_preheader_45;
reg [31:0] main_for_cond377_preheader_45_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_3_reg;
reg [31:0] main_for_cond377_preheader_46;
reg [31:0] main_for_cond377_preheader_46_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_4_reg;
reg [31:0] main_for_cond377_preheader_47;
reg [31:0] main_for_cond377_preheader_47_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_5_reg;
reg [31:0] main_for_cond377_preheader_48;
reg [31:0] main_for_cond377_preheader_48_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond377_preheader_arrayidx381_6_reg;
reg [31:0] main_for_cond377_preheader_49;
reg [31:0] main_for_cond377_preheader_50;
reg [31:0] main_for_cond377_preheader_51;
reg [31:0] main_for_cond377_preheader_52;
reg [31:0] main_for_cond377_preheader_53;
reg [31:0] main_for_cond377_preheader_54;
reg [31:0] main_for_cond377_preheader_55;
reg [3:0] main_for_cond377_preheader_56;
reg [3:0] main_for_cond377_preheader_56_reg;
reg  main_for_cond377_preheader_exitcond;
reg  main_for_cond377_preheader_exitcond_reg;
reg  main_cleanup_retval_0;
reg  main_cleanup_retval_0_reg;
reg [5:0] main_entry_vla571_address_a;
reg  main_entry_vla571_write_enable_a;
reg [31:0] main_entry_vla571_in_a;
wire [31:0] main_entry_vla571_out_a;
reg [5:0] main_entry_vla571_address_b;
reg  main_entry_vla571_write_enable_b;
reg [31:0] main_entry_vla571_in_b;
wire [31:0] main_entry_vla571_out_b;
reg [5:0] main_entry_vla1572_address_a;
reg  main_entry_vla1572_write_enable_a;
reg [31:0] main_entry_vla1572_in_a;
wire [31:0] main_entry_vla1572_out_a;
reg [5:0] main_entry_vla1572_address_b;
reg  main_entry_vla1572_write_enable_b;
reg [31:0] main_entry_vla1572_in_b;
wire [31:0] main_entry_vla1572_out_b;
reg [5:0] main_entry_vla2573_address_a;
reg  main_entry_vla2573_write_enable_a;
reg [31:0] main_entry_vla2573_in_a;
wire [31:0] main_entry_vla2573_out_a;
reg [5:0] main_entry_vla2573_address_b;
reg  main_entry_vla2573_write_enable_b;
reg [31:0] main_entry_vla2573_in_b;
wire [31:0] main_entry_vla2573_out_b;
reg [5:0] main_entry_vla3574_address_a;
reg  main_entry_vla3574_write_enable_a;
reg [31:0] main_entry_vla3574_in_a;
wire [31:0] main_entry_vla3574_out_a;
reg [5:0] main_entry_vla3574_address_b;
reg  main_entry_vla3574_write_enable_b;
reg [31:0] main_entry_vla3574_in_b;
wire [31:0] main_entry_vla3574_out_b;
reg [5:0] main_entry_vla4575_address_a;
reg  main_entry_vla4575_write_enable_a;
reg [31:0] main_entry_vla4575_in_a;
wire [31:0] main_entry_vla4575_out_a;
reg [5:0] main_entry_vla4575_address_b;
reg  main_entry_vla4575_write_enable_b;
reg [31:0] main_entry_vla4575_in_b;
wire [31:0] main_entry_vla4575_out_b;
reg [31:0] main_signed_modulus_32_0_op0;
reg [4:0] main_signed_modulus_32_0_op1;
reg  main_signed_modulus_32_0_inst_clock;
reg  main_signed_modulus_32_0_inst_aclr;
reg  main_signed_modulus_32_0_inst_clken;
reg [31:0] main_signed_modulus_32_0_inst_numer;
reg [4:0] main_signed_modulus_32_0_inst_denom;
wire [31:0] main_signed_modulus_32_0_inst_quotient;
wire [4:0] main_signed_modulus_32_0_inst_remain;
reg [4:0] divide_main_for_end140_rem_temp_out;
reg  divide_main_for_end140_rem_en;
reg [3:0] divide_main_for_end140_rem_out;
reg [3:0] main_signed_modulus_32_0;
reg [31:0] main_signed_divide_32_0_op0;
reg [3:0] main_signed_divide_32_0_op1;
reg  main_signed_divide_32_0_inst_clock;
reg  main_signed_divide_32_0_inst_aclr;
reg  main_signed_divide_32_0_inst_clken;
reg [31:0] main_signed_divide_32_0_inst_numer;
reg [3:0] main_signed_divide_32_0_inst_denom;
wire [31:0] main_signed_divide_32_0_inst_quotient;
wire [3:0] main_signed_divide_32_0_inst_remain;
reg [31:0] divide_main_if_end347_div_temp_out;
reg  divide_main_if_end347_div_en;
reg [30:0] divide_main_if_end347_div_out;
reg [30:0] main_signed_divide_32_0;
wire [3:0] main_NodeBlock9_Pivot10_op1_temp;
wire [4:0] main_NodeBlock7_Pivot8_op1_temp;
wire [4:0] main_NodeBlock5_Pivot6_op1_temp;
wire [2:0] main_NodeBlock1_Pivot2_op1_temp;
wire [3:0] main_NodeBlock_Pivot_op1_temp;
wire [2:0] main_for_cond125_preheader_bit_concat10_bit_select_operand_2;
reg [28:0] main_for_end140_rem_width_extended;
wire [2:0] main_for_end140_bit_concat8_bit_select_operand_2;
wire [3:0] main_NodeBlock16_Pivot17_op1_temp;
wire [2:0] main_if_end252_bit_concat6_bit_select_operand_2;
wire [7:0] main_if_else269_cmp270_op1_temp;
wire [2:0] main_if_end283_Pivot26_op1_temp;
wire [3:0] main_NodeBlock23_Pivot24_op1_temp;
wire [2:0] main_if_end314_bit_concat4_bit_select_operand_2;
wire [7:0] main_if_else333_cmp334_op1_temp;
reg [28:0] main_for_cond377_preheader_i_3587_reg_width_extended;
wire [2:0] main_for_cond377_preheader_bit_concat_bit_select_operand_2;

/*   %rem = srem i32 %xor2.i, 7, !dbg !233, !MSB !235, !LSB !67, !extendFrom !235*/
lpm_divide main_signed_modulus_32_0_inst (
	.clock (main_signed_modulus_32_0_inst_clock),
	.aclr (main_signed_modulus_32_0_inst_aclr),
	.clken (main_signed_modulus_32_0_inst_clken),
	.numer (main_signed_modulus_32_0_inst_numer),
	.denom (main_signed_modulus_32_0_inst_denom),
	.quotient (main_signed_modulus_32_0_inst_quotient),
	.remain (main_signed_modulus_32_0_inst_remain)
);

defparam
	main_signed_modulus_32_0_inst.lpm_widthn = 32,
	main_signed_modulus_32_0_inst.lpm_widthd = 5,
	main_signed_modulus_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_modulus_32_0_inst.lpm_pipeline = 32;

/*   %div = sdiv i32 %mul.sub, 2, !dbg !397, !MSB !206, !LSB !67, !extendFrom !398*/
lpm_divide main_signed_divide_32_0_inst (
	.clock (main_signed_divide_32_0_inst_clock),
	.aclr (main_signed_divide_32_0_inst_aclr),
	.clken (main_signed_divide_32_0_inst_clken),
	.numer (main_signed_divide_32_0_inst_numer),
	.denom (main_signed_divide_32_0_inst_denom),
	.quotient (main_signed_divide_32_0_inst_quotient),
	.remain (main_signed_divide_32_0_inst_remain)
);

defparam
	main_signed_divide_32_0_inst.lpm_widthn = 32,
	main_signed_divide_32_0_inst.lpm_widthd = 4,
	main_signed_divide_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_divide_32_0_inst.lpm_pipeline = 32;



//   %vla571 = alloca [60 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla571 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla571_address_a ),
	.wren_a( main_entry_vla571_write_enable_a ),
	.data_a( main_entry_vla571_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla571_out_a ),
	.address_b( main_entry_vla571_address_b ),
	.wren_b( main_entry_vla571_write_enable_b ),
	.data_b( main_entry_vla571_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla571_out_b )
);
defparam main_entry_vla571.width_a = 32;
defparam main_entry_vla571.widthad_a = 6;
defparam main_entry_vla571.width_be_a = 4;
defparam main_entry_vla571.numwords_a = 60;
defparam main_entry_vla571.width_b = 32;
defparam main_entry_vla571.widthad_b = 6;
defparam main_entry_vla571.width_be_b = 4;
defparam main_entry_vla571.numwords_b = 60;
defparam main_entry_vla571.latency = 1;


//   %vla1572 = alloca [60 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla1572 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla1572_address_a ),
	.wren_a( main_entry_vla1572_write_enable_a ),
	.data_a( main_entry_vla1572_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla1572_out_a ),
	.address_b( main_entry_vla1572_address_b ),
	.wren_b( main_entry_vla1572_write_enable_b ),
	.data_b( main_entry_vla1572_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla1572_out_b )
);
defparam main_entry_vla1572.width_a = 32;
defparam main_entry_vla1572.widthad_a = 6;
defparam main_entry_vla1572.width_be_a = 4;
defparam main_entry_vla1572.numwords_a = 60;
defparam main_entry_vla1572.width_b = 32;
defparam main_entry_vla1572.widthad_b = 6;
defparam main_entry_vla1572.width_be_b = 4;
defparam main_entry_vla1572.numwords_b = 60;
defparam main_entry_vla1572.latency = 1;


//   %vla2573 = alloca [47 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla2573 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla2573_address_a ),
	.wren_a( main_entry_vla2573_write_enable_a ),
	.data_a( main_entry_vla2573_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla2573_out_a ),
	.address_b( main_entry_vla2573_address_b ),
	.wren_b( main_entry_vla2573_write_enable_b ),
	.data_b( main_entry_vla2573_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla2573_out_b )
);
defparam main_entry_vla2573.width_a = 32;
defparam main_entry_vla2573.widthad_a = 6;
defparam main_entry_vla2573.width_be_a = 4;
defparam main_entry_vla2573.numwords_a = 47;
defparam main_entry_vla2573.width_b = 32;
defparam main_entry_vla2573.widthad_b = 6;
defparam main_entry_vla2573.width_be_b = 4;
defparam main_entry_vla2573.numwords_b = 47;
defparam main_entry_vla2573.latency = 1;


//   %vla3574 = alloca [47 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla3574 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla3574_address_a ),
	.wren_a( main_entry_vla3574_write_enable_a ),
	.data_a( main_entry_vla3574_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla3574_out_a ),
	.address_b( main_entry_vla3574_address_b ),
	.wren_b( main_entry_vla3574_write_enable_b ),
	.data_b( main_entry_vla3574_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla3574_out_b )
);
defparam main_entry_vla3574.width_a = 32;
defparam main_entry_vla3574.widthad_a = 6;
defparam main_entry_vla3574.width_be_a = 4;
defparam main_entry_vla3574.numwords_a = 47;
defparam main_entry_vla3574.width_b = 32;
defparam main_entry_vla3574.widthad_b = 6;
defparam main_entry_vla3574.width_be_b = 4;
defparam main_entry_vla3574.numwords_b = 47;
defparam main_entry_vla3574.latency = 1;


//   %vla4575 = alloca [49 x i32], align 4, !dbg !69, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla4575 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla4575_address_a ),
	.wren_a( main_entry_vla4575_write_enable_a ),
	.data_a( main_entry_vla4575_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla4575_out_a ),
	.address_b( main_entry_vla4575_address_b ),
	.wren_b( main_entry_vla4575_write_enable_b ),
	.data_b( main_entry_vla4575_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla4575_out_b )
);
defparam main_entry_vla4575.width_a = 32;
defparam main_entry_vla4575.widthad_a = 6;
defparam main_entry_vla4575.width_be_a = 4;
defparam main_entry_vla4575.numwords_a = 49;
defparam main_entry_vla4575.width_b = 32;
defparam main_entry_vla4575.widthad_b = 6;
defparam main_entry_vla4575.width_be_b = 4;
defparam main_entry_vla4575.numwords_b = 49;
defparam main_entry_vla4575.latency = 1;

/* Unsynthesizable Statements */
/* synthesis translate_off */
always @(posedge clk)
	if (!fsm_stall) begin
	if ((cur_state == LEGUP_F_main_BB_if_then271_317)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_if_then335_370)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_411)) begin
		$write("%3d ", $signed(main_for_cond377_preheader_49));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond377_preheader_49) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_412)) begin
		$write("%3d ", $signed(main_for_cond377_preheader_50));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond377_preheader_50) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_412)) begin
		$write("%3d ", $signed(main_for_cond377_preheader_51));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond377_preheader_51) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_413)) begin
		$write("%3d ", $signed(main_for_cond377_preheader_52));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond377_preheader_52) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_413)) begin
		$write("%3d ", $signed(main_for_cond377_preheader_53));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond377_preheader_53) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_414)) begin
		$write("%3d ", $signed(main_for_cond377_preheader_54));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond377_preheader_54) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_414)) begin
		$write("%3d ", $signed(main_for_cond377_preheader_55));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond377_preheader_55) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_414)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_end389_415)) begin
		$write("\nEvaluation = %d\nEvaluation 1-hop = %d\n", $signed(main_NodeBlock9_sum_mesh_0_reg), $signed(main_NodeBlock9_sum_1hop_0_reg));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_mesh_0_reg) === 1'bX) finish <= 0;
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_1hop_0_reg) === 1'bX) finish <= 0;
	end
end
/* synthesis translate_on */
always @(posedge clk) begin
if (reset == 1'b1)
	cur_state <= LEGUP_0;
else if (!fsm_stall)
	cur_state <= next_state;
end

always @(*)
begin
next_state = cur_state;
case(cur_state)  /* synthesis parallel_case */
LEGUP_0:
	if ((fsm_stall == 1'd0) && (start == 1'd1))
		next_state = LEGUP_F_main_BB_entry_1;
LEGUP_F_main_BB_LeafBlock12_300:
	if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then232_301;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else244_307;
LEGUP_F_main_BB_LeafBlock14_299:
	if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then239_304;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else244_307;
LEGUP_F_main_BB_LeafBlock19_356:
	if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then288_357;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else307_360;
LEGUP_F_main_BB_LeafBlock21_355:
	if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then302_359;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else307_360;
LEGUP_F_main_BB_LeafBlock3_5:
	if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond377_preheader_preheader_7;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_LeafBlock_10:
	if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb_11;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_NodeBlock16_298:
	if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock12_300;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock14_299;
LEGUP_F_main_BB_NodeBlock1_8:
	if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock_10;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock_9;
LEGUP_F_main_BB_NodeBlock23_354:
	if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then295_358;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock21_355;
LEGUP_F_main_BB_NodeBlock5_4:
	if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb344_371;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock3_5;
LEGUP_F_main_BB_NodeBlock7_3:
	if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb279_319;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock5_4;
LEGUP_F_main_BB_NodeBlock9_2:
	if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock1_8;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock7_3;
LEGUP_F_main_BB_NodeBlock9_backedge_6:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_NodeBlock_9:
	if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb151_87;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd0))
		next_state = LEGUP_F_main_BB_sw_bb162_91;
LEGUP_F_main_BB_cleanup_416:
		next_state = LEGUP_0;
LEGUP_F_main_BB_entry_1:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_for_body135_49:
		next_state = LEGUP_F_main_BB_for_body135_50;
LEGUP_F_main_BB_for_body135_50:
	if ((fsm_stall == 1'd0) && (main_for_body135_exitcond6_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end140_51;
	else if ((fsm_stall == 1'd0) && (main_for_body135_exitcond6_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body135_49;
LEGUP_F_main_BB_for_body135_preheader_48:
		next_state = LEGUP_F_main_BB_for_body135_49;
LEGUP_F_main_BB_for_cond125_preheader_42:
		next_state = LEGUP_F_main_BB_for_cond125_preheader_43;
LEGUP_F_main_BB_for_cond125_preheader_43:
		next_state = LEGUP_F_main_BB_for_cond125_preheader_44;
LEGUP_F_main_BB_for_cond125_preheader_44:
		next_state = LEGUP_F_main_BB_for_cond125_preheader_45;
LEGUP_F_main_BB_for_cond125_preheader_45:
		next_state = LEGUP_F_main_BB_for_cond125_preheader_46;
LEGUP_F_main_BB_for_cond125_preheader_46:
		next_state = LEGUP_F_main_BB_for_cond125_preheader_47;
LEGUP_F_main_BB_for_cond125_preheader_47:
	if ((fsm_stall == 1'd0) && (main_for_cond125_preheader_exitcond5_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_body135_preheader_48;
	else if ((fsm_stall == 1'd0) && (main_for_cond125_preheader_exitcond5_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond125_preheader_42;
LEGUP_F_main_BB_for_cond377_preheader_409:
		next_state = LEGUP_F_main_BB_for_cond377_preheader_410;
LEGUP_F_main_BB_for_cond377_preheader_410:
		next_state = LEGUP_F_main_BB_for_cond377_preheader_411;
LEGUP_F_main_BB_for_cond377_preheader_411:
		next_state = LEGUP_F_main_BB_for_cond377_preheader_412;
LEGUP_F_main_BB_for_cond377_preheader_412:
		next_state = LEGUP_F_main_BB_for_cond377_preheader_413;
LEGUP_F_main_BB_for_cond377_preheader_413:
		next_state = LEGUP_F_main_BB_for_cond377_preheader_414;
LEGUP_F_main_BB_for_cond377_preheader_414:
	if ((fsm_stall == 1'd0) && (main_for_cond377_preheader_exitcond_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end389_415;
	else if ((fsm_stall == 1'd0) && (main_for_cond377_preheader_exitcond_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond377_preheader_409;
LEGUP_F_main_BB_for_cond377_preheader_preheader_7:
		next_state = LEGUP_F_main_BB_for_cond377_preheader_409;
LEGUP_F_main_BB_for_end140_51:
		next_state = LEGUP_F_main_BB_for_end140_52;
LEGUP_F_main_BB_for_end140_52:
		next_state = LEGUP_F_main_BB_for_end140_53;
LEGUP_F_main_BB_for_end140_53:
		next_state = LEGUP_F_main_BB_for_end140_54;
LEGUP_F_main_BB_for_end140_54:
		next_state = LEGUP_F_main_BB_for_end140_55;
LEGUP_F_main_BB_for_end140_55:
		next_state = LEGUP_F_main_BB_for_end140_56;
LEGUP_F_main_BB_for_end140_56:
		next_state = LEGUP_F_main_BB_for_end140_57;
LEGUP_F_main_BB_for_end140_57:
		next_state = LEGUP_F_main_BB_for_end140_58;
LEGUP_F_main_BB_for_end140_58:
		next_state = LEGUP_F_main_BB_for_end140_59;
LEGUP_F_main_BB_for_end140_59:
		next_state = LEGUP_F_main_BB_for_end140_60;
LEGUP_F_main_BB_for_end140_60:
		next_state = LEGUP_F_main_BB_for_end140_61;
LEGUP_F_main_BB_for_end140_61:
		next_state = LEGUP_F_main_BB_for_end140_62;
LEGUP_F_main_BB_for_end140_62:
		next_state = LEGUP_F_main_BB_for_end140_63;
LEGUP_F_main_BB_for_end140_63:
		next_state = LEGUP_F_main_BB_for_end140_64;
LEGUP_F_main_BB_for_end140_64:
		next_state = LEGUP_F_main_BB_for_end140_65;
LEGUP_F_main_BB_for_end140_65:
		next_state = LEGUP_F_main_BB_for_end140_66;
LEGUP_F_main_BB_for_end140_66:
		next_state = LEGUP_F_main_BB_for_end140_67;
LEGUP_F_main_BB_for_end140_67:
		next_state = LEGUP_F_main_BB_for_end140_68;
LEGUP_F_main_BB_for_end140_68:
		next_state = LEGUP_F_main_BB_for_end140_69;
LEGUP_F_main_BB_for_end140_69:
		next_state = LEGUP_F_main_BB_for_end140_70;
LEGUP_F_main_BB_for_end140_70:
		next_state = LEGUP_F_main_BB_for_end140_71;
LEGUP_F_main_BB_for_end140_71:
		next_state = LEGUP_F_main_BB_for_end140_72;
LEGUP_F_main_BB_for_end140_72:
		next_state = LEGUP_F_main_BB_for_end140_73;
LEGUP_F_main_BB_for_end140_73:
		next_state = LEGUP_F_main_BB_for_end140_74;
LEGUP_F_main_BB_for_end140_74:
		next_state = LEGUP_F_main_BB_for_end140_75;
LEGUP_F_main_BB_for_end140_75:
		next_state = LEGUP_F_main_BB_for_end140_76;
LEGUP_F_main_BB_for_end140_76:
		next_state = LEGUP_F_main_BB_for_end140_77;
LEGUP_F_main_BB_for_end140_77:
		next_state = LEGUP_F_main_BB_for_end140_78;
LEGUP_F_main_BB_for_end140_78:
		next_state = LEGUP_F_main_BB_for_end140_79;
LEGUP_F_main_BB_for_end140_79:
		next_state = LEGUP_F_main_BB_for_end140_80;
LEGUP_F_main_BB_for_end140_80:
		next_state = LEGUP_F_main_BB_for_end140_81;
LEGUP_F_main_BB_for_end140_81:
		next_state = LEGUP_F_main_BB_for_end140_82;
LEGUP_F_main_BB_for_end140_82:
		next_state = LEGUP_F_main_BB_for_end140_83;
LEGUP_F_main_BB_for_end140_83:
		next_state = LEGUP_F_main_BB_for_end140_84;
LEGUP_F_main_BB_for_end140_84:
		next_state = LEGUP_F_main_BB_for_end140_85;
LEGUP_F_main_BB_for_end140_85:
		next_state = LEGUP_F_main_BB_for_end140_86;
LEGUP_F_main_BB_for_end140_86:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_for_end389_415:
		next_state = LEGUP_F_main_BB_cleanup_416;
LEGUP_F_main_BB_if_else183_160:
	if ((fsm_stall == 1'd0) && (main_if_else183_cmp184 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then185_161;
	else if ((fsm_stall == 1'd0) && (main_if_else183_cmp184 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else196_195;
LEGUP_F_main_BB_if_else196_195:
		next_state = LEGUP_F_main_BB_if_else196_196;
LEGUP_F_main_BB_if_else196_196:
		next_state = LEGUP_F_main_BB_if_else196_197;
LEGUP_F_main_BB_if_else196_197:
		next_state = LEGUP_F_main_BB_if_else196_198;
LEGUP_F_main_BB_if_else196_198:
		next_state = LEGUP_F_main_BB_if_else196_199;
LEGUP_F_main_BB_if_else196_199:
		next_state = LEGUP_F_main_BB_if_else196_200;
LEGUP_F_main_BB_if_else196_200:
		next_state = LEGUP_F_main_BB_if_else196_201;
LEGUP_F_main_BB_if_else196_201:
		next_state = LEGUP_F_main_BB_if_else196_202;
LEGUP_F_main_BB_if_else196_202:
		next_state = LEGUP_F_main_BB_if_else196_203;
LEGUP_F_main_BB_if_else196_203:
		next_state = LEGUP_F_main_BB_if_else196_204;
LEGUP_F_main_BB_if_else196_204:
		next_state = LEGUP_F_main_BB_if_else196_205;
LEGUP_F_main_BB_if_else196_205:
		next_state = LEGUP_F_main_BB_if_else196_206;
LEGUP_F_main_BB_if_else196_206:
		next_state = LEGUP_F_main_BB_if_else196_207;
LEGUP_F_main_BB_if_else196_207:
		next_state = LEGUP_F_main_BB_if_else196_208;
LEGUP_F_main_BB_if_else196_208:
		next_state = LEGUP_F_main_BB_if_else196_209;
LEGUP_F_main_BB_if_else196_209:
		next_state = LEGUP_F_main_BB_if_else196_210;
LEGUP_F_main_BB_if_else196_210:
		next_state = LEGUP_F_main_BB_if_else196_211;
LEGUP_F_main_BB_if_else196_211:
		next_state = LEGUP_F_main_BB_if_else196_212;
LEGUP_F_main_BB_if_else196_212:
		next_state = LEGUP_F_main_BB_if_else196_213;
LEGUP_F_main_BB_if_else196_213:
		next_state = LEGUP_F_main_BB_if_else196_214;
LEGUP_F_main_BB_if_else196_214:
		next_state = LEGUP_F_main_BB_if_else196_215;
LEGUP_F_main_BB_if_else196_215:
		next_state = LEGUP_F_main_BB_if_else196_216;
LEGUP_F_main_BB_if_else196_216:
		next_state = LEGUP_F_main_BB_if_else196_217;
LEGUP_F_main_BB_if_else196_217:
		next_state = LEGUP_F_main_BB_if_else196_218;
LEGUP_F_main_BB_if_else196_218:
		next_state = LEGUP_F_main_BB_if_else196_219;
LEGUP_F_main_BB_if_else196_219:
		next_state = LEGUP_F_main_BB_if_else196_220;
LEGUP_F_main_BB_if_else196_220:
		next_state = LEGUP_F_main_BB_if_else196_221;
LEGUP_F_main_BB_if_else196_221:
		next_state = LEGUP_F_main_BB_if_else196_222;
LEGUP_F_main_BB_if_else196_222:
		next_state = LEGUP_F_main_BB_if_else196_223;
LEGUP_F_main_BB_if_else196_223:
		next_state = LEGUP_F_main_BB_if_else196_224;
LEGUP_F_main_BB_if_else196_224:
		next_state = LEGUP_F_main_BB_if_else196_225;
LEGUP_F_main_BB_if_else196_225:
		next_state = LEGUP_F_main_BB_if_else196_226;
LEGUP_F_main_BB_if_else196_226:
		next_state = LEGUP_F_main_BB_if_else196_227;
LEGUP_F_main_BB_if_else196_227:
	if ((fsm_stall == 1'd0) && (main_if_else196_cmp197_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then198_228;
	else if ((fsm_stall == 1'd0) && (main_if_else196_cmp197_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else209_261;
LEGUP_F_main_BB_if_else209_261:
		next_state = LEGUP_F_main_BB_if_else209_262;
LEGUP_F_main_BB_if_else209_262:
		next_state = LEGUP_F_main_BB_if_else209_263;
LEGUP_F_main_BB_if_else209_263:
		next_state = LEGUP_F_main_BB_if_else209_264;
LEGUP_F_main_BB_if_else209_264:
		next_state = LEGUP_F_main_BB_if_else209_265;
LEGUP_F_main_BB_if_else209_265:
		next_state = LEGUP_F_main_BB_if_else209_266;
LEGUP_F_main_BB_if_else209_266:
		next_state = LEGUP_F_main_BB_if_else209_267;
LEGUP_F_main_BB_if_else209_267:
		next_state = LEGUP_F_main_BB_if_else209_268;
LEGUP_F_main_BB_if_else209_268:
		next_state = LEGUP_F_main_BB_if_else209_269;
LEGUP_F_main_BB_if_else209_269:
		next_state = LEGUP_F_main_BB_if_else209_270;
LEGUP_F_main_BB_if_else209_270:
		next_state = LEGUP_F_main_BB_if_else209_271;
LEGUP_F_main_BB_if_else209_271:
		next_state = LEGUP_F_main_BB_if_else209_272;
LEGUP_F_main_BB_if_else209_272:
		next_state = LEGUP_F_main_BB_if_else209_273;
LEGUP_F_main_BB_if_else209_273:
		next_state = LEGUP_F_main_BB_if_else209_274;
LEGUP_F_main_BB_if_else209_274:
		next_state = LEGUP_F_main_BB_if_else209_275;
LEGUP_F_main_BB_if_else209_275:
		next_state = LEGUP_F_main_BB_if_else209_276;
LEGUP_F_main_BB_if_else209_276:
		next_state = LEGUP_F_main_BB_if_else209_277;
LEGUP_F_main_BB_if_else209_277:
		next_state = LEGUP_F_main_BB_if_else209_278;
LEGUP_F_main_BB_if_else209_278:
		next_state = LEGUP_F_main_BB_if_else209_279;
LEGUP_F_main_BB_if_else209_279:
		next_state = LEGUP_F_main_BB_if_else209_280;
LEGUP_F_main_BB_if_else209_280:
		next_state = LEGUP_F_main_BB_if_else209_281;
LEGUP_F_main_BB_if_else209_281:
		next_state = LEGUP_F_main_BB_if_else209_282;
LEGUP_F_main_BB_if_else209_282:
		next_state = LEGUP_F_main_BB_if_else209_283;
LEGUP_F_main_BB_if_else209_283:
		next_state = LEGUP_F_main_BB_if_else209_284;
LEGUP_F_main_BB_if_else209_284:
		next_state = LEGUP_F_main_BB_if_else209_285;
LEGUP_F_main_BB_if_else209_285:
		next_state = LEGUP_F_main_BB_if_else209_286;
LEGUP_F_main_BB_if_else209_286:
		next_state = LEGUP_F_main_BB_if_else209_287;
LEGUP_F_main_BB_if_else209_287:
		next_state = LEGUP_F_main_BB_if_else209_288;
LEGUP_F_main_BB_if_else209_288:
		next_state = LEGUP_F_main_BB_if_else209_289;
LEGUP_F_main_BB_if_else209_289:
		next_state = LEGUP_F_main_BB_if_else209_290;
LEGUP_F_main_BB_if_else209_290:
		next_state = LEGUP_F_main_BB_if_else209_291;
LEGUP_F_main_BB_if_else209_291:
		next_state = LEGUP_F_main_BB_if_else209_292;
LEGUP_F_main_BB_if_else209_292:
		next_state = LEGUP_F_main_BB_if_else209_293;
LEGUP_F_main_BB_if_else209_293:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_else223_294:
	if ((fsm_stall == 1'd0) && (main_if_end165_cmp171_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then225_295;
	else if ((fsm_stall == 1'd0) && (main_if_end165_cmp171_reg == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock16_298;
LEGUP_F_main_BB_if_else244_307:
		next_state = LEGUP_F_main_BB_if_else244_308;
LEGUP_F_main_BB_if_else244_308:
		next_state = LEGUP_F_main_BB_if_else244_309;
LEGUP_F_main_BB_if_else244_309:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_else269_316:
	if ((fsm_stall == 1'd0) && (main_if_else269_cmp270 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then271_317;
	else if ((fsm_stall == 1'd0) && (main_if_else269_cmp270 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end274_318;
LEGUP_F_main_BB_if_else307_360:
		next_state = LEGUP_F_main_BB_if_end314_361;
LEGUP_F_main_BB_if_else333_369:
	if ((fsm_stall == 1'd0) && (main_if_else333_cmp334 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then335_370;
	else if ((fsm_stall == 1'd0) && (main_if_else333_cmp334 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end165_100:
		next_state = LEGUP_F_main_BB_if_end165_101;
LEGUP_F_main_BB_if_end165_101:
		next_state = LEGUP_F_main_BB_if_end165_102;
LEGUP_F_main_BB_if_end165_102:
		next_state = LEGUP_F_main_BB_if_end165_103;
LEGUP_F_main_BB_if_end165_103:
		next_state = LEGUP_F_main_BB_if_end165_104;
LEGUP_F_main_BB_if_end165_104:
		next_state = LEGUP_F_main_BB_if_end165_105;
LEGUP_F_main_BB_if_end165_105:
		next_state = LEGUP_F_main_BB_if_end165_106;
LEGUP_F_main_BB_if_end165_106:
		next_state = LEGUP_F_main_BB_if_end165_107;
LEGUP_F_main_BB_if_end165_107:
		next_state = LEGUP_F_main_BB_if_end165_108;
LEGUP_F_main_BB_if_end165_108:
		next_state = LEGUP_F_main_BB_if_end165_109;
LEGUP_F_main_BB_if_end165_109:
		next_state = LEGUP_F_main_BB_if_end165_110;
LEGUP_F_main_BB_if_end165_110:
		next_state = LEGUP_F_main_BB_if_end165_111;
LEGUP_F_main_BB_if_end165_111:
		next_state = LEGUP_F_main_BB_if_end165_112;
LEGUP_F_main_BB_if_end165_112:
		next_state = LEGUP_F_main_BB_if_end165_113;
LEGUP_F_main_BB_if_end165_113:
		next_state = LEGUP_F_main_BB_if_end165_114;
LEGUP_F_main_BB_if_end165_114:
		next_state = LEGUP_F_main_BB_if_end165_115;
LEGUP_F_main_BB_if_end165_115:
		next_state = LEGUP_F_main_BB_if_end165_116;
LEGUP_F_main_BB_if_end165_116:
		next_state = LEGUP_F_main_BB_if_end165_117;
LEGUP_F_main_BB_if_end165_117:
		next_state = LEGUP_F_main_BB_if_end165_118;
LEGUP_F_main_BB_if_end165_118:
		next_state = LEGUP_F_main_BB_if_end165_119;
LEGUP_F_main_BB_if_end165_119:
		next_state = LEGUP_F_main_BB_if_end165_120;
LEGUP_F_main_BB_if_end165_120:
		next_state = LEGUP_F_main_BB_if_end165_121;
LEGUP_F_main_BB_if_end165_121:
		next_state = LEGUP_F_main_BB_if_end165_122;
LEGUP_F_main_BB_if_end165_122:
		next_state = LEGUP_F_main_BB_if_end165_123;
LEGUP_F_main_BB_if_end165_123:
		next_state = LEGUP_F_main_BB_if_end165_124;
LEGUP_F_main_BB_if_end165_124:
	if ((fsm_stall == 1'd0) && (main_if_end165_cmp169_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then170_125;
	else if ((fsm_stall == 1'd0) && (main_if_end165_cmp169_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else223_294;
LEGUP_F_main_BB_if_end165_92:
		next_state = LEGUP_F_main_BB_if_end165_93;
LEGUP_F_main_BB_if_end165_93:
		next_state = LEGUP_F_main_BB_if_end165_94;
LEGUP_F_main_BB_if_end165_94:
		next_state = LEGUP_F_main_BB_if_end165_95;
LEGUP_F_main_BB_if_end165_95:
		next_state = LEGUP_F_main_BB_if_end165_96;
LEGUP_F_main_BB_if_end165_96:
		next_state = LEGUP_F_main_BB_if_end165_97;
LEGUP_F_main_BB_if_end165_97:
		next_state = LEGUP_F_main_BB_if_end165_98;
LEGUP_F_main_BB_if_end165_98:
		next_state = LEGUP_F_main_BB_if_end165_99;
LEGUP_F_main_BB_if_end165_99:
		next_state = LEGUP_F_main_BB_if_end165_100;
LEGUP_F_main_BB_if_end252_310:
		next_state = LEGUP_F_main_BB_if_end252_311;
LEGUP_F_main_BB_if_end252_311:
		next_state = LEGUP_F_main_BB_if_end252_312;
LEGUP_F_main_BB_if_end252_312:
		next_state = LEGUP_F_main_BB_if_end252_313;
LEGUP_F_main_BB_if_end252_313:
	if ((fsm_stall == 1'd0) && (main_if_end252_or_cond577 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then264_314;
	else if ((fsm_stall == 1'd0) && (main_if_end252_or_cond577 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else269_316;
LEGUP_F_main_BB_if_end274_318:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end283_321:
		next_state = LEGUP_F_main_BB_if_end283_322;
LEGUP_F_main_BB_if_end283_322:
		next_state = LEGUP_F_main_BB_if_end283_323;
LEGUP_F_main_BB_if_end283_323:
		next_state = LEGUP_F_main_BB_if_end283_324;
LEGUP_F_main_BB_if_end283_324:
		next_state = LEGUP_F_main_BB_if_end283_325;
LEGUP_F_main_BB_if_end283_325:
		next_state = LEGUP_F_main_BB_if_end283_326;
LEGUP_F_main_BB_if_end283_326:
		next_state = LEGUP_F_main_BB_if_end283_327;
LEGUP_F_main_BB_if_end283_327:
		next_state = LEGUP_F_main_BB_if_end283_328;
LEGUP_F_main_BB_if_end283_328:
		next_state = LEGUP_F_main_BB_if_end283_329;
LEGUP_F_main_BB_if_end283_329:
		next_state = LEGUP_F_main_BB_if_end283_330;
LEGUP_F_main_BB_if_end283_330:
		next_state = LEGUP_F_main_BB_if_end283_331;
LEGUP_F_main_BB_if_end283_331:
		next_state = LEGUP_F_main_BB_if_end283_332;
LEGUP_F_main_BB_if_end283_332:
		next_state = LEGUP_F_main_BB_if_end283_333;
LEGUP_F_main_BB_if_end283_333:
		next_state = LEGUP_F_main_BB_if_end283_334;
LEGUP_F_main_BB_if_end283_334:
		next_state = LEGUP_F_main_BB_if_end283_335;
LEGUP_F_main_BB_if_end283_335:
		next_state = LEGUP_F_main_BB_if_end283_336;
LEGUP_F_main_BB_if_end283_336:
		next_state = LEGUP_F_main_BB_if_end283_337;
LEGUP_F_main_BB_if_end283_337:
		next_state = LEGUP_F_main_BB_if_end283_338;
LEGUP_F_main_BB_if_end283_338:
		next_state = LEGUP_F_main_BB_if_end283_339;
LEGUP_F_main_BB_if_end283_339:
		next_state = LEGUP_F_main_BB_if_end283_340;
LEGUP_F_main_BB_if_end283_340:
		next_state = LEGUP_F_main_BB_if_end283_341;
LEGUP_F_main_BB_if_end283_341:
		next_state = LEGUP_F_main_BB_if_end283_342;
LEGUP_F_main_BB_if_end283_342:
		next_state = LEGUP_F_main_BB_if_end283_343;
LEGUP_F_main_BB_if_end283_343:
		next_state = LEGUP_F_main_BB_if_end283_344;
LEGUP_F_main_BB_if_end283_344:
		next_state = LEGUP_F_main_BB_if_end283_345;
LEGUP_F_main_BB_if_end283_345:
		next_state = LEGUP_F_main_BB_if_end283_346;
LEGUP_F_main_BB_if_end283_346:
		next_state = LEGUP_F_main_BB_if_end283_347;
LEGUP_F_main_BB_if_end283_347:
		next_state = LEGUP_F_main_BB_if_end283_348;
LEGUP_F_main_BB_if_end283_348:
		next_state = LEGUP_F_main_BB_if_end283_349;
LEGUP_F_main_BB_if_end283_349:
		next_state = LEGUP_F_main_BB_if_end283_350;
LEGUP_F_main_BB_if_end283_350:
		next_state = LEGUP_F_main_BB_if_end283_351;
LEGUP_F_main_BB_if_end283_351:
		next_state = LEGUP_F_main_BB_if_end283_352;
LEGUP_F_main_BB_if_end283_352:
		next_state = LEGUP_F_main_BB_if_end283_353;
LEGUP_F_main_BB_if_end283_353:
	if ((fsm_stall == 1'd0) && (main_if_end283_Pivot26 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock19_356;
	else if ((fsm_stall == 1'd0) && (main_if_end283_Pivot26 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock23_354;
LEGUP_F_main_BB_if_end314_361:
		next_state = LEGUP_F_main_BB_if_end314_362;
LEGUP_F_main_BB_if_end314_362:
		next_state = LEGUP_F_main_BB_if_end314_363;
LEGUP_F_main_BB_if_end314_363:
		next_state = LEGUP_F_main_BB_if_end314_364;
LEGUP_F_main_BB_if_end314_364:
		next_state = LEGUP_F_main_BB_if_end314_365;
LEGUP_F_main_BB_if_end314_365:
		next_state = LEGUP_F_main_BB_if_end314_366;
LEGUP_F_main_BB_if_end314_366:
	if ((fsm_stall == 1'd0) && (main_if_end314_or_cond580 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then327_367;
	else if ((fsm_stall == 1'd0) && (main_if_end314_or_cond580 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else333_369;
LEGUP_F_main_BB_if_end347_372:
		next_state = LEGUP_F_main_BB_if_end347_373;
LEGUP_F_main_BB_if_end347_373:
		next_state = LEGUP_F_main_BB_if_end347_374;
LEGUP_F_main_BB_if_end347_374:
		next_state = LEGUP_F_main_BB_if_end347_375;
LEGUP_F_main_BB_if_end347_375:
		next_state = LEGUP_F_main_BB_if_end347_376;
LEGUP_F_main_BB_if_end347_376:
		next_state = LEGUP_F_main_BB_if_end347_377;
LEGUP_F_main_BB_if_end347_377:
		next_state = LEGUP_F_main_BB_if_end347_378;
LEGUP_F_main_BB_if_end347_378:
		next_state = LEGUP_F_main_BB_if_end347_379;
LEGUP_F_main_BB_if_end347_379:
		next_state = LEGUP_F_main_BB_if_end347_380;
LEGUP_F_main_BB_if_end347_380:
		next_state = LEGUP_F_main_BB_if_end347_381;
LEGUP_F_main_BB_if_end347_381:
		next_state = LEGUP_F_main_BB_if_end347_382;
LEGUP_F_main_BB_if_end347_382:
		next_state = LEGUP_F_main_BB_if_end347_383;
LEGUP_F_main_BB_if_end347_383:
		next_state = LEGUP_F_main_BB_if_end347_384;
LEGUP_F_main_BB_if_end347_384:
		next_state = LEGUP_F_main_BB_if_end347_385;
LEGUP_F_main_BB_if_end347_385:
		next_state = LEGUP_F_main_BB_if_end347_386;
LEGUP_F_main_BB_if_end347_386:
		next_state = LEGUP_F_main_BB_if_end347_387;
LEGUP_F_main_BB_if_end347_387:
		next_state = LEGUP_F_main_BB_if_end347_388;
LEGUP_F_main_BB_if_end347_388:
		next_state = LEGUP_F_main_BB_if_end347_389;
LEGUP_F_main_BB_if_end347_389:
		next_state = LEGUP_F_main_BB_if_end347_390;
LEGUP_F_main_BB_if_end347_390:
		next_state = LEGUP_F_main_BB_if_end347_391;
LEGUP_F_main_BB_if_end347_391:
		next_state = LEGUP_F_main_BB_if_end347_392;
LEGUP_F_main_BB_if_end347_392:
		next_state = LEGUP_F_main_BB_if_end347_393;
LEGUP_F_main_BB_if_end347_393:
		next_state = LEGUP_F_main_BB_if_end347_394;
LEGUP_F_main_BB_if_end347_394:
		next_state = LEGUP_F_main_BB_if_end347_395;
LEGUP_F_main_BB_if_end347_395:
		next_state = LEGUP_F_main_BB_if_end347_396;
LEGUP_F_main_BB_if_end347_396:
		next_state = LEGUP_F_main_BB_if_end347_397;
LEGUP_F_main_BB_if_end347_397:
		next_state = LEGUP_F_main_BB_if_end347_398;
LEGUP_F_main_BB_if_end347_398:
		next_state = LEGUP_F_main_BB_if_end347_399;
LEGUP_F_main_BB_if_end347_399:
		next_state = LEGUP_F_main_BB_if_end347_400;
LEGUP_F_main_BB_if_end347_400:
		next_state = LEGUP_F_main_BB_if_end347_401;
LEGUP_F_main_BB_if_end347_401:
		next_state = LEGUP_F_main_BB_if_end347_402;
LEGUP_F_main_BB_if_end347_402:
		next_state = LEGUP_F_main_BB_if_end347_403;
LEGUP_F_main_BB_if_end347_403:
		next_state = LEGUP_F_main_BB_if_end347_404;
LEGUP_F_main_BB_if_end347_404:
		next_state = LEGUP_F_main_BB_if_end347_405;
LEGUP_F_main_BB_if_end347_405:
		next_state = LEGUP_F_main_BB_if_end347_406;
LEGUP_F_main_BB_if_end347_406:
		next_state = LEGUP_F_main_BB_if_end347_407;
LEGUP_F_main_BB_if_end347_407:
		next_state = LEGUP_F_main_BB_if_end347_408;
LEGUP_F_main_BB_if_end347_408:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end_88:
		next_state = LEGUP_F_main_BB_if_end_89;
LEGUP_F_main_BB_if_end_89:
		next_state = LEGUP_F_main_BB_if_end_90;
LEGUP_F_main_BB_if_end_90:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then170_125:
	if ((fsm_stall == 1'd0) && (main_if_end165_cmp171_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then172_126;
	else if ((fsm_stall == 1'd0) && (main_if_end165_cmp171_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else183_160;
LEGUP_F_main_BB_if_then172_126:
		next_state = LEGUP_F_main_BB_if_then172_127;
LEGUP_F_main_BB_if_then172_127:
		next_state = LEGUP_F_main_BB_if_then172_128;
LEGUP_F_main_BB_if_then172_128:
		next_state = LEGUP_F_main_BB_if_then172_129;
LEGUP_F_main_BB_if_then172_129:
		next_state = LEGUP_F_main_BB_if_then172_130;
LEGUP_F_main_BB_if_then172_130:
		next_state = LEGUP_F_main_BB_if_then172_131;
LEGUP_F_main_BB_if_then172_131:
		next_state = LEGUP_F_main_BB_if_then172_132;
LEGUP_F_main_BB_if_then172_132:
		next_state = LEGUP_F_main_BB_if_then172_133;
LEGUP_F_main_BB_if_then172_133:
		next_state = LEGUP_F_main_BB_if_then172_134;
LEGUP_F_main_BB_if_then172_134:
		next_state = LEGUP_F_main_BB_if_then172_135;
LEGUP_F_main_BB_if_then172_135:
		next_state = LEGUP_F_main_BB_if_then172_136;
LEGUP_F_main_BB_if_then172_136:
		next_state = LEGUP_F_main_BB_if_then172_137;
LEGUP_F_main_BB_if_then172_137:
		next_state = LEGUP_F_main_BB_if_then172_138;
LEGUP_F_main_BB_if_then172_138:
		next_state = LEGUP_F_main_BB_if_then172_139;
LEGUP_F_main_BB_if_then172_139:
		next_state = LEGUP_F_main_BB_if_then172_140;
LEGUP_F_main_BB_if_then172_140:
		next_state = LEGUP_F_main_BB_if_then172_141;
LEGUP_F_main_BB_if_then172_141:
		next_state = LEGUP_F_main_BB_if_then172_142;
LEGUP_F_main_BB_if_then172_142:
		next_state = LEGUP_F_main_BB_if_then172_143;
LEGUP_F_main_BB_if_then172_143:
		next_state = LEGUP_F_main_BB_if_then172_144;
LEGUP_F_main_BB_if_then172_144:
		next_state = LEGUP_F_main_BB_if_then172_145;
LEGUP_F_main_BB_if_then172_145:
		next_state = LEGUP_F_main_BB_if_then172_146;
LEGUP_F_main_BB_if_then172_146:
		next_state = LEGUP_F_main_BB_if_then172_147;
LEGUP_F_main_BB_if_then172_147:
		next_state = LEGUP_F_main_BB_if_then172_148;
LEGUP_F_main_BB_if_then172_148:
		next_state = LEGUP_F_main_BB_if_then172_149;
LEGUP_F_main_BB_if_then172_149:
		next_state = LEGUP_F_main_BB_if_then172_150;
LEGUP_F_main_BB_if_then172_150:
		next_state = LEGUP_F_main_BB_if_then172_151;
LEGUP_F_main_BB_if_then172_151:
		next_state = LEGUP_F_main_BB_if_then172_152;
LEGUP_F_main_BB_if_then172_152:
		next_state = LEGUP_F_main_BB_if_then172_153;
LEGUP_F_main_BB_if_then172_153:
		next_state = LEGUP_F_main_BB_if_then172_154;
LEGUP_F_main_BB_if_then172_154:
		next_state = LEGUP_F_main_BB_if_then172_155;
LEGUP_F_main_BB_if_then172_155:
		next_state = LEGUP_F_main_BB_if_then172_156;
LEGUP_F_main_BB_if_then172_156:
		next_state = LEGUP_F_main_BB_if_then172_157;
LEGUP_F_main_BB_if_then172_157:
		next_state = LEGUP_F_main_BB_if_then172_158;
LEGUP_F_main_BB_if_then172_158:
		next_state = LEGUP_F_main_BB_if_then172_159;
LEGUP_F_main_BB_if_then172_159:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_then185_161:
		next_state = LEGUP_F_main_BB_if_then185_162;
LEGUP_F_main_BB_if_then185_162:
		next_state = LEGUP_F_main_BB_if_then185_163;
LEGUP_F_main_BB_if_then185_163:
		next_state = LEGUP_F_main_BB_if_then185_164;
LEGUP_F_main_BB_if_then185_164:
		next_state = LEGUP_F_main_BB_if_then185_165;
LEGUP_F_main_BB_if_then185_165:
		next_state = LEGUP_F_main_BB_if_then185_166;
LEGUP_F_main_BB_if_then185_166:
		next_state = LEGUP_F_main_BB_if_then185_167;
LEGUP_F_main_BB_if_then185_167:
		next_state = LEGUP_F_main_BB_if_then185_168;
LEGUP_F_main_BB_if_then185_168:
		next_state = LEGUP_F_main_BB_if_then185_169;
LEGUP_F_main_BB_if_then185_169:
		next_state = LEGUP_F_main_BB_if_then185_170;
LEGUP_F_main_BB_if_then185_170:
		next_state = LEGUP_F_main_BB_if_then185_171;
LEGUP_F_main_BB_if_then185_171:
		next_state = LEGUP_F_main_BB_if_then185_172;
LEGUP_F_main_BB_if_then185_172:
		next_state = LEGUP_F_main_BB_if_then185_173;
LEGUP_F_main_BB_if_then185_173:
		next_state = LEGUP_F_main_BB_if_then185_174;
LEGUP_F_main_BB_if_then185_174:
		next_state = LEGUP_F_main_BB_if_then185_175;
LEGUP_F_main_BB_if_then185_175:
		next_state = LEGUP_F_main_BB_if_then185_176;
LEGUP_F_main_BB_if_then185_176:
		next_state = LEGUP_F_main_BB_if_then185_177;
LEGUP_F_main_BB_if_then185_177:
		next_state = LEGUP_F_main_BB_if_then185_178;
LEGUP_F_main_BB_if_then185_178:
		next_state = LEGUP_F_main_BB_if_then185_179;
LEGUP_F_main_BB_if_then185_179:
		next_state = LEGUP_F_main_BB_if_then185_180;
LEGUP_F_main_BB_if_then185_180:
		next_state = LEGUP_F_main_BB_if_then185_181;
LEGUP_F_main_BB_if_then185_181:
		next_state = LEGUP_F_main_BB_if_then185_182;
LEGUP_F_main_BB_if_then185_182:
		next_state = LEGUP_F_main_BB_if_then185_183;
LEGUP_F_main_BB_if_then185_183:
		next_state = LEGUP_F_main_BB_if_then185_184;
LEGUP_F_main_BB_if_then185_184:
		next_state = LEGUP_F_main_BB_if_then185_185;
LEGUP_F_main_BB_if_then185_185:
		next_state = LEGUP_F_main_BB_if_then185_186;
LEGUP_F_main_BB_if_then185_186:
		next_state = LEGUP_F_main_BB_if_then185_187;
LEGUP_F_main_BB_if_then185_187:
		next_state = LEGUP_F_main_BB_if_then185_188;
LEGUP_F_main_BB_if_then185_188:
		next_state = LEGUP_F_main_BB_if_then185_189;
LEGUP_F_main_BB_if_then185_189:
		next_state = LEGUP_F_main_BB_if_then185_190;
LEGUP_F_main_BB_if_then185_190:
		next_state = LEGUP_F_main_BB_if_then185_191;
LEGUP_F_main_BB_if_then185_191:
		next_state = LEGUP_F_main_BB_if_then185_192;
LEGUP_F_main_BB_if_then185_192:
		next_state = LEGUP_F_main_BB_if_then185_193;
LEGUP_F_main_BB_if_then185_193:
		next_state = LEGUP_F_main_BB_if_then185_194;
LEGUP_F_main_BB_if_then185_194:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_then198_228:
		next_state = LEGUP_F_main_BB_if_then198_229;
LEGUP_F_main_BB_if_then198_229:
		next_state = LEGUP_F_main_BB_if_then198_230;
LEGUP_F_main_BB_if_then198_230:
		next_state = LEGUP_F_main_BB_if_then198_231;
LEGUP_F_main_BB_if_then198_231:
		next_state = LEGUP_F_main_BB_if_then198_232;
LEGUP_F_main_BB_if_then198_232:
		next_state = LEGUP_F_main_BB_if_then198_233;
LEGUP_F_main_BB_if_then198_233:
		next_state = LEGUP_F_main_BB_if_then198_234;
LEGUP_F_main_BB_if_then198_234:
		next_state = LEGUP_F_main_BB_if_then198_235;
LEGUP_F_main_BB_if_then198_235:
		next_state = LEGUP_F_main_BB_if_then198_236;
LEGUP_F_main_BB_if_then198_236:
		next_state = LEGUP_F_main_BB_if_then198_237;
LEGUP_F_main_BB_if_then198_237:
		next_state = LEGUP_F_main_BB_if_then198_238;
LEGUP_F_main_BB_if_then198_238:
		next_state = LEGUP_F_main_BB_if_then198_239;
LEGUP_F_main_BB_if_then198_239:
		next_state = LEGUP_F_main_BB_if_then198_240;
LEGUP_F_main_BB_if_then198_240:
		next_state = LEGUP_F_main_BB_if_then198_241;
LEGUP_F_main_BB_if_then198_241:
		next_state = LEGUP_F_main_BB_if_then198_242;
LEGUP_F_main_BB_if_then198_242:
		next_state = LEGUP_F_main_BB_if_then198_243;
LEGUP_F_main_BB_if_then198_243:
		next_state = LEGUP_F_main_BB_if_then198_244;
LEGUP_F_main_BB_if_then198_244:
		next_state = LEGUP_F_main_BB_if_then198_245;
LEGUP_F_main_BB_if_then198_245:
		next_state = LEGUP_F_main_BB_if_then198_246;
LEGUP_F_main_BB_if_then198_246:
		next_state = LEGUP_F_main_BB_if_then198_247;
LEGUP_F_main_BB_if_then198_247:
		next_state = LEGUP_F_main_BB_if_then198_248;
LEGUP_F_main_BB_if_then198_248:
		next_state = LEGUP_F_main_BB_if_then198_249;
LEGUP_F_main_BB_if_then198_249:
		next_state = LEGUP_F_main_BB_if_then198_250;
LEGUP_F_main_BB_if_then198_250:
		next_state = LEGUP_F_main_BB_if_then198_251;
LEGUP_F_main_BB_if_then198_251:
		next_state = LEGUP_F_main_BB_if_then198_252;
LEGUP_F_main_BB_if_then198_252:
		next_state = LEGUP_F_main_BB_if_then198_253;
LEGUP_F_main_BB_if_then198_253:
		next_state = LEGUP_F_main_BB_if_then198_254;
LEGUP_F_main_BB_if_then198_254:
		next_state = LEGUP_F_main_BB_if_then198_255;
LEGUP_F_main_BB_if_then198_255:
		next_state = LEGUP_F_main_BB_if_then198_256;
LEGUP_F_main_BB_if_then198_256:
		next_state = LEGUP_F_main_BB_if_then198_257;
LEGUP_F_main_BB_if_then198_257:
		next_state = LEGUP_F_main_BB_if_then198_258;
LEGUP_F_main_BB_if_then198_258:
		next_state = LEGUP_F_main_BB_if_then198_259;
LEGUP_F_main_BB_if_then198_259:
		next_state = LEGUP_F_main_BB_if_then198_260;
LEGUP_F_main_BB_if_then198_260:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_then225_295:
		next_state = LEGUP_F_main_BB_if_then225_296;
LEGUP_F_main_BB_if_then225_296:
		next_state = LEGUP_F_main_BB_if_then225_297;
LEGUP_F_main_BB_if_then225_297:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_then232_301:
		next_state = LEGUP_F_main_BB_if_then232_302;
LEGUP_F_main_BB_if_then232_302:
		next_state = LEGUP_F_main_BB_if_then232_303;
LEGUP_F_main_BB_if_then232_303:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_then239_304:
		next_state = LEGUP_F_main_BB_if_then239_305;
LEGUP_F_main_BB_if_then239_305:
		next_state = LEGUP_F_main_BB_if_then239_306;
LEGUP_F_main_BB_if_then239_306:
		next_state = LEGUP_F_main_BB_if_end252_310;
LEGUP_F_main_BB_if_then264_314:
		next_state = LEGUP_F_main_BB_if_then264_315;
LEGUP_F_main_BB_if_then264_315:
		next_state = LEGUP_F_main_BB_if_end274_318;
LEGUP_F_main_BB_if_then271_317:
		next_state = LEGUP_F_main_BB_cleanup_416;
LEGUP_F_main_BB_if_then281_320:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then288_357:
		next_state = LEGUP_F_main_BB_if_end314_361;
LEGUP_F_main_BB_if_then295_358:
		next_state = LEGUP_F_main_BB_if_end314_361;
LEGUP_F_main_BB_if_then302_359:
		next_state = LEGUP_F_main_BB_if_end314_361;
LEGUP_F_main_BB_if_then327_367:
		next_state = LEGUP_F_main_BB_if_then327_368;
LEGUP_F_main_BB_if_then327_368:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then335_370:
		next_state = LEGUP_F_main_BB_cleanup_416;
LEGUP_F_main_BB_sw_bb151_87:
	if ((fsm_stall == 1'd0) && (main_sw_bb151_cmp152 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb151_cmp152 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end_88;
LEGUP_F_main_BB_sw_bb162_91:
	if ((fsm_stall == 1'd0) && (main_sw_bb162_cmp163 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end165_92;
	else if ((fsm_stall == 1'd0) && (main_sw_bb162_cmp163 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_sw_bb279_319:
	if ((fsm_stall == 1'd0) && (main_sw_bb279_cmp280 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end283_321;
	else if ((fsm_stall == 1'd0) && (main_sw_bb279_cmp280 == 1'd0))
		next_state = LEGUP_F_main_BB_if_then281_320;
LEGUP_F_main_BB_sw_bb344_371:
	if ((fsm_stall == 1'd0) && (main_sw_bb344_cmp345 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb344_cmp345 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end347_372;
LEGUP_F_main_BB_sw_bb_11:
		next_state = LEGUP_F_main_BB_sw_bb_12;
LEGUP_F_main_BB_sw_bb_12:
		next_state = LEGUP_F_main_BB_sw_bb_13;
LEGUP_F_main_BB_sw_bb_13:
		next_state = LEGUP_F_main_BB_sw_bb_14;
LEGUP_F_main_BB_sw_bb_14:
		next_state = LEGUP_F_main_BB_sw_bb_15;
LEGUP_F_main_BB_sw_bb_15:
		next_state = LEGUP_F_main_BB_sw_bb_16;
LEGUP_F_main_BB_sw_bb_16:
		next_state = LEGUP_F_main_BB_sw_bb_17;
LEGUP_F_main_BB_sw_bb_17:
		next_state = LEGUP_F_main_BB_sw_bb_18;
LEGUP_F_main_BB_sw_bb_18:
		next_state = LEGUP_F_main_BB_sw_bb_19;
LEGUP_F_main_BB_sw_bb_19:
		next_state = LEGUP_F_main_BB_sw_bb_20;
LEGUP_F_main_BB_sw_bb_20:
		next_state = LEGUP_F_main_BB_sw_bb_21;
LEGUP_F_main_BB_sw_bb_21:
		next_state = LEGUP_F_main_BB_sw_bb_22;
LEGUP_F_main_BB_sw_bb_22:
		next_state = LEGUP_F_main_BB_sw_bb_23;
LEGUP_F_main_BB_sw_bb_23:
		next_state = LEGUP_F_main_BB_sw_bb_24;
LEGUP_F_main_BB_sw_bb_24:
		next_state = LEGUP_F_main_BB_sw_bb_25;
LEGUP_F_main_BB_sw_bb_25:
		next_state = LEGUP_F_main_BB_sw_bb_26;
LEGUP_F_main_BB_sw_bb_26:
		next_state = LEGUP_F_main_BB_sw_bb_27;
LEGUP_F_main_BB_sw_bb_27:
		next_state = LEGUP_F_main_BB_sw_bb_28;
LEGUP_F_main_BB_sw_bb_28:
		next_state = LEGUP_F_main_BB_sw_bb_29;
LEGUP_F_main_BB_sw_bb_29:
		next_state = LEGUP_F_main_BB_sw_bb_30;
LEGUP_F_main_BB_sw_bb_30:
		next_state = LEGUP_F_main_BB_sw_bb_31;
LEGUP_F_main_BB_sw_bb_31:
		next_state = LEGUP_F_main_BB_sw_bb_32;
LEGUP_F_main_BB_sw_bb_32:
		next_state = LEGUP_F_main_BB_sw_bb_33;
LEGUP_F_main_BB_sw_bb_33:
		next_state = LEGUP_F_main_BB_sw_bb_34;
LEGUP_F_main_BB_sw_bb_34:
		next_state = LEGUP_F_main_BB_sw_bb_35;
LEGUP_F_main_BB_sw_bb_35:
		next_state = LEGUP_F_main_BB_sw_bb_36;
LEGUP_F_main_BB_sw_bb_36:
		next_state = LEGUP_F_main_BB_sw_bb_37;
LEGUP_F_main_BB_sw_bb_37:
		next_state = LEGUP_F_main_BB_sw_bb_38;
LEGUP_F_main_BB_sw_bb_38:
		next_state = LEGUP_F_main_BB_sw_bb_39;
LEGUP_F_main_BB_sw_bb_39:
		next_state = LEGUP_F_main_BB_sw_bb_40;
LEGUP_F_main_BB_sw_bb_40:
		next_state = LEGUP_F_main_BB_sw_bb_41;
LEGUP_F_main_BB_sw_bb_41:
		next_state = LEGUP_F_main_BB_for_cond125_preheader_42;
default:
	next_state = cur_state;
endcase

end
assign fsm_stall = 1'd0;
assign main_entry_vla1572_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla1572_sub_reg <= main_entry_vla1572_sub;
	end
end
assign main_entry_vla571_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla571_sub_reg <= main_entry_vla571_sub;
	end
end
assign main_entry_arrayidx6 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx6_reg <= main_entry_arrayidx6;
	end
end
assign main_entry_arrayidx7 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx7_reg <= main_entry_arrayidx7;
	end
end
assign main_entry_arrayidx8 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx8_reg <= main_entry_arrayidx8;
	end
end
assign main_entry_arrayidx9 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx9_reg <= main_entry_arrayidx9;
	end
end
assign main_entry_arrayidx10 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx10_reg <= main_entry_arrayidx10;
	end
end
assign main_entry_arrayidx11 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx11_reg <= main_entry_arrayidx11;
	end
end
assign main_entry_arrayidx12 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx12_reg <= main_entry_arrayidx12;
	end
end
assign main_entry_arrayidx13 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx13_reg <= main_entry_arrayidx13;
	end
end
assign main_entry_arrayidx14 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx14_reg <= main_entry_arrayidx14;
	end
end
assign main_entry_arrayidx15 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx15_reg <= main_entry_arrayidx15;
	end
end
assign main_entry_arrayidx16 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx16_reg <= main_entry_arrayidx16;
	end
end
assign main_entry_arrayidx17 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx17_reg <= main_entry_arrayidx17;
	end
end
assign main_entry_arrayidx18 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx18_reg <= main_entry_arrayidx18;
	end
end
assign main_entry_arrayidx19 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx19_reg <= main_entry_arrayidx19;
	end
end
assign main_entry_arrayidx20 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx20_reg <= main_entry_arrayidx20;
	end
end
assign main_entry_arrayidx21 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx21_reg <= main_entry_arrayidx21;
	end
end
assign main_entry_arrayidx22 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx22_reg <= main_entry_arrayidx22;
	end
end
assign main_entry_arrayidx23 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx23_reg <= main_entry_arrayidx23;
	end
end
assign main_entry_arrayidx24 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx24_reg <= main_entry_arrayidx24;
	end
end
assign main_entry_arrayidx25 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx25_reg <= main_entry_arrayidx25;
	end
end
assign main_entry_arrayidx26 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx26_reg <= main_entry_arrayidx26;
	end
end
assign main_entry_arrayidx27 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx27_reg <= main_entry_arrayidx27;
	end
end
assign main_entry_arrayidx28 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx28_reg <= main_entry_arrayidx28;
	end
end
assign main_entry_arrayidx29 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx29_reg <= main_entry_arrayidx29;
	end
end
assign main_entry_arrayidx30 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx30_reg <= main_entry_arrayidx30;
	end
end
assign main_entry_arrayidx31 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx31_reg <= main_entry_arrayidx31;
	end
end
assign main_entry_arrayidx32 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx32_reg <= main_entry_arrayidx32;
	end
end
assign main_entry_arrayidx33 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx33_reg <= main_entry_arrayidx33;
	end
end
assign main_entry_arrayidx34 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx34_reg <= main_entry_arrayidx34;
	end
end
assign main_entry_arrayidx35 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx35_reg <= main_entry_arrayidx35;
	end
end
assign main_entry_arrayidx36 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx36_reg <= main_entry_arrayidx36;
	end
end
assign main_entry_arrayidx37 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx37_reg <= main_entry_arrayidx37;
	end
end
assign main_entry_arrayidx38 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx38_reg <= main_entry_arrayidx38;
	end
end
assign main_entry_arrayidx39 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx39_reg <= main_entry_arrayidx39;
	end
end
assign main_entry_arrayidx40 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx40_reg <= main_entry_arrayidx40;
	end
end
assign main_entry_arrayidx41 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx41_reg <= main_entry_arrayidx41;
	end
end
assign main_entry_arrayidx42 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx42_reg <= main_entry_arrayidx42;
	end
end
assign main_entry_arrayidx43 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx43_reg <= main_entry_arrayidx43;
	end
end
assign main_entry_arrayidx44 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx44_reg <= main_entry_arrayidx44;
	end
end
assign main_entry_arrayidx45 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx45_reg <= main_entry_arrayidx45;
	end
end
assign main_entry_arrayidx46 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx46_reg <= main_entry_arrayidx46;
	end
end
assign main_entry_arrayidx47 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_reg <= main_entry_arrayidx47;
	end
end
assign main_entry_arrayidx48 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx48_reg <= main_entry_arrayidx48;
	end
end
assign main_entry_arrayidx49 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx49_reg <= main_entry_arrayidx49;
	end
end
assign main_entry_arrayidx50 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx50_reg <= main_entry_arrayidx50;
	end
end
assign main_entry_arrayidx51 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx51_reg <= main_entry_arrayidx51;
	end
end
assign main_entry_arrayidx52 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx52_reg <= main_entry_arrayidx52;
	end
end
assign main_entry_arrayidx53 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_reg <= main_entry_arrayidx53;
	end
end
assign main_entry_arrayidx54 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_reg <= main_entry_arrayidx54;
	end
end
assign main_entry_arrayidx55 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_reg <= main_entry_arrayidx55;
	end
end
assign main_entry_arrayidx56 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx56_reg <= main_entry_arrayidx56;
	end
end
assign main_entry_arrayidx57 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx57_reg <= main_entry_arrayidx57;
	end
end
assign main_entry_arrayidx58 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx58_reg <= main_entry_arrayidx58;
	end
end
assign main_entry_arrayidx59 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx59_reg <= main_entry_arrayidx59;
	end
end
assign main_entry_arrayidx60 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_reg <= main_entry_arrayidx60;
	end
end
assign main_entry_arrayidx61 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_reg <= main_entry_arrayidx61;
	end
end
assign main_entry_arrayidx62 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx62_reg <= main_entry_arrayidx62;
	end
end
assign main_entry_arrayidx63 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx63_reg <= main_entry_arrayidx63;
	end
end
assign main_entry_arrayidx64 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx64_reg <= main_entry_arrayidx64;
	end
end
assign main_entry_arrayidx65 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx65_reg <= main_entry_arrayidx65;
	end
end
assign main_entry_arrayidx66 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx66_reg <= main_entry_arrayidx66;
	end
end
assign main_entry_arrayidx67 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx67_reg <= main_entry_arrayidx67;
	end
end
assign main_entry_arrayidx68 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx68_reg <= main_entry_arrayidx68;
	end
end
assign main_entry_arrayidx69 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx69_reg <= main_entry_arrayidx69;
	end
end
assign main_entry_arrayidx70 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx70_reg <= main_entry_arrayidx70;
	end
end
assign main_entry_arrayidx71 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx71_reg <= main_entry_arrayidx71;
	end
end
assign main_entry_arrayidx72 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx72_reg <= main_entry_arrayidx72;
	end
end
assign main_entry_arrayidx73 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_reg <= main_entry_arrayidx73;
	end
end
assign main_entry_arrayidx74 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx74_reg <= main_entry_arrayidx74;
	end
end
assign main_entry_arrayidx75 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx75_reg <= main_entry_arrayidx75;
	end
end
assign main_entry_arrayidx76 = (1'd0 + (4 * 32'd36));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx76_reg <= main_entry_arrayidx76;
	end
end
assign main_entry_arrayidx77 = (1'd0 + (4 * 32'd36));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx77_reg <= main_entry_arrayidx77;
	end
end
assign main_entry_arrayidx78 = (1'd0 + (4 * 32'd37));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx78_reg <= main_entry_arrayidx78;
	end
end
assign main_entry_arrayidx79 = (1'd0 + (4 * 32'd37));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx79_reg <= main_entry_arrayidx79;
	end
end
assign main_entry_arrayidx80 = (1'd0 + (4 * 32'd38));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx80_reg <= main_entry_arrayidx80;
	end
end
assign main_entry_arrayidx81 = (1'd0 + (4 * 32'd38));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx81_reg <= main_entry_arrayidx81;
	end
end
assign main_entry_arrayidx82 = (1'd0 + (4 * 32'd39));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx82_reg <= main_entry_arrayidx82;
	end
end
assign main_entry_arrayidx83 = (1'd0 + (4 * 32'd39));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx83_reg <= main_entry_arrayidx83;
	end
end
assign main_entry_arrayidx84 = (1'd0 + (4 * 32'd40));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx84_reg <= main_entry_arrayidx84;
	end
end
assign main_entry_arrayidx85 = (1'd0 + (4 * 32'd40));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx85_reg <= main_entry_arrayidx85;
	end
end
assign main_entry_arrayidx86 = (1'd0 + (4 * 32'd41));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx86_reg <= main_entry_arrayidx86;
	end
end
assign main_entry_arrayidx87 = (1'd0 + (4 * 32'd41));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx87_reg <= main_entry_arrayidx87;
	end
end
assign main_entry_arrayidx88 = (1'd0 + (4 * 32'd42));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx88_reg <= main_entry_arrayidx88;
	end
end
assign main_entry_arrayidx89 = (1'd0 + (4 * 32'd42));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx89_reg <= main_entry_arrayidx89;
	end
end
assign main_entry_arrayidx90 = (1'd0 + (4 * 32'd43));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx90_reg <= main_entry_arrayidx90;
	end
end
assign main_entry_arrayidx91 = (1'd0 + (4 * 32'd43));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx91_reg <= main_entry_arrayidx91;
	end
end
assign main_entry_arrayidx92 = (1'd0 + (4 * 32'd44));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx92_reg <= main_entry_arrayidx92;
	end
end
assign main_entry_arrayidx93 = (1'd0 + (4 * 32'd44));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx93_reg <= main_entry_arrayidx93;
	end
end
assign main_entry_arrayidx94 = (1'd0 + (4 * 32'd45));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx94_reg <= main_entry_arrayidx94;
	end
end
assign main_entry_arrayidx95 = (1'd0 + (4 * 32'd45));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx95_reg <= main_entry_arrayidx95;
	end
end
assign main_entry_arrayidx96 = (1'd0 + (4 * 32'd46));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx96_reg <= main_entry_arrayidx96;
	end
end
assign main_entry_arrayidx97 = (1'd0 + (4 * 32'd46));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx97_reg <= main_entry_arrayidx97;
	end
end
assign main_entry_arrayidx98 = (1'd0 + (4 * 32'd47));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx98_reg <= main_entry_arrayidx98;
	end
end
assign main_entry_arrayidx99 = (1'd0 + (4 * 32'd47));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx99_reg <= main_entry_arrayidx99;
	end
end
assign main_entry_arrayidx100 = (1'd0 + (4 * 32'd48));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx100_reg <= main_entry_arrayidx100;
	end
end
assign main_entry_arrayidx101 = (1'd0 + (4 * 32'd48));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx101_reg <= main_entry_arrayidx101;
	end
end
assign main_entry_arrayidx102 = (1'd0 + (4 * 32'd49));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx102_reg <= main_entry_arrayidx102;
	end
end
assign main_entry_arrayidx103 = (1'd0 + (4 * 32'd49));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx103_reg <= main_entry_arrayidx103;
	end
end
assign main_entry_arrayidx104 = (1'd0 + (4 * 32'd50));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx104_reg <= main_entry_arrayidx104;
	end
end
assign main_entry_arrayidx105 = (1'd0 + (4 * 32'd50));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx105_reg <= main_entry_arrayidx105;
	end
end
assign main_entry_arrayidx106 = (1'd0 + (4 * 32'd51));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx106_reg <= main_entry_arrayidx106;
	end
end
assign main_entry_arrayidx107 = (1'd0 + (4 * 32'd51));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx107_reg <= main_entry_arrayidx107;
	end
end
assign main_entry_arrayidx108 = (1'd0 + (4 * 32'd52));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx108_reg <= main_entry_arrayidx108;
	end
end
assign main_entry_arrayidx109 = (1'd0 + (4 * 32'd52));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx109_reg <= main_entry_arrayidx109;
	end
end
assign main_entry_arrayidx110 = (1'd0 + (4 * 32'd53));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx110_reg <= main_entry_arrayidx110;
	end
end
assign main_entry_arrayidx111 = (1'd0 + (4 * 32'd53));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx111_reg <= main_entry_arrayidx111;
	end
end
assign main_entry_arrayidx112 = (1'd0 + (4 * 32'd54));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx112_reg <= main_entry_arrayidx112;
	end
end
assign main_entry_arrayidx113 = (1'd0 + (4 * 32'd54));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx113_reg <= main_entry_arrayidx113;
	end
end
assign main_entry_arrayidx114 = (1'd0 + (4 * 32'd55));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx114_reg <= main_entry_arrayidx114;
	end
end
assign main_entry_arrayidx115 = (1'd0 + (4 * 32'd55));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx115_reg <= main_entry_arrayidx115;
	end
end
assign main_entry_arrayidx116 = (1'd0 + (4 * 32'd56));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx116_reg <= main_entry_arrayidx116;
	end
end
assign main_entry_arrayidx117 = (1'd0 + (4 * 32'd56));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx117_reg <= main_entry_arrayidx117;
	end
end
assign main_entry_arrayidx118 = (1'd0 + (4 * 32'd57));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx118_reg <= main_entry_arrayidx118;
	end
end
assign main_entry_arrayidx119 = (1'd0 + (4 * 32'd57));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx119_reg <= main_entry_arrayidx119;
	end
end
assign main_entry_arrayidx120 = (1'd0 + (4 * 32'd58));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx120_reg <= main_entry_arrayidx120;
	end
end
assign main_entry_arrayidx121 = (1'd0 + (4 * 32'd58));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx121_reg <= main_entry_arrayidx121;
	end
end
assign main_entry_arrayidx122 = (1'd0 + (4 * 32'd59));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx122_reg <= main_entry_arrayidx122;
	end
end
assign main_entry_arrayidx123 = (1'd0 + (4 * 32'd59));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx123_reg <= main_entry_arrayidx123;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_state_0 = main_NodeBlock9_backedge_state_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_i_0 = main_NodeBlock9_backedge_i_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_j_0 = main_NodeBlock9_backedge_j_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_a_0 = main_NodeBlock9_backedge_a_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_b_0 = main_NodeBlock9_backedge_b_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_X_0 = main_NodeBlock9_backedge_pos_a_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_Y_0 = main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_X_0 = main_NodeBlock9_backedge_pos_b_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_Y_0 = main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_mesh_0 = main_NodeBlock9_backedge_sum_mesh_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_1hop_0 = main_NodeBlock9_backedge_sum_1hop_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0 = 32'd212681713;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_seed_0 = main_NodeBlock9_backedge_seed_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
end
always @(*) begin
		main_NodeBlock9_Pivot10 = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock9_Pivot10_op1_temp}));
end
always @(*) begin
		main_NodeBlock7_Pivot8 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock7_Pivot8_op1_temp}));
end
always @(*) begin
		main_NodeBlock5_Pivot6 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock5_Pivot6_op1_temp}));
end
always @(*) begin
		main_LeafBlock3_SwitchLeaf4 = (main_NodeBlock9_state_0_reg == 32'd5);
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end_1_reg};
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end274_578};
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd5;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then281_inc282;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then327_inc332_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd60;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_i_0_be = main_if_end347_inc373_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_end274_inc253_1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_else333_inc315;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_for_end140_8_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_if_end_9_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_a_0_be = main_if_end347_37_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_if_end_10_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_b_0_be = main_if_end347_38_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end_11;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end274_pos_a_X_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end_12;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end274_pos_a_Y_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end_13;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end314_xi_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = -32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end_14;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end314_xj_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_if_end347_newCurOp_add364_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_if_end347_newCurOp_add372;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_for_end140_add146_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end252_seed_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end283_add286_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end283_add286_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end140_86) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb151_87) & (fsm_stall == 1'd0)) & (main_sw_bb151_cmp152 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_90) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb162_91) & (fsm_stall == 1'd0)) & (main_sw_bb162_cmp163 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end274_318) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then281_320) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then327_368) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else333_369) & (fsm_stall == 1'd0)) & (main_if_else333_cmp334 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb344_371) & (fsm_stall == 1'd0)) & (main_sw_bb344_cmp345 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end347_408) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
end
always @(*) begin
		main_NodeBlock1_Pivot2 = ($signed(main_NodeBlock9_state_0_reg) < $signed({29'd0,main_NodeBlock1_Pivot2_op1_temp}));
end
always @(*) begin
		main_NodeBlock_Pivot = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock_Pivot_op1_temp}));
end
always @(*) begin
		main_LeafBlock_SwitchLeaf = (main_NodeBlock9_state_0_reg == 32'd0);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_41) & (fsm_stall == 1'd0))) begin
		main_for_cond125_preheader_i_1589 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_cond125_preheader_47) & (fsm_stall == 1'd0)) & (main_for_cond125_preheader_exitcond5_reg == 1'd0))) */ begin
		main_for_cond125_preheader_i_1589 = main_for_cond125_preheader_6_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_41) & (fsm_stall == 1'd0))) begin
		main_for_cond125_preheader_i_1589_reg <= main_for_cond125_preheader_i_1589;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_cond125_preheader_47) & (fsm_stall == 1'd0)) & (main_for_cond125_preheader_exitcond5_reg == 1'd0))) begin
		main_for_cond125_preheader_i_1589_reg <= main_for_cond125_preheader_i_1589;
	end
end
always @(*) begin
		main_for_cond125_preheader_bit_select9 = main_for_cond125_preheader_i_1589_reg[28:0];
end
always @(*) begin
		main_for_cond125_preheader_sr_negate = (32'd0 - main_for_cond125_preheader_i_1589_reg);
end
always @(*) begin
		main_for_cond125_preheader_bit_concat10 = {main_for_cond125_preheader_bit_select9[28:0], main_for_cond125_preheader_bit_concat10_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_for_cond125_preheader_sr_add = (main_for_cond125_preheader_sr_negate + main_for_cond125_preheader_bit_concat10);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_42)) begin
		main_for_cond125_preheader_sr_add_reg <= main_for_cond125_preheader_sr_add;
	end
end
always @(*) begin
		main_for_cond125_preheader_arrayidx129 = (1'd0 + (4 * main_for_cond125_preheader_sr_add_reg));
end
always @(*) begin
		main_for_cond125_preheader_0 = (main_for_cond125_preheader_sr_add_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_for_cond125_preheader_0_reg <= main_for_cond125_preheader_0;
	end
end
always @(*) begin
		main_for_cond125_preheader_arrayidx129_1 = (1'd0 + (4 * main_for_cond125_preheader_0_reg));
end
always @(*) begin
		main_for_cond125_preheader_1 = (main_for_cond125_preheader_sr_add_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_for_cond125_preheader_1_reg <= main_for_cond125_preheader_1;
	end
end
always @(*) begin
		main_for_cond125_preheader_arrayidx129_2 = (1'd0 + (4 * main_for_cond125_preheader_1_reg));
end
always @(*) begin
		main_for_cond125_preheader_2 = (main_for_cond125_preheader_sr_add_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_for_cond125_preheader_2_reg <= main_for_cond125_preheader_2;
	end
end
always @(*) begin
		main_for_cond125_preheader_arrayidx129_3 = (1'd0 + (4 * main_for_cond125_preheader_2_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_for_cond125_preheader_arrayidx129_3_reg <= main_for_cond125_preheader_arrayidx129_3;
	end
end
always @(*) begin
		main_for_cond125_preheader_3 = (main_for_cond125_preheader_sr_add_reg + 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_for_cond125_preheader_3_reg <= main_for_cond125_preheader_3;
	end
end
always @(*) begin
		main_for_cond125_preheader_arrayidx129_4 = (1'd0 + (4 * main_for_cond125_preheader_3_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_for_cond125_preheader_arrayidx129_4_reg <= main_for_cond125_preheader_arrayidx129_4;
	end
end
always @(*) begin
		main_for_cond125_preheader_4 = (main_for_cond125_preheader_sr_add_reg + 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_for_cond125_preheader_4_reg <= main_for_cond125_preheader_4;
	end
end
always @(*) begin
		main_for_cond125_preheader_arrayidx129_5 = (1'd0 + (4 * main_for_cond125_preheader_4_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_for_cond125_preheader_arrayidx129_5_reg <= main_for_cond125_preheader_arrayidx129_5;
	end
end
always @(*) begin
		main_for_cond125_preheader_5 = (main_for_cond125_preheader_sr_add_reg + 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_for_cond125_preheader_5_reg <= main_for_cond125_preheader_5;
	end
end
always @(*) begin
		main_for_cond125_preheader_arrayidx129_6 = (1'd0 + (4 * main_for_cond125_preheader_5_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_for_cond125_preheader_arrayidx129_6_reg <= main_for_cond125_preheader_arrayidx129_6;
	end
end
always @(*) begin
		main_for_cond125_preheader_6 = (main_for_cond125_preheader_i_1589_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_42)) begin
		main_for_cond125_preheader_6_reg <= main_for_cond125_preheader_6;
	end
end
always @(*) begin
		main_for_cond125_preheader_exitcond5 = (main_for_cond125_preheader_6 == 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_42)) begin
		main_for_cond125_preheader_exitcond5_reg <= main_for_cond125_preheader_exitcond5;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_body135_preheader_48) & (fsm_stall == 1'd0))) begin
		main_for_body135_i_2590 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body135_50) & (fsm_stall == 1'd0)) & (main_for_body135_exitcond6_reg == 1'd0))) */ begin
		main_for_body135_i_2590 = main_for_body135_7_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_body135_preheader_48) & (fsm_stall == 1'd0))) begin
		main_for_body135_i_2590_reg <= main_for_body135_i_2590;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body135_50) & (fsm_stall == 1'd0)) & (main_for_body135_exitcond6_reg == 1'd0))) begin
		main_for_body135_i_2590_reg <= main_for_body135_i_2590;
	end
end
always @(*) begin
		main_for_body135_arrayidx136 = (1'd0 + (4 * main_for_body135_i_2590_reg));
end
always @(*) begin
		main_for_body135_arrayidx137 = (1'd0 + (4 * main_for_body135_i_2590_reg));
end
always @(*) begin
		main_for_body135_7 = (main_for_body135_i_2590_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_for_body135_7_reg <= main_for_body135_7;
	end
end
always @(*) begin
		main_for_body135_exitcond6 = (main_for_body135_7 == 32'd47);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_for_body135_exitcond6_reg <= main_for_body135_exitcond6;
	end
end
always @(*) begin
		main_for_end140_8 = main_entry_vla571_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_52)) begin
		main_for_end140_8_reg <= main_for_end140_8;
	end
end
always @(*) begin
		main_for_end140_sub_i = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_for_end140_xor2_i = (main_for_end140_sub_i ^ 32'd1);
end
always @(*) begin
	main_for_end140_rem = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_83)) begin
		main_for_end140_rem_reg <= main_for_end140_rem;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end165_124)) begin
		main_for_end140_rem_reg <= main_if_end165_rem167;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then172_158)) begin
		main_for_end140_rem_reg <= main_if_then172_rem174;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then172_159)) begin
		main_for_end140_rem_reg <= main_if_then172_rem179;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_193)) begin
		main_for_end140_rem_reg <= main_if_then185_rem187;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_194)) begin
		main_for_end140_rem_reg <= main_if_then185_rem192;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then198_260)) begin
		main_for_end140_rem_reg <= main_if_then198_rem205;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else209_293)) begin
		main_for_end140_rem_reg <= main_if_else209_rem216;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end283_353)) begin
		main_for_end140_rem_reg <= main_if_end283_rem285;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_407)) begin
		main_for_end140_rem_reg <= main_if_end347_rem365;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_408)) begin
		main_for_end140_rem_reg <= main_if_end347_rem368;
	end
end
always @(*) begin
		main_for_end140_bit_select7 = main_for_end140_rem_width_extended[28:0];
end
always @(*) begin
		main_for_end140_arrayidx142 = (1'd0 + (4 * main_for_end140_8));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_52)) begin
		main_for_end140_arrayidx142_reg <= main_for_end140_arrayidx142;
	end
end
always @(*) begin
		main_for_end140_xor2_i16 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_51)) begin
		main_for_end140_xor2_i16_reg <= main_for_end140_xor2_i16;
	end
end
always @(*) begin
	main_for_end140_rem144 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_84)) begin
		main_for_end140_rem144_reg <= main_for_end140_rem144;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else196_227)) begin
		main_for_end140_rem144_reg <= main_if_else196_rem200;
	end
end
always @(*) begin
		main_for_end140_arrayidx145 = (1'd0 + (4 * main_for_end140_8));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_52)) begin
		main_for_end140_arrayidx145_reg <= main_for_end140_arrayidx145;
	end
end
always @(*) begin
		main_for_end140_add146 = (main_NodeBlock9_seed_0_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_51)) begin
		main_for_end140_add146_reg <= main_for_end140_add146;
	end
end
always @(*) begin
		main_for_end140_sr_negate7 = (32'd0 - $signed({{1{main_for_end140_rem[3]}},main_for_end140_rem}));
end
always @(*) begin
		main_for_end140_bit_concat8 = {main_for_end140_bit_select7[28:0], main_for_end140_bit_concat8_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_for_end140_sr_add10 = ($signed({{27{main_for_end140_sr_negate7[4]}},main_for_end140_sr_negate7}) + main_for_end140_bit_concat8);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_83)) begin
		main_for_end140_sr_add10_reg <= main_for_end140_sr_add10;
	end
end
always @(*) begin
		main_for_end140_arrayidx149_sum = (main_for_end140_sr_add10_reg + $signed({{28{main_for_end140_rem144[3]}},main_for_end140_rem144}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_84)) begin
		main_for_end140_arrayidx149_sum_reg <= main_for_end140_arrayidx149_sum;
	end
end
always @(*) begin
		main_for_end140_arrayidx150 = (1'd0 + (4 * main_for_end140_arrayidx149_sum_reg));
end
always @(*) begin
		main_sw_bb151_cmp152 = (main_NodeBlock9_i_0_reg == 32'd60);
end
always @(*) begin
		main_if_end_arrayidx153 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_9 = main_entry_vla571_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_89)) begin
		main_if_end_9_reg <= main_if_end_9;
	end
end
always @(*) begin
		main_if_end_arrayidx154 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_10 = main_entry_vla1572_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_89)) begin
		main_if_end_10_reg <= main_if_end_10;
	end
end
always @(*) begin
		main_if_end_arrayidx155 = (1'd0 + (4 * main_if_end_9));
end
always @(*) begin
		main_if_end_11 = main_entry_vla2573_out_a;
end
always @(*) begin
		main_if_end_arrayidx156 = (1'd0 + (4 * main_if_end_9));
end
always @(*) begin
		main_if_end_12 = main_entry_vla3574_out_a;
end
always @(*) begin
		main_if_end_arrayidx157 = (1'd0 + (4 * main_if_end_10));
end
always @(*) begin
		main_if_end_13 = main_entry_vla2573_out_b;
end
always @(*) begin
		main_if_end_arrayidx158 = (1'd0 + (4 * main_if_end_10));
end
always @(*) begin
		main_if_end_14 = main_entry_vla3574_out_b;
end
always @(*) begin
		main_if_end_cmp159 = (main_NodeBlock9_i_0_reg == 32'd0);
end
always @(*) begin
		main_if_end_1 = (main_if_end_cmp159 ? 32'd3 : 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_88)) begin
		main_if_end_1_reg <= main_if_end_1;
	end
end
always @(*) begin
		main_sw_bb162_cmp163 = (main_NodeBlock9_pos_a_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end165_sub_i14 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end165_xor2_i15 = (main_if_end165_sub_i14 ^ 32'd1);
end
always @(*) begin
	main_if_end165_rem167 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end165_rem167_reg = main_for_end140_rem_reg;
end
always @(*) begin
		main_if_end165_add168 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end165_92)) begin
		main_if_end165_add168_reg <= main_if_end165_add168;
	end
end
always @(*) begin
		main_if_end165_cmp169 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end165_92)) begin
		main_if_end165_cmp169_reg <= main_if_end165_cmp169;
	end
end
always @(*) begin
		main_if_end165_cmp171 = ($signed(main_if_end165_rem167) == 32'd0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end165_124)) begin
		main_if_end165_cmp171_reg <= main_if_end165_cmp171;
	end
end
always @(*) begin
		main_if_then172_xor2_i13 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then172_rem174 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then172_arrayidx175 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then172_15 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then172_128)) begin
		main_if_then172_15_reg <= main_if_then172_15;
	end
end
always @(*) begin
		main_if_then172_add176 = (main_if_then172_15_reg + $signed({{28{main_if_then172_rem174[3]}},main_if_then172_rem174}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then172_158)) begin
		main_if_then172_add176_reg <= main_if_then172_add176;
	end
end
always @(*) begin
		main_if_then172_xor2_i12 = (main_if_end165_add168_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		main_if_then172_xor2_i12_reg <= main_if_then172_xor2_i12;
	end
end
always @(*) begin
	main_if_then172_rem179 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then172_arrayidx180 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then172_16 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then172_128)) begin
		main_if_then172_16_reg <= main_if_then172_16;
	end
end
always @(*) begin
		main_if_then172_add181 = (main_if_then172_16_reg + $signed({{28{main_if_then172_rem179[3]}},main_if_then172_rem179}));
end
always @(*) begin
		main_if_then172_add182 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		main_if_then172_add182_reg <= main_if_then172_add182;
	end
end
always @(*) begin
		main_if_else183_cmp184 = ($signed(main_if_end165_rem167_reg) == 32'd1);
end
always @(*) begin
		main_if_then185_xor2_i10 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then185_rem187 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then185_arrayidx188 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then185_17 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then185_163)) begin
		main_if_then185_17_reg <= main_if_then185_17;
	end
end
always @(*) begin
		main_if_then185_add189 = (main_if_then185_17_reg + $signed({{28{main_if_then185_rem187[3]}},main_if_then185_rem187}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then185_193)) begin
		main_if_then185_add189_reg <= main_if_then185_add189;
	end
end
always @(*) begin
		main_if_then185_xor2_i9 = (main_if_end165_add168_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		main_if_then185_xor2_i9_reg <= main_if_then185_xor2_i9;
	end
end
always @(*) begin
	main_if_then185_rem192 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then185_arrayidx193 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then185_18 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then185_163)) begin
		main_if_then185_18_reg <= main_if_then185_18;
	end
end
always @(*) begin
		main_if_then185_add194 = (main_if_then185_18_reg + $signed({{28{main_if_then185_rem192[3]}},main_if_then185_rem192}));
end
always @(*) begin
		main_if_then185_add195 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		main_if_then185_add195_reg <= main_if_then185_add195;
	end
end
always @(*) begin
		main_if_else196_cmp197 = ($signed(main_if_end165_rem167_reg) == 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else196_195)) begin
		main_if_else196_cmp197_reg <= main_if_else196_cmp197;
	end
end
always @(*) begin
		main_if_else196_xor2_i7 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_else196_rem200 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_else196_rem200_reg = main_for_end140_rem144_reg;
end
always @(*) begin
		main_if_then198_arrayidx201 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then198_19 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then198_add202 = (main_if_then198_19 + $signed({{28{main_if_else196_rem200_reg[3]}},main_if_else196_rem200_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then198_230)) begin
		main_if_then198_add202_reg <= main_if_then198_add202;
	end
end
always @(*) begin
		main_if_then198_xor2_i6 = (main_if_end165_add168_reg ^ 32'd1);
end
always @(*) begin
	main_if_then198_rem205 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then198_arrayidx206 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then198_20 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then198_230)) begin
		main_if_then198_20_reg <= main_if_then198_20;
	end
end
always @(*) begin
		main_if_then198_add207 = (main_if_then198_20_reg + $signed({{28{main_if_then198_rem205[3]}},main_if_then198_rem205}));
end
always @(*) begin
		main_if_then198_add208 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		main_if_then198_add208_reg <= main_if_then198_add208;
	end
end
always @(*) begin
		main_if_else209_arrayidx212 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else209_21 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else209_add213 = (main_if_else209_21 + $signed({{28{main_if_else196_rem200_reg[3]}},main_if_else196_rem200_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else209_263)) begin
		main_if_else209_add213_reg <= main_if_else209_add213;
	end
end
always @(*) begin
		main_if_else209_xor2_i4 = (main_if_end165_add168_reg ^ 32'd1);
end
always @(*) begin
	main_if_else209_rem216 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_else209_arrayidx217 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else209_22 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else209_263)) begin
		main_if_else209_22_reg <= main_if_else209_22;
	end
end
always @(*) begin
		main_if_else209_add218 = (main_if_else209_22_reg + $signed({{28{main_if_else209_rem216[3]}},main_if_else209_rem216}));
end
always @(*) begin
		main_if_else209_add219 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		main_if_else209_add219_reg <= main_if_else209_add219;
	end
end
always @(*) begin
		main_if_then225_arrayidx226 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then225_23 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then225_add227 = (main_if_then225_23 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then225_arrayidx228 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then225_24 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then225_add229 = (main_if_then225_24 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_NodeBlock16_Pivot17 = ($signed($signed({{28{main_if_end165_rem167_reg[3]}},main_if_end165_rem167_reg})) < $signed({28'd0,main_NodeBlock16_Pivot17_op1_temp}));
end
always @(*) begin
		main_LeafBlock14_SwitchLeaf15 = ($signed(main_if_end165_rem167_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock12_SwitchLeaf13 = ($signed(main_if_end165_rem167_reg) == 32'd1);
end
always @(*) begin
		main_if_then232_arrayidx233 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then232_25 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then232_add234 = (main_if_then232_25 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then232_arrayidx235 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then232_26 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then232_add236 = (main_if_then232_26 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_then239_arrayidx240 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then239_27 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then239_add241 = (main_if_then239_27 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then239_arrayidx242 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then239_28 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then239_add243 = (main_if_then239_28 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_else244_arrayidx245 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else244_29 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else244_add246 = (main_if_else244_29 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_else244_arrayidx247 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else244_30 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_else244_add248 = (main_if_else244_30 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then172_159) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0 = main_if_then172_add176_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then185_194) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0 = main_if_then185_add189_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then198_260) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0 = main_if_then198_add202_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else209_293) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0 = main_if_else209_add213_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_297) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0 = main_if_then225_add227;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then232_303) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0 = main_if_then232_add234;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then239_306) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0 = main_if_then239_add241;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else244_309) & (fsm_stall == 1'd0))) */ begin
		main_if_end252_xi_0 = main_if_else244_add246;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then172_159) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then185_194) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then198_260) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else209_293) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_297) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then232_303) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then239_306) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else244_309) & (fsm_stall == 1'd0))) begin
		main_if_end252_xi_0_reg <= main_if_end252_xi_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then172_159) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0 = main_if_then172_add181;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then185_194) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0 = main_if_then185_add194;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then198_260) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0 = main_if_then198_add207;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else209_293) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0 = main_if_else209_add218;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_297) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0 = main_if_then225_add229;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then232_303) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0 = main_if_then232_add236;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then239_306) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0 = main_if_then239_add243;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else244_309) & (fsm_stall == 1'd0))) */ begin
		main_if_end252_xj_0 = main_if_else244_add248;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then172_159) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then185_194) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then198_260) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else209_293) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_297) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then232_303) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then239_306) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else244_309) & (fsm_stall == 1'd0))) begin
		main_if_end252_xj_0_reg <= main_if_end252_xj_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then172_159) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1 = main_if_then172_add182_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then185_194) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1 = main_if_then185_add195_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then198_260) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1 = main_if_then198_add208_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else209_293) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1 = main_if_else209_add219_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_297) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1 = main_if_end165_add168_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then232_303) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1 = main_if_end165_add168_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then239_306) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1 = main_if_end165_add168_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else244_309) & (fsm_stall == 1'd0))) */ begin
		main_if_end252_seed_1 = main_if_end165_add168_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then172_159) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then185_194) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then198_260) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else209_293) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_297) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then232_303) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then239_306) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else244_309) & (fsm_stall == 1'd0))) begin
		main_if_end252_seed_1_reg <= main_if_end252_seed_1;
	end
end
always @(*) begin
		main_if_end252_bit_select5 = main_if_end252_xi_0_reg[28:0];
end
always @(*) begin
		main_if_end252_inc253 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end252_310)) begin
		main_if_end252_inc253_reg <= main_if_end252_inc253;
	end
end
always @(*) begin
		main_if_end252_sr_negate11 = (32'd0 - main_if_end252_xi_0_reg);
end
always @(*) begin
		main_if_end252_bit_concat6 = {main_if_end252_bit_select5[28:0], main_if_end252_bit_concat6_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_if_end252_sr_add13 = (main_if_end252_sr_negate11 + main_if_end252_bit_concat6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end252_310)) begin
		main_if_end252_sr_add13_reg <= main_if_end252_sr_add13;
	end
end
always @(*) begin
		main_if_end252_arrayidx254_sum = (main_if_end252_sr_add13_reg + main_if_end252_xj_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end252_311)) begin
		main_if_end252_arrayidx254_sum_reg <= main_if_end252_arrayidx254_sum;
	end
end
always @(*) begin
		main_if_end252_arrayidx255 = (1'd0 + (4 * main_if_end252_arrayidx254_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end252_312)) begin
		main_if_end252_arrayidx255_reg <= main_if_end252_arrayidx255;
	end
end
always @(*) begin
		main_if_end252_31 = main_entry_vla4575_out_a;
end
always @(*) begin
		main_if_end252_cmp256 = (main_if_end252_31 == $signed(-32'd1));
end
always @(*) begin
		main_if_end252_32 = (main_if_end252_xi_0_reg < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end252_310)) begin
		main_if_end252_32_reg <= main_if_end252_32;
	end
end
always @(*) begin
		main_if_end252_or_cond = (main_if_end252_cmp256 & main_if_end252_32_reg);
end
always @(*) begin
		main_if_end252_33 = (main_if_end252_xj_0_reg < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end252_310)) begin
		main_if_end252_33_reg <= main_if_end252_33;
	end
end
always @(*) begin
		main_if_end252_or_cond577 = (main_if_end252_or_cond & main_if_end252_33_reg);
end
always @(*) begin
		main_if_then264_arrayidx267 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_then264_arrayidx268 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_else269_cmp270 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else269_cmp270_op1_temp}));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then264_315) & (fsm_stall == 1'd0))) begin
		main_if_end274_pos_a_X_1 = main_if_end252_xi_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else269_316) & (fsm_stall == 1'd0)) & (main_if_else269_cmp270 == 1'd0))) */ begin
		main_if_end274_pos_a_X_1 = -32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then264_315) & (fsm_stall == 1'd0))) begin
		main_if_end274_pos_a_X_1_reg <= main_if_end274_pos_a_X_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else269_316) & (fsm_stall == 1'd0)) & (main_if_else269_cmp270 == 1'd0))) begin
		main_if_end274_pos_a_X_1_reg <= main_if_end274_pos_a_X_1;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then264_315) & (fsm_stall == 1'd0))) begin
		main_if_end274_pos_a_Y_1 = main_if_end252_xj_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else269_316) & (fsm_stall == 1'd0)) & (main_if_else269_cmp270 == 1'd0))) */ begin
		main_if_end274_pos_a_Y_1 = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then264_315) & (fsm_stall == 1'd0))) begin
		main_if_end274_pos_a_Y_1_reg <= main_if_end274_pos_a_Y_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else269_316) & (fsm_stall == 1'd0)) & (main_if_else269_cmp270 == 1'd0))) begin
		main_if_end274_pos_a_Y_1_reg <= main_if_end274_pos_a_Y_1;
	end
end
always @(*) begin
		main_if_end274_cmp275 = (main_if_end274_pos_a_X_1_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end274_578 = (main_if_end274_cmp275 ? 32'd2 : 32'd3);
end
always @(*) begin
		main_if_end274_inc253_1 = (main_if_end274_cmp275 ? main_if_end252_inc253_reg : 32'd0);
end
always @(*) begin
		main_sw_bb279_cmp280 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_then281_inc282 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(*) begin
		main_if_end283_sub_i1 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end283_xor2_i2 = (main_if_end283_sub_i1 ^ 32'd1);
end
always @(*) begin
	main_if_end283_rem285 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end283_rem285_reg = main_for_end140_rem_reg;
end
always @(*) begin
		main_if_end283_add286 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end283_321)) begin
		main_if_end283_add286_reg <= main_if_end283_add286;
	end
end
always @(*) begin
		main_if_end283_Pivot26 = ($signed($signed({{28{main_if_end283_rem285[3]}},main_if_end283_rem285})) < $signed({29'd0,main_if_end283_Pivot26_op1_temp}));
end
always @(*) begin
		main_NodeBlock23_Pivot24 = ($signed($signed({{28{main_if_end283_rem285_reg[3]}},main_if_end283_rem285_reg})) < $signed({28'd0,main_NodeBlock23_Pivot24_op1_temp}));
end
always @(*) begin
		main_LeafBlock21_SwitchLeaf22 = ($signed(main_if_end283_rem285_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock19_SwitchLeaf20 = ($signed(main_if_end283_rem285_reg) == 32'd0);
end
always @(*) begin
		main_if_then288_arrayidx289 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then288_arrayidx291 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then295_arrayidx296 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then295_arrayidx298 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then302_arrayidx303 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then302_arrayidx305 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else307_arrayidx308 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else307_arrayidx310 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then288_357) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn_in = main_if_then288_arrayidx289;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then295_358) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn_in = main_if_then295_arrayidx296;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then302_359) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn_in = main_if_then302_arrayidx303;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else307_360) & (fsm_stall == 1'd0))) */ begin
		main_if_end314_pn_in = main_if_else307_arrayidx308;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then288_357) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn_in_reg <= main_if_end314_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then295_358) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn_in_reg <= main_if_end314_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then302_359) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn_in_reg <= main_if_end314_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else307_360) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn_in_reg <= main_if_end314_pn_in;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then288_357) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn576_in = main_if_then288_arrayidx291;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then295_358) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn576_in = main_if_then295_arrayidx298;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then302_359) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn576_in = main_if_then302_arrayidx305;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else307_360) & (fsm_stall == 1'd0))) */ begin
		main_if_end314_pn576_in = main_if_else307_arrayidx310;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then288_357) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn576_in_reg <= main_if_end314_pn576_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then295_358) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn576_in_reg <= main_if_end314_pn576_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then302_359) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn576_in_reg <= main_if_end314_pn576_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else307_360) & (fsm_stall == 1'd0))) begin
		main_if_end314_pn576_in_reg <= main_if_end314_pn576_in;
	end
end
always @(*) begin
		main_if_end314_pn576 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_end314_pn = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_end314_xj_1 = (main_if_end314_pn576 + main_NodeBlock9_pos_a_Y_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_363)) begin
		main_if_end314_xj_1_reg <= main_if_end314_xj_1;
	end
end
always @(*) begin
		main_if_end314_xi_1 = (main_if_end314_pn + main_NodeBlock9_pos_a_X_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_363)) begin
		main_if_end314_xi_1_reg <= main_if_end314_xi_1;
	end
end
always @(*) begin
		main_if_end314_bit_select3 = main_if_end314_xi_1[28:0];
end
always @(*) begin
		main_if_end314_sr_negate14 = (32'd0 - main_if_end314_xi_1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_363)) begin
		main_if_end314_sr_negate14_reg <= main_if_end314_sr_negate14;
	end
end
always @(*) begin
		main_if_end314_bit_concat4 = {main_if_end314_bit_select3[28:0], main_if_end314_bit_concat4_bit_select_operand_2[2:0]};
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_363)) begin
		main_if_end314_bit_concat4_reg <= main_if_end314_bit_concat4;
	end
end
always @(*) begin
		main_if_end314_sr_add16 = (main_if_end314_sr_negate14_reg + main_if_end314_bit_concat4_reg);
end
always @(*) begin
		main_if_end314_arrayidx316_sum = (main_if_end314_sr_add16 + main_if_end314_xj_1_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_364)) begin
		main_if_end314_arrayidx316_sum_reg <= main_if_end314_arrayidx316_sum;
	end
end
always @(*) begin
		main_if_end314_arrayidx317 = (1'd0 + (4 * main_if_end314_arrayidx316_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_365)) begin
		main_if_end314_arrayidx317_reg <= main_if_end314_arrayidx317;
	end
end
always @(*) begin
		main_if_end314_34 = main_entry_vla4575_out_b;
end
always @(*) begin
		main_if_end314_cmp318 = (main_if_end314_34 == $signed(-32'd1));
end
always @(*) begin
		main_if_end314_35 = (main_if_end314_xi_1 < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_363)) begin
		main_if_end314_35_reg <= main_if_end314_35;
	end
end
always @(*) begin
		main_if_end314_or_cond579 = (main_if_end314_cmp318 & main_if_end314_35_reg);
end
always @(*) begin
		main_if_end314_36 = (main_if_end314_xj_1 < 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end314_363)) begin
		main_if_end314_36_reg <= main_if_end314_36;
	end
end
always @(*) begin
		main_if_end314_or_cond580 = (main_if_end314_or_cond579 & main_if_end314_36_reg);
end
always @(*) begin
		main_if_then327_arrayidx330 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then327_arrayidx331 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then327_inc332 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_if_then327_inc332_reg <= main_if_then327_inc332;
	end
end
always @(*) begin
		main_if_else333_inc315 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(*) begin
		main_if_else333_cmp334 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else333_cmp334_op1_temp}));
end
always @(*) begin
		main_sw_bb344_cmp345 = (main_NodeBlock9_i_0_reg == 32'd60);
end
always @(*) begin
		main_if_end347_arrayidx348 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end347_37 = main_entry_vla571_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_373)) begin
		main_if_end347_37_reg <= main_if_end347_37;
	end
end
always @(*) begin
		main_if_end347_arrayidx349 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end347_38 = main_entry_vla1572_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_373)) begin
		main_if_end347_38_reg <= main_if_end347_38;
	end
end
always @(*) begin
		main_if_end347_arrayidx350 = (1'd0 + (4 * main_if_end347_37));
end
always @(*) begin
		main_if_end347_39 = main_entry_vla2573_out_a;
end
always @(*) begin
		main_if_end347_arrayidx351 = (1'd0 + (4 * main_if_end347_38));
end
always @(*) begin
		main_if_end347_40 = main_entry_vla2573_out_b;
end
always @(*) begin
		main_if_end347_sub = (main_if_end347_39 - main_if_end347_40);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_374)) begin
		main_if_end347_sub_reg <= main_if_end347_sub;
	end
end
always @(*) begin
		main_if_end347_bit_select2 = main_if_end347_sub[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_374)) begin
		main_if_end347_bit_select2_reg <= main_if_end347_bit_select2;
	end
end
always @(*) begin
		main_if_end347_mul = (32'd0 - main_if_end347_sub);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_374)) begin
		main_if_end347_mul_reg <= main_if_end347_mul;
	end
end
always @(*) begin
		main_if_end347_mul_sub = (main_if_end347_bit_select2_reg ? main_if_end347_mul_reg : main_if_end347_sub_reg);
end
always @(*) begin
		main_if_end347_arrayidx355 = (1'd0 + (4 * main_if_end347_37));
end
always @(*) begin
		main_if_end347_41 = main_entry_vla3574_out_a;
end
always @(*) begin
		main_if_end347_arrayidx356 = (1'd0 + (4 * main_if_end347_38));
end
always @(*) begin
		main_if_end347_42 = main_entry_vla3574_out_b;
end
always @(*) begin
		main_if_end347_sub357 = (main_if_end347_41 - main_if_end347_42);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_374)) begin
		main_if_end347_sub357_reg <= main_if_end347_sub357;
	end
end
always @(*) begin
		main_if_end347_bit_select1 = main_if_end347_sub357[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_374)) begin
		main_if_end347_bit_select1_reg <= main_if_end347_bit_select1;
	end
end
always @(*) begin
		main_if_end347_mul360 = (32'd0 - main_if_end347_sub357);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_374)) begin
		main_if_end347_mul360_reg <= main_if_end347_mul360;
	end
end
always @(*) begin
		main_if_end347_diff_pos_y_0 = (main_if_end347_bit_select1_reg ? main_if_end347_mul360_reg : main_if_end347_sub357_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_375)) begin
		main_if_end347_diff_pos_y_0_reg <= main_if_end347_diff_pos_y_0;
	end
end
always @(*) begin
		main_if_end347_add362 = (main_NodeBlock9_sum_mesh_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_372)) begin
		main_if_end347_add362_reg <= main_if_end347_add362;
	end
end
always @(*) begin
		main_if_end347_newEarly_add364 = (main_if_end347_mul_sub + main_if_end347_diff_pos_y_0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_375)) begin
		main_if_end347_newEarly_add364_reg <= main_if_end347_newEarly_add364;
	end
end
always @(*) begin
		main_if_end347_newCurOp_add364 = (main_if_end347_add362_reg + main_if_end347_newEarly_add364_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_376)) begin
		main_if_end347_newCurOp_add364_reg <= main_if_end347_newCurOp_add364;
	end
end
always @(*) begin
	main_if_end347_div = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end347_rem365 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end347_div367 = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end347_rem368 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_end347_add369 = (main_NodeBlock9_sum_1hop_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_372)) begin
		main_if_end347_add369_reg <= main_if_end347_add369;
	end
end
always @(*) begin
		main_if_end347_newEarly_add370 = ($signed({{1{main_if_end347_div[30]}},main_if_end347_div}) + $signed({{28{main_if_end347_rem365[3]}},main_if_end347_rem365}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_407)) begin
		main_if_end347_newEarly_add370_reg <= main_if_end347_newEarly_add370;
	end
end
always @(*) begin
		main_if_end347_newEarly_sub371 = (main_if_end347_add369_reg + $signed({{1{main_if_end347_div367[30]}},main_if_end347_div367}));
end
always @(*) begin
		main_if_end347_newEarly_add372 = (main_if_end347_newEarly_add370_reg + $signed({{28{main_if_end347_rem368[3]}},main_if_end347_rem368}));
end
always @(*) begin
		main_if_end347_newCurOp_add372 = (main_if_end347_newEarly_sub371 + main_if_end347_newEarly_add372);
end
always @(*) begin
		main_if_end347_inc373 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_372)) begin
		main_if_end347_inc373_reg <= main_if_end347_inc373;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond377_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond377_preheader_i_3587 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_cond377_preheader_414) & (fsm_stall == 1'd0)) & (main_for_cond377_preheader_exitcond_reg == 1'd0))) */ begin
		main_for_cond377_preheader_i_3587 = main_for_cond377_preheader_56_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond377_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond377_preheader_i_3587_reg <= main_for_cond377_preheader_i_3587;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_cond377_preheader_414) & (fsm_stall == 1'd0)) & (main_for_cond377_preheader_exitcond_reg == 1'd0))) begin
		main_for_cond377_preheader_i_3587_reg <= main_for_cond377_preheader_i_3587;
	end
end
always @(*) begin
		main_for_cond377_preheader_bit_select = main_for_cond377_preheader_i_3587_reg_width_extended[28:0];
end
always @(*) begin
		main_for_cond377_preheader_sr_negate17 = (32'd0 - {1'd0,main_for_cond377_preheader_i_3587_reg});
end
always @(*) begin
		main_for_cond377_preheader_bit_concat = {main_for_cond377_preheader_bit_select[28:0], main_for_cond377_preheader_bit_concat_bit_select_operand_2[2:0]};
end
always @(*) begin
		main_for_cond377_preheader_sr_add19 = ($signed({{28{main_for_cond377_preheader_sr_negate17[3]}},main_for_cond377_preheader_sr_negate17}) + main_for_cond377_preheader_bit_concat);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_409)) begin
		main_for_cond377_preheader_sr_add19_reg <= main_for_cond377_preheader_sr_add19;
	end
end
always @(*) begin
		main_for_cond377_preheader_arrayidx381 = (1'd0 + (4 * main_for_cond377_preheader_sr_add19_reg));
end
always @(*) begin
		main_for_cond377_preheader_43 = (main_for_cond377_preheader_sr_add19_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_410)) begin
		main_for_cond377_preheader_43_reg <= main_for_cond377_preheader_43;
	end
end
always @(*) begin
		main_for_cond377_preheader_arrayidx381_1 = (1'd0 + (4 * main_for_cond377_preheader_43_reg));
end
always @(*) begin
		main_for_cond377_preheader_44 = (main_for_cond377_preheader_sr_add19_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_410)) begin
		main_for_cond377_preheader_44_reg <= main_for_cond377_preheader_44;
	end
end
always @(*) begin
		main_for_cond377_preheader_arrayidx381_2 = (1'd0 + (4 * main_for_cond377_preheader_44_reg));
end
always @(*) begin
		main_for_cond377_preheader_45 = (main_for_cond377_preheader_sr_add19_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_410)) begin
		main_for_cond377_preheader_45_reg <= main_for_cond377_preheader_45;
	end
end
always @(*) begin
		main_for_cond377_preheader_arrayidx381_3 = (1'd0 + (4 * main_for_cond377_preheader_45_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_411)) begin
		main_for_cond377_preheader_arrayidx381_3_reg <= main_for_cond377_preheader_arrayidx381_3;
	end
end
always @(*) begin
		main_for_cond377_preheader_46 = (main_for_cond377_preheader_sr_add19_reg + 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_410)) begin
		main_for_cond377_preheader_46_reg <= main_for_cond377_preheader_46;
	end
end
always @(*) begin
		main_for_cond377_preheader_arrayidx381_4 = (1'd0 + (4 * main_for_cond377_preheader_46_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_411)) begin
		main_for_cond377_preheader_arrayidx381_4_reg <= main_for_cond377_preheader_arrayidx381_4;
	end
end
always @(*) begin
		main_for_cond377_preheader_47 = (main_for_cond377_preheader_sr_add19_reg + 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_410)) begin
		main_for_cond377_preheader_47_reg <= main_for_cond377_preheader_47;
	end
end
always @(*) begin
		main_for_cond377_preheader_arrayidx381_5 = (1'd0 + (4 * main_for_cond377_preheader_47_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_411)) begin
		main_for_cond377_preheader_arrayidx381_5_reg <= main_for_cond377_preheader_arrayidx381_5;
	end
end
always @(*) begin
		main_for_cond377_preheader_48 = (main_for_cond377_preheader_sr_add19_reg + 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_410)) begin
		main_for_cond377_preheader_48_reg <= main_for_cond377_preheader_48;
	end
end
always @(*) begin
		main_for_cond377_preheader_arrayidx381_6 = (1'd0 + (4 * main_for_cond377_preheader_48_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_411)) begin
		main_for_cond377_preheader_arrayidx381_6_reg <= main_for_cond377_preheader_arrayidx381_6;
	end
end
always @(*) begin
		main_for_cond377_preheader_49 = main_entry_vla4575_out_a;
end
always @(*) begin
		main_for_cond377_preheader_50 = main_entry_vla4575_out_a;
end
always @(*) begin
		main_for_cond377_preheader_51 = main_entry_vla4575_out_b;
end
always @(*) begin
		main_for_cond377_preheader_52 = main_entry_vla4575_out_a;
end
always @(*) begin
		main_for_cond377_preheader_53 = main_entry_vla4575_out_b;
end
always @(*) begin
		main_for_cond377_preheader_54 = main_entry_vla4575_out_a;
end
always @(*) begin
		main_for_cond377_preheader_55 = main_entry_vla4575_out_b;
end
always @(*) begin
		main_for_cond377_preheader_56 = ({1'd0,main_for_cond377_preheader_i_3587_reg} + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_409)) begin
		main_for_cond377_preheader_56_reg <= main_for_cond377_preheader_56;
	end
end
always @(*) begin
		main_for_cond377_preheader_exitcond = (main_for_cond377_preheader_56 == 32'd7);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_409)) begin
		main_for_cond377_preheader_exitcond_reg <= main_for_cond377_preheader_exitcond;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then271_317) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then335_370) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_for_end389_415) & (fsm_stall == 1'd0))) */ begin
		main_cleanup_retval_0 = 32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then271_317) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then335_370) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end389_415) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
end
always @(*) begin
	main_entry_vla571_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla571_address_a = (main_entry_vla571_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx20_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx24_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx28_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx32_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx36_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx40_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx44_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx48_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx52_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx56_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx60_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx64_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx68_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx72_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx76_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx80_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx84_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx88_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx92_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx96_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx100_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx104_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx108_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx112_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx116_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla571_address_a = (main_entry_arrayidx120_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_51)) begin
		main_entry_vla571_address_a = (main_entry_vla571_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_88)) begin
		main_entry_vla571_address_a = (main_if_end_arrayidx153 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla571_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla571_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla571_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla571_in_a = 32'd45;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla571_in_a = 32'd43;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla571_in_a = 32'd40;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla571_in_a = 32'd37;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla571_in_a = 32'd39;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla571_in_a = 32'd35;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla571_in_a = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla571_in_a = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla571_in_a = 32'd31;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla571_in_a = 32'd33;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla571_in_a = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla571_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla571_in_a = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla571_in_a = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla571_in_a = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla571_in_a = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla571_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla571_in_a = 32'd36;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla571_in_a = 32'd32;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla571_in_a = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla571_in_a = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla571_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla571_in_a = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla571_in_a = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla571_in_a = 32'd30;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla571_in_a = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla571_in_a = 32'd34;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla571_in_a = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla571_in_a = 32'd46;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla571_in_a = 32'd41;
	end
end
always @(*) begin
	main_entry_vla571_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx22_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx26_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx30_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx34_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx38_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx42_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx46_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx50_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx54_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx58_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx62_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx66_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx70_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx74_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx78_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx82_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx86_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx90_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx94_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx98_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx102_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx106_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx110_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx114_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx118_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla571_address_b = (main_entry_arrayidx122_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_372)) begin
		main_entry_vla571_address_b = (main_if_end347_arrayidx348 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla571_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla571_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla571_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla571_in_b = 32'd43;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla571_in_b = 32'd40;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla571_in_b = 32'd37;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla571_in_b = 32'd42;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla571_in_b = 32'd35;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla571_in_b = 32'd28;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla571_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla571_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla571_in_b = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla571_in_b = 32'd33;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla571_in_b = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla571_in_b = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla571_in_b = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla571_in_b = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla571_in_b = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla571_in_b = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla571_in_b = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla571_in_b = 32'd32;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla571_in_b = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla571_in_b = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla571_in_b = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla571_in_b = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla571_in_b = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla571_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla571_in_b = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla571_in_b = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla571_in_b = 32'd27;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla571_in_b = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla571_in_b = 32'd44;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla571_in_b = 32'd38;
	end
end
always @(*) begin
	main_entry_vla1572_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1572_address_a = (main_entry_vla1572_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx21_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx25_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx29_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx33_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx37_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx41_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx45_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx49_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx53_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx57_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx61_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx65_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx69_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx73_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx77_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx81_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx85_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx89_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx93_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx97_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx101_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx105_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx109_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx113_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx117_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla1572_address_a = (main_entry_arrayidx121_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_88)) begin
		main_entry_vla1572_address_a = (main_if_end_arrayidx154 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1572_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla1572_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1572_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1572_in_a = 32'd43;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1572_in_a = 32'd40;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1572_in_a = 32'd36;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1572_in_a = 32'd33;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1572_in_a = 32'd35;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1572_in_a = 32'd28;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1572_in_a = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1572_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1572_in_a = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1572_in_a = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1572_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1572_in_a = 32'd29;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1572_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1572_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1572_in_a = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1572_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1572_in_a = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1572_in_a = 32'd32;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1572_in_a = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1572_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1572_in_a = 32'd30;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1572_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1572_in_a = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1572_in_a = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1572_in_a = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1572_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla1572_in_a = 32'd27;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla1572_in_a = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla1572_in_a = 32'd44;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla1572_in_a = 32'd38;
	end
end
always @(*) begin
	main_entry_vla1572_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx19_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx23_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx27_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx31_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx35_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx39_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx43_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx47_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx51_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx55_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx59_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx63_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx67_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx71_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx75_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx79_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx83_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx87_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx91_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx95_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx99_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx103_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx107_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx111_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx115_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx119_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla1572_address_b = (main_entry_arrayidx123_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_372)) begin
		main_entry_vla1572_address_b = (main_if_end347_arrayidx349 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1572_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla1572_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1572_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1572_in_b = 32'd46;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1572_in_b = 32'd37;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1572_in_b = 32'd42;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1572_in_b = 32'd39;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1572_in_b = 32'd31;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1572_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1572_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1572_in_b = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1572_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1572_in_b = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1572_in_b = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1572_in_b = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1572_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1572_in_b = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1572_in_b = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1572_in_b = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1572_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1572_in_b = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_29)) begin
		main_entry_vla1572_in_b = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_30)) begin
		main_entry_vla1572_in_b = 32'd34;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_31)) begin
		main_entry_vla1572_in_b = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_32)) begin
		main_entry_vla1572_in_b = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_33)) begin
		main_entry_vla1572_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_34)) begin
		main_entry_vla1572_in_b = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_35)) begin
		main_entry_vla1572_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_36)) begin
		main_entry_vla1572_in_b = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_37)) begin
		main_entry_vla1572_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_38)) begin
		main_entry_vla1572_in_b = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_39)) begin
		main_entry_vla1572_in_b = 32'd41;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_40)) begin
		main_entry_vla1572_in_b = 32'd34;
	end
end
always @(*) begin
	main_entry_vla2573_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_entry_vla2573_address_a = (main_for_body135_arrayidx136 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_83)) begin
		main_entry_vla2573_address_a = (main_for_end140_arrayidx142_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_89)) begin
		main_entry_vla2573_address_a = (main_if_end_arrayidx155 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_373)) begin
		main_entry_vla2573_address_a = (main_if_end347_arrayidx350 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2573_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_entry_vla2573_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_83)) begin
		main_entry_vla2573_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2573_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_entry_vla2573_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_83)) begin
		main_entry_vla2573_in_a = {{28{main_for_end140_rem[3]}},main_for_end140_rem};
	end
end
always @(*) begin
	main_entry_vla2573_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_89)) begin
		main_entry_vla2573_address_b = (main_if_end_arrayidx157 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla2573_address_b = (main_if_then264_arrayidx267 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla2573_address_b = (main_if_then327_arrayidx330 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_373)) begin
		main_entry_vla2573_address_b = (main_if_end347_arrayidx351 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2573_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla2573_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla2573_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2573_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla2573_in_b = main_if_end252_xi_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla2573_in_b = main_if_end314_xi_1_reg;
	end
end
always @(*) begin
	main_entry_vla3574_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_entry_vla3574_address_a = (main_for_body135_arrayidx137 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_84)) begin
		main_entry_vla3574_address_a = (main_for_end140_arrayidx145_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_89)) begin
		main_entry_vla3574_address_a = (main_if_end_arrayidx156 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_373)) begin
		main_entry_vla3574_address_a = (main_if_end347_arrayidx355 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3574_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_entry_vla3574_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_84)) begin
		main_entry_vla3574_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3574_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body135_49)) begin
		main_entry_vla3574_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_84)) begin
		main_entry_vla3574_in_a = {{28{main_for_end140_rem144[3]}},main_for_end140_rem144};
	end
end
always @(*) begin
	main_entry_vla3574_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_89)) begin
		main_entry_vla3574_address_b = (main_if_end_arrayidx158 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla3574_address_b = (main_if_then264_arrayidx268 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla3574_address_b = (main_if_then327_arrayidx331 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end347_373)) begin
		main_entry_vla3574_address_b = (main_if_end347_arrayidx356 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3574_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla3574_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla3574_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3574_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla3574_in_b = main_if_end252_xj_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla3574_in_b = main_if_end314_xj_1_reg;
	end
end
always @(*) begin
	main_entry_vla4575_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_entry_vla4575_address_a = (main_for_cond125_preheader_arrayidx129 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_entry_vla4575_address_a = (main_for_cond125_preheader_arrayidx129_1 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_45)) begin
		main_entry_vla4575_address_a = (main_for_cond125_preheader_arrayidx129_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_46)) begin
		main_entry_vla4575_address_a = (main_for_cond125_preheader_arrayidx129_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end252_312)) begin
		main_entry_vla4575_address_a = (main_if_end252_arrayidx255 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla4575_address_a = (main_if_end252_arrayidx255_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_410)) begin
		main_entry_vla4575_address_a = (main_for_cond377_preheader_arrayidx381 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_411)) begin
		main_entry_vla4575_address_a = (main_for_cond377_preheader_arrayidx381_1 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_412)) begin
		main_entry_vla4575_address_a = (main_for_cond377_preheader_arrayidx381_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_413)) begin
		main_entry_vla4575_address_a = (main_for_cond377_preheader_arrayidx381_5_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4575_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_entry_vla4575_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_entry_vla4575_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_45)) begin
		main_entry_vla4575_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_46)) begin
		main_entry_vla4575_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla4575_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4575_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_43)) begin
		main_entry_vla4575_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_entry_vla4575_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_45)) begin
		main_entry_vla4575_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_46)) begin
		main_entry_vla4575_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then264_314)) begin
		main_entry_vla4575_in_a = main_NodeBlock9_a_0_reg;
	end
end
always @(*) begin
	main_entry_vla4575_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_entry_vla4575_address_b = (main_for_cond125_preheader_arrayidx129_2 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_45)) begin
		main_entry_vla4575_address_b = (main_for_cond125_preheader_arrayidx129_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_46)) begin
		main_entry_vla4575_address_b = (main_for_cond125_preheader_arrayidx129_6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_85)) begin
		main_entry_vla4575_address_b = (main_for_end140_arrayidx150 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end314_365)) begin
		main_entry_vla4575_address_b = (main_if_end314_arrayidx317 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla4575_address_b = (main_if_end314_arrayidx317_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_411)) begin
		main_entry_vla4575_address_b = (main_for_cond377_preheader_arrayidx381_2 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_412)) begin
		main_entry_vla4575_address_b = (main_for_cond377_preheader_arrayidx381_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond377_preheader_413)) begin
		main_entry_vla4575_address_b = (main_for_cond377_preheader_arrayidx381_6_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4575_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_entry_vla4575_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_45)) begin
		main_entry_vla4575_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_46)) begin
		main_entry_vla4575_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_85)) begin
		main_entry_vla4575_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla4575_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4575_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_44)) begin
		main_entry_vla4575_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_45)) begin
		main_entry_vla4575_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond125_preheader_46)) begin
		main_entry_vla4575_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end140_85)) begin
		main_entry_vla4575_in_b = main_for_end140_8_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then327_367)) begin
		main_entry_vla4575_in_b = main_NodeBlock9_b_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_51)) begin
		main_signed_modulus_32_0_op0 = main_for_end140_xor2_i;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end140_52)) begin
		main_signed_modulus_32_0_op0 = main_for_end140_xor2_i16_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end165_92)) begin
		main_signed_modulus_32_0_op0 = main_if_end165_xor2_i15;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		main_signed_modulus_32_0_op0 = main_if_then172_xor2_i13;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then172_127)) begin
		main_signed_modulus_32_0_op0 = main_if_then172_xor2_i12_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		main_signed_modulus_32_0_op0 = main_if_then185_xor2_i10;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then185_162)) begin
		main_signed_modulus_32_0_op0 = main_if_then185_xor2_i9_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else196_195)) begin
		main_signed_modulus_32_0_op0 = main_if_else196_xor2_i7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		main_signed_modulus_32_0_op0 = main_if_then198_xor2_i6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		main_signed_modulus_32_0_op0 = main_if_else209_xor2_i4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end283_321)) begin
		main_signed_modulus_32_0_op0 = main_if_end283_xor2_i2;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end347_375)) begin
		main_signed_modulus_32_0_op0 = main_if_end347_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end347_376)) */ begin
		main_signed_modulus_32_0_op0 = main_if_end347_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end140_51)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end140_52)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end165_92)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then172_127)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then185_162)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else196_195)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		main_signed_modulus_32_0_op1 = 32'd7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end283_321)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end347_375)) begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end347_376)) */ begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_modulus_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_modulus_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_modulus_32_0_inst_clken = divide_main_for_end140_rem_en;
end
always @(*) begin
	main_signed_modulus_32_0_inst_numer = main_signed_modulus_32_0_op0;
end
always @(*) begin
	main_signed_modulus_32_0_inst_denom = main_signed_modulus_32_0_op1;
end
always @(*) begin
	divide_main_for_end140_rem_temp_out = main_signed_modulus_32_0_inst_remain;
end
always @(*) begin
	divide_main_for_end140_rem_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_for_end140_rem_out = divide_main_for_end140_rem_temp_out;
end
always @(*) begin
	main_signed_modulus_32_0 = divide_main_for_end140_rem_out;
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_375)) begin
		main_signed_divide_32_0_op0 = main_if_end347_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end347_376)) */ begin
		main_signed_divide_32_0_op0 = main_if_end347_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end347_375)) begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end347_376)) */ begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_divide_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_divide_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_divide_32_0_inst_clken = divide_main_if_end347_div_en;
end
always @(*) begin
	main_signed_divide_32_0_inst_numer = main_signed_divide_32_0_op0;
end
always @(*) begin
	main_signed_divide_32_0_inst_denom = main_signed_divide_32_0_op1;
end
always @(*) begin
	divide_main_if_end347_div_temp_out = main_signed_divide_32_0_inst_quotient;
end
always @(*) begin
	divide_main_if_end347_div_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end347_div_out = divide_main_if_end347_div_temp_out;
end
always @(*) begin
	main_signed_divide_32_0 = divide_main_if_end347_div_out;
end
assign main_NodeBlock9_Pivot10_op1_temp = 32'd3;
assign main_NodeBlock7_Pivot8_op1_temp = 32'd4;
assign main_NodeBlock5_Pivot6_op1_temp = 32'd5;
assign main_NodeBlock1_Pivot2_op1_temp = 32'd1;
assign main_NodeBlock_Pivot_op1_temp = 32'd2;
assign main_for_cond125_preheader_bit_concat10_bit_select_operand_2 = 3'd0;
always @(*) begin
	main_for_end140_rem_width_extended = {{25{main_for_end140_rem[3]}},main_for_end140_rem};
end
assign main_for_end140_bit_concat8_bit_select_operand_2 = 3'd0;
assign main_NodeBlock16_Pivot17_op1_temp = 32'd2;
assign main_if_end252_bit_concat6_bit_select_operand_2 = 3'd0;
assign main_if_else269_cmp270_op1_temp = 32'd60;
assign main_if_end283_Pivot26_op1_temp = 32'd1;
assign main_NodeBlock23_Pivot24_op1_temp = 32'd2;
assign main_if_end314_bit_concat4_bit_select_operand_2 = 3'd0;
assign main_if_else333_cmp334_op1_temp = 32'd60;
always @(*) begin
	main_for_cond377_preheader_i_3587_reg_width_extended = {26'd0,main_for_cond377_preheader_i_3587_reg};
end
assign main_for_cond377_preheader_bit_concat_bit_select_operand_2 = 3'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		finish <= 1'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_416)) begin
		finish <= (fsm_stall == 1'd0);
	end
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		return_val <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_416)) begin
		return_val <= main_cleanup_retval_0_reg;
	end
end
assign memory_controller_1_write_enable_a = 1'd0;
assign memory_controller_1_in_a = 64'd0;
always @(*) begin
	memory_controller_1_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then225_295)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then232_301)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then239_304)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else244_307)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end314_361)) begin
		memory_controller_1_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_1_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		memory_controller_1_address_a = main_if_then172_arrayidx175;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		memory_controller_1_address_a = main_if_then185_arrayidx188;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		memory_controller_1_address_a = main_if_then198_arrayidx201;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		memory_controller_1_address_a = main_if_else209_arrayidx212;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then225_295)) begin
		memory_controller_1_address_a = main_if_then225_arrayidx226;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then232_301)) begin
		memory_controller_1_address_a = main_if_then232_arrayidx233;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then239_304)) begin
		memory_controller_1_address_a = main_if_then239_arrayidx240;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else244_307)) begin
		memory_controller_1_address_a = main_if_else244_arrayidx245;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end314_361)) begin
		memory_controller_1_address_a = main_if_end314_pn_in_reg;
	end
end
always @(*) begin
	memory_controller_1_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then225_295)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then232_301)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then239_304)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else244_307)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end314_361)) begin
		memory_controller_1_size_a = 2'd2;
	end
end
assign memory_controller_1_write_enable_b = 1'd0;
assign memory_controller_1_in_b = 64'd0;
assign memory_controller_1_enable_b = 1'd0;
assign memory_controller_1_address_b = 0;
assign memory_controller_1_size_b = 2'd0;
assign memory_controller_0_write_enable_a = 1'd0;
assign memory_controller_0_in_a = 64'd0;
always @(*) begin
	memory_controller_0_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then225_295)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then232_301)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then239_304)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else244_307)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end314_361)) begin
		memory_controller_0_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_0_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		memory_controller_0_address_a = main_if_then172_arrayidx180;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		memory_controller_0_address_a = main_if_then185_arrayidx193;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		memory_controller_0_address_a = main_if_then198_arrayidx206;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		memory_controller_0_address_a = main_if_else209_arrayidx217;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then225_295)) begin
		memory_controller_0_address_a = main_if_then225_arrayidx228;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then232_301)) begin
		memory_controller_0_address_a = main_if_then232_arrayidx235;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then239_304)) begin
		memory_controller_0_address_a = main_if_then239_arrayidx242;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else244_307)) begin
		memory_controller_0_address_a = main_if_else244_arrayidx247;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end314_361)) begin
		memory_controller_0_address_a = main_if_end314_pn576_in_reg;
	end
end
always @(*) begin
	memory_controller_0_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then172_126)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then185_161)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then198_228)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else209_261)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then225_295)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then232_301)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then239_304)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else244_307)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end314_361)) begin
		memory_controller_0_size_a = 2'd2;
	end
end
assign memory_controller_0_write_enable_b = 1'd0;
assign memory_controller_0_in_b = 64'd0;
assign memory_controller_0_enable_b = 1'd0;
assign memory_controller_0_address_b = 0;
assign memory_controller_0_size_b = 2'd0;

endmodule
module ram_dual_port
(
	clk,
	clken,
	address_a,
	address_b,
	wren_a,
	data_a,
	byteena_a,
	wren_b,
	data_b,
	byteena_b,
	q_b,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
wire [(width_b-1):0] q_b_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
input  wren_b;
input [(width_b-1):0] data_b;
input [width_be_b-1:0] byteena_b;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
	.address_b (address_b),
    .addressstall_b (1'd0),
    .rden_b (clken),
    .q_b (q_b),
    .wren_a (wren_a),
    .data_a (data_a),
    .wren_b (wren_b),
    .data_b (data_b),
    .byteena_b (byteena_b),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.width_byteena_b = width_be_b,
    altsyncram_component.operation_mode = "BIDIR_DUAL_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_b = "BYPASS",
    altsyncram_component.clock_enable_output_b = "BYPASS",
    altsyncram_component.outdata_aclr_b = "NONE",
    altsyncram_component.outdata_reg_b = output_registered,
    altsyncram_component.numwords_b = numwords_b,
    altsyncram_component.widthad_b = widthad_b,
    altsyncram_component.width_b = width_b,
    altsyncram_component.address_reg_b = "CLOCK0",
    altsyncram_component.byteena_reg_b = "CLOCK0",
    altsyncram_component.indata_reg_b = "CLOCK0",
    altsyncram_component.wrcontrol_wraddress_reg_b = "CLOCK0",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module rom_dual_port
(
	clk,
	clken,
	address_a,
	q_a,
	address_b,
	q_b
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = {`MEM_INIT_DIR, "UNUSED.mif"};
parameter  latency = 1;

input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
reg [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
reg [(width_b-1):0] q_b_wire;

(* ram_init_file = init_file *) reg [width_a-1:0] ram [numwords_a-1:0];

integer i;
/* synthesis translate_off */
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == {`MEM_INIT_DIR, "UNUSED.mif"})
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

localparam input_latency = ((latency - 1) >> 1);
localparam output_latency = (latency - 1) - input_latency;
integer j;

reg [(widthad_a-1):0] address_a_reg[input_latency:0];
reg [(widthad_b-1):0] address_b_reg[input_latency:0];

always @(*)
begin
  address_a_reg[0] = address_a;
  address_b_reg[0] = address_b;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < input_latency; j=j+1)
   begin
       address_a_reg[j+1] <= address_a_reg[j];
       address_b_reg[j+1] <= address_b_reg[j];
   end
end

always @ (posedge clk)
if (clken)
begin
    q_a_wire <= ram[address_a_reg[input_latency]];
end

always @ (posedge clk)
if (clken)
begin
    q_b_wire <= ram[address_b_reg[input_latency]];
end


reg [(width_a-1):0] q_a_reg[output_latency:0];

always @(*)
begin
   q_a_reg[0] <= q_a_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
   end
end

assign q_a = q_a_reg[output_latency];
reg [(width_b-1):0] q_b_reg[output_latency:0];

always @(*)
begin
   q_b_reg[0] <= q_b_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_b = q_b_reg[output_latency];

endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);




initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;
@(negedge clk);
start <= 0;
end

always@(posedge clk) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end


endmodule
