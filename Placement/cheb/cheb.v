// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Fri May  8 15:53:39 2020
// ----------------------------------------------------------------------------
`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 12
`define MEMORY_CONTROLLER_TAG_SIZE 9
// This directory contains the memory initialization files generated by LegUp.
// This relative path is used by ModelSim and FPGA synthesis tool.
`define MEM_INIT_DIR "../mem_init/"
// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX1 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcX1_a {`TAG_g_main_opcX1, 23'd0}
// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX2 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcX2_a {`TAG_g_main_opcX2, 23'd0}
// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
`define TAG_g_main_opcX3 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcX3_a {`TAG_g_main_opcX3, 23'd0}
// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY0 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcY0_a {`TAG_g_main_opcY0, 23'd0}
// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcY1_a {`TAG_g_main_opcY1, 23'd0}
// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY2 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcY2_a {`TAG_g_main_opcY2, 23'd0}
// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY3 `MEMORY_CONTROLLER_TAG_SIZE'd5
`define TAG_g_main_opcY3_a {`TAG_g_main_opcY3, 23'd0}

`timescale 1 ns / 1 ns
module top
(
	clk,
	reset,
	start,
	finish,
	return_val
);

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
reg  main_inst_clk;
reg  main_inst_reset;
reg  main_inst_start;
wire  main_inst_finish;
wire [31:0] main_inst_return_val;
wire  main_inst_memory_controller_1_write_enable_a;
wire [63:0] main_inst_memory_controller_1_in_a;
wire  main_inst_memory_controller_1_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_a;
wire [1:0] main_inst_memory_controller_1_size_a;
reg [63:0] main_inst_memory_controller_1_out_a;
wire  main_inst_memory_controller_1_write_enable_b;
wire [63:0] main_inst_memory_controller_1_in_b;
wire  main_inst_memory_controller_1_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_b;
wire [1:0] main_inst_memory_controller_1_size_b;
reg [63:0] main_inst_memory_controller_1_out_b;
wire  main_inst_memory_controller_0_write_enable_a;
wire [63:0] main_inst_memory_controller_0_in_a;
wire  main_inst_memory_controller_0_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_a;
wire [1:0] main_inst_memory_controller_0_size_a;
reg [63:0] main_inst_memory_controller_0_out_a;
wire  main_inst_memory_controller_0_write_enable_b;
wire [63:0] main_inst_memory_controller_0_in_b;
wire  main_inst_memory_controller_0_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_b;
wire [1:0] main_inst_memory_controller_0_size_b;
reg [63:0] main_inst_memory_controller_0_out_b;
reg  main_inst_finish_reg;
reg [31:0] main_inst_return_val_reg;
reg  memory_controller_1_inst_clk;
wire  memory_controller_1_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_a;
reg  memory_controller_1_inst_memory_controller_enable_a;
reg [1:0] memory_controller_1_inst_memory_controller_size_a;
reg  memory_controller_1_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_1_inst_memory_controller_in_a;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_b;
reg  memory_controller_1_inst_memory_controller_enable_b;
reg [1:0] memory_controller_1_inst_memory_controller_size_b;
reg  memory_controller_1_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_1_inst_memory_controller_in_b;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_b;
reg  memory_controller_0_inst_clk;
wire  memory_controller_0_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_a;
reg  memory_controller_0_inst_memory_controller_enable_a;
reg [1:0] memory_controller_0_inst_memory_controller_size_a;
reg  memory_controller_0_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_0_inst_memory_controller_in_a;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_b;
reg  memory_controller_0_inst_memory_controller_enable_b;
reg [1:0] memory_controller_0_inst_memory_controller_size_b;
reg  memory_controller_0_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_0_inst_memory_controller_in_b;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_b;


main main_inst (
	.clk (main_inst_clk),
	.reset (main_inst_reset),
	.start (main_inst_start),
	.finish (main_inst_finish),
	.return_val (main_inst_return_val),
	.memory_controller_1_write_enable_a (main_inst_memory_controller_1_write_enable_a),
	.memory_controller_1_in_a (main_inst_memory_controller_1_in_a),
	.memory_controller_1_enable_a (main_inst_memory_controller_1_enable_a),
	.memory_controller_1_address_a (main_inst_memory_controller_1_address_a),
	.memory_controller_1_size_a (main_inst_memory_controller_1_size_a),
	.memory_controller_1_out_a (main_inst_memory_controller_1_out_a),
	.memory_controller_1_write_enable_b (main_inst_memory_controller_1_write_enable_b),
	.memory_controller_1_in_b (main_inst_memory_controller_1_in_b),
	.memory_controller_1_enable_b (main_inst_memory_controller_1_enable_b),
	.memory_controller_1_address_b (main_inst_memory_controller_1_address_b),
	.memory_controller_1_size_b (main_inst_memory_controller_1_size_b),
	.memory_controller_1_out_b (main_inst_memory_controller_1_out_b),
	.memory_controller_0_write_enable_a (main_inst_memory_controller_0_write_enable_a),
	.memory_controller_0_in_a (main_inst_memory_controller_0_in_a),
	.memory_controller_0_enable_a (main_inst_memory_controller_0_enable_a),
	.memory_controller_0_address_a (main_inst_memory_controller_0_address_a),
	.memory_controller_0_size_a (main_inst_memory_controller_0_size_a),
	.memory_controller_0_out_a (main_inst_memory_controller_0_out_a),
	.memory_controller_0_write_enable_b (main_inst_memory_controller_0_write_enable_b),
	.memory_controller_0_in_b (main_inst_memory_controller_0_in_b),
	.memory_controller_0_enable_b (main_inst_memory_controller_0_enable_b),
	.memory_controller_0_address_b (main_inst_memory_controller_0_address_b),
	.memory_controller_0_size_b (main_inst_memory_controller_0_size_b),
	.memory_controller_0_out_b (main_inst_memory_controller_0_out_b)
);



memory_controller_1 memory_controller_1_inst (
	.clk (memory_controller_1_inst_clk),
	.memory_controller_waitrequest (memory_controller_1_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_1_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_1_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_1_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_1_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_1_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_1_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_1_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_1_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_1_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_1_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_1_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_1_inst_memory_controller_out_reg_b)
);



memory_controller_0 memory_controller_0_inst (
	.clk (memory_controller_0_inst_clk),
	.memory_controller_waitrequest (memory_controller_0_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_0_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_0_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_0_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_0_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_0_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_0_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_0_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_0_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_0_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_0_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_0_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_0_inst_memory_controller_out_reg_b)
);



always @(*) begin
	main_inst_clk = clk;
end
always @(*) begin
	main_inst_reset = reset;
end
always @(*) begin
	main_inst_start = start;
end
always @(*) begin
	main_inst_memory_controller_1_out_a = memory_controller_1_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_1_out_b = memory_controller_1_inst_memory_controller_out_reg_b;
end
always @(*) begin
	main_inst_memory_controller_0_out_a = memory_controller_0_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_0_out_b = memory_controller_0_inst_memory_controller_out_reg_b;
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_finish_reg <= 1'd0;
	end
	if (main_inst_finish) begin
		main_inst_finish_reg <= 1'd1;
	end
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_return_val_reg <= 0;
	end
	if (main_inst_finish) begin
		main_inst_return_val_reg <= main_inst_return_val;
	end
end
always @(*) begin
	memory_controller_1_inst_clk = clk;
end
assign memory_controller_1_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_1_inst_memory_controller_address_a = main_inst_memory_controller_1_address_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_a = main_inst_memory_controller_1_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_a = main_inst_memory_controller_1_size_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_a = main_inst_memory_controller_1_write_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_a = main_inst_memory_controller_1_in_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_address_b = main_inst_memory_controller_1_address_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_b = main_inst_memory_controller_1_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_b = main_inst_memory_controller_1_size_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_b = main_inst_memory_controller_1_write_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_b = main_inst_memory_controller_1_in_b;
end
always @(*) begin
	memory_controller_0_inst_clk = clk;
end
assign memory_controller_0_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_0_inst_memory_controller_address_a = main_inst_memory_controller_0_address_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_a = main_inst_memory_controller_0_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_a = main_inst_memory_controller_0_size_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_a = main_inst_memory_controller_0_write_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_a = main_inst_memory_controller_0_in_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_address_b = main_inst_memory_controller_0_address_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_b = main_inst_memory_controller_0_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_b = main_inst_memory_controller_0_size_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_b = main_inst_memory_controller_0_write_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_b = main_inst_memory_controller_0_in_b;
end
always @(*) begin
	finish = main_inst_finish;
end
always @(*) begin
	return_val = main_inst_return_val;
end

endmodule
`timescale 1 ns / 1 ns
module memory_controller_0
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcY0_address_a;
reg [5:0] main_opcY0_address_b;
reg main_opcY0_write_enable_a;
reg main_opcY0_write_enable_b;
reg [31:0] main_opcY0_in_a;
reg [31:0] main_opcY0_in_b;
wire [31:0] main_opcY0_out_a;
wire [31:0] main_opcY0_out_b;

// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY0 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY0_address_a ),
	.q_a( main_opcY0_out_a ),
	.address_b( main_opcY0_address_b ),
	.q_b( main_opcY0_out_b )
);
defparam main_opcY0.width_a = 32;
defparam main_opcY0.widthad_a = 6;
defparam main_opcY0.numwords_a = 62;
defparam main_opcY0.width_b = 32;
defparam main_opcY0.widthad_b = 6;
defparam main_opcY0.numwords_b = 62;
defparam main_opcY0.latency = ram_latency;
defparam main_opcY0.init_file = {`MEM_INIT_DIR, "main_opcY0.mif"};

reg [5:0] main_opcY1_address_a;
reg [5:0] main_opcY1_address_b;
reg main_opcY1_write_enable_a;
reg main_opcY1_write_enable_b;
reg [31:0] main_opcY1_in_a;
reg [31:0] main_opcY1_in_b;
wire [31:0] main_opcY1_out_a;
wire [31:0] main_opcY1_out_b;

// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY1_address_a ),
	.q_a( main_opcY1_out_a ),
	.address_b( main_opcY1_address_b ),
	.q_b( main_opcY1_out_b )
);
defparam main_opcY1.width_a = 32;
defparam main_opcY1.widthad_a = 6;
defparam main_opcY1.numwords_a = 62;
defparam main_opcY1.width_b = 32;
defparam main_opcY1.widthad_b = 6;
defparam main_opcY1.numwords_b = 62;
defparam main_opcY1.latency = ram_latency;
defparam main_opcY1.init_file = {`MEM_INIT_DIR, "main_opcY1.mif"};

reg [5:0] main_opcY2_address_a;
reg [5:0] main_opcY2_address_b;
reg main_opcY2_write_enable_a;
reg main_opcY2_write_enable_b;
reg [31:0] main_opcY2_in_a;
reg [31:0] main_opcY2_in_b;
wire [31:0] main_opcY2_out_a;
wire [31:0] main_opcY2_out_b;

// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY2_address_a ),
	.q_a( main_opcY2_out_a ),
	.address_b( main_opcY2_address_b ),
	.q_b( main_opcY2_out_b )
);
defparam main_opcY2.width_a = 32;
defparam main_opcY2.widthad_a = 6;
defparam main_opcY2.numwords_a = 62;
defparam main_opcY2.width_b = 32;
defparam main_opcY2.widthad_b = 6;
defparam main_opcY2.numwords_b = 62;
defparam main_opcY2.latency = ram_latency;
defparam main_opcY2.init_file = {`MEM_INIT_DIR, "main_opcY2.mif"};

reg [5:0] main_opcY3_address_a;
reg [5:0] main_opcY3_address_b;
reg main_opcY3_write_enable_a;
reg main_opcY3_write_enable_b;
reg [31:0] main_opcY3_in_a;
reg [31:0] main_opcY3_in_b;
wire [31:0] main_opcY3_out_a;
wire [31:0] main_opcY3_out_b;

// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY3_address_a ),
	.q_a( main_opcY3_out_a ),
	.address_b( main_opcY3_address_b ),
	.q_b( main_opcY3_out_b )
);
defparam main_opcY3.width_a = 32;
defparam main_opcY3.widthad_a = 6;
defparam main_opcY3.numwords_a = 62;
defparam main_opcY3.width_b = 32;
defparam main_opcY3.widthad_b = 6;
defparam main_opcY3.numwords_b = 62;
defparam main_opcY3.latency = ram_latency;
defparam main_opcY3.init_file = {`MEM_INIT_DIR, "main_opcY3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcY0_a;
assign select_main_opcY0_a = (tag_a == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_a;
wire [31:0] memory_controller_main_opcY0_out_a;
assign memory_controller_main_opcY0_out_a = {32{ select_main_opcY0_reg_a[ram_latency]}} & main_opcY0_out_a;

wire select_main_opcY1_a;
assign select_main_opcY1_a = (tag_a == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_a;
wire [31:0] memory_controller_main_opcY1_out_a;
assign memory_controller_main_opcY1_out_a = {32{ select_main_opcY1_reg_a[ram_latency]}} & main_opcY1_out_a;

wire select_main_opcY2_a;
assign select_main_opcY2_a = (tag_a == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_a;
wire [31:0] memory_controller_main_opcY2_out_a;
assign memory_controller_main_opcY2_out_a = {32{ select_main_opcY2_reg_a[ram_latency]}} & main_opcY2_out_a;

wire select_main_opcY3_a;
assign select_main_opcY3_a = (tag_a == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_a;
wire [31:0] memory_controller_main_opcY3_out_a;
assign memory_controller_main_opcY3_out_a = {32{ select_main_opcY3_reg_a[ram_latency]}} & main_opcY3_out_a;

always @(*)
begin
main_opcY0_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY0_a}};
main_opcY0_write_enable_a = memory_controller_write_enable_a & select_main_opcY0_a;
main_opcY0_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY1_a}};
main_opcY1_write_enable_a = memory_controller_write_enable_a & select_main_opcY1_a;
main_opcY1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY2_a}};
main_opcY2_write_enable_a = memory_controller_write_enable_a & select_main_opcY2_a;
main_opcY2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY3_a}};
main_opcY3_write_enable_a = memory_controller_write_enable_a & select_main_opcY3_a;
main_opcY3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcY0_reg_a[ram_latency]}} | {2{select_main_opcY1_reg_a[ram_latency]}} | {2{select_main_opcY2_reg_a[ram_latency]}} | {2{select_main_opcY3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcY0_out_a | memory_controller_main_opcY1_out_a | memory_controller_main_opcY2_out_a | memory_controller_main_opcY3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_a[j+1] <= select_main_opcY0_reg_a[j];
select_main_opcY1_reg_a[j+1] <= select_main_opcY1_reg_a[j];
select_main_opcY2_reg_a[j+1] <= select_main_opcY2_reg_a[j];
select_main_opcY3_reg_a[j+1] <= select_main_opcY3_reg_a[j];
end
always @(*)
begin
select_main_opcY0_reg_a[0] <= select_main_opcY0_a;
select_main_opcY1_reg_a[0] <= select_main_opcY1_a;
select_main_opcY2_reg_a[0] <= select_main_opcY2_a;
select_main_opcY3_reg_a[0] <= select_main_opcY3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcY0_b;
assign select_main_opcY0_b = (tag_b == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_b;
wire [31:0] memory_controller_main_opcY0_out_b;
assign memory_controller_main_opcY0_out_b = {32{ select_main_opcY0_reg_b[ram_latency]}} & main_opcY0_out_b;

wire select_main_opcY1_b;
assign select_main_opcY1_b = (tag_b == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_b;
wire [31:0] memory_controller_main_opcY1_out_b;
assign memory_controller_main_opcY1_out_b = {32{ select_main_opcY1_reg_b[ram_latency]}} & main_opcY1_out_b;

wire select_main_opcY2_b;
assign select_main_opcY2_b = (tag_b == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_b;
wire [31:0] memory_controller_main_opcY2_out_b;
assign memory_controller_main_opcY2_out_b = {32{ select_main_opcY2_reg_b[ram_latency]}} & main_opcY2_out_b;

wire select_main_opcY3_b;
assign select_main_opcY3_b = (tag_b == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_b;
wire [31:0] memory_controller_main_opcY3_out_b;
assign memory_controller_main_opcY3_out_b = {32{ select_main_opcY3_reg_b[ram_latency]}} & main_opcY3_out_b;

always @(*)
begin
main_opcY0_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY0_b}};
main_opcY0_write_enable_b = memory_controller_write_enable_b & select_main_opcY0_b;
main_opcY0_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY1_b}};
main_opcY1_write_enable_b = memory_controller_write_enable_b & select_main_opcY1_b;
main_opcY1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY2_b}};
main_opcY2_write_enable_b = memory_controller_write_enable_b & select_main_opcY2_b;
main_opcY2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY3_b}};
main_opcY3_write_enable_b = memory_controller_write_enable_b & select_main_opcY3_b;
main_opcY3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcY0_reg_b[ram_latency]}} | {2{select_main_opcY1_reg_b[ram_latency]}} | {2{select_main_opcY2_reg_b[ram_latency]}} | {2{select_main_opcY3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcY0_out_b | memory_controller_main_opcY1_out_b | memory_controller_main_opcY2_out_b | memory_controller_main_opcY3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_b[j+1] <= select_main_opcY0_reg_b[j];
select_main_opcY1_reg_b[j+1] <= select_main_opcY1_reg_b[j];
select_main_opcY2_reg_b[j+1] <= select_main_opcY2_reg_b[j];
select_main_opcY3_reg_b[j+1] <= select_main_opcY3_reg_b[j];
end
always @(*)
begin
select_main_opcY0_reg_b[0] <= select_main_opcY0_b;
select_main_opcY1_reg_b[0] <= select_main_opcY1_b;
select_main_opcY2_reg_b[0] <= select_main_opcY2_b;
select_main_opcY3_reg_b[0] <= select_main_opcY3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module memory_controller_1
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcX1_address_a;
reg [5:0] main_opcX1_address_b;
reg main_opcX1_write_enable_a;
reg main_opcX1_write_enable_b;
reg [31:0] main_opcX1_in_a;
reg [31:0] main_opcX1_in_b;
wire [31:0] main_opcX1_out_a;
wire [31:0] main_opcX1_out_b;

// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX1_address_a ),
	.q_a( main_opcX1_out_a ),
	.address_b( main_opcX1_address_b ),
	.q_b( main_opcX1_out_b )
);
defparam main_opcX1.width_a = 32;
defparam main_opcX1.widthad_a = 6;
defparam main_opcX1.numwords_a = 62;
defparam main_opcX1.width_b = 32;
defparam main_opcX1.widthad_b = 6;
defparam main_opcX1.numwords_b = 62;
defparam main_opcX1.latency = ram_latency;
defparam main_opcX1.init_file = {`MEM_INIT_DIR, "main_opcX1.mif"};

reg [5:0] main_opcX2_address_a;
reg [5:0] main_opcX2_address_b;
reg main_opcX2_write_enable_a;
reg main_opcX2_write_enable_b;
reg [31:0] main_opcX2_in_a;
reg [31:0] main_opcX2_in_b;
wire [31:0] main_opcX2_out_a;
wire [31:0] main_opcX2_out_b;

// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX2_address_a ),
	.q_a( main_opcX2_out_a ),
	.address_b( main_opcX2_address_b ),
	.q_b( main_opcX2_out_b )
);
defparam main_opcX2.width_a = 32;
defparam main_opcX2.widthad_a = 6;
defparam main_opcX2.numwords_a = 62;
defparam main_opcX2.width_b = 32;
defparam main_opcX2.widthad_b = 6;
defparam main_opcX2.numwords_b = 62;
defparam main_opcX2.latency = ram_latency;
defparam main_opcX2.init_file = {`MEM_INIT_DIR, "main_opcX2.mif"};

reg [5:0] main_opcX3_address_a;
reg [5:0] main_opcX3_address_b;
reg main_opcX3_write_enable_a;
reg main_opcX3_write_enable_b;
reg [31:0] main_opcX3_in_a;
reg [31:0] main_opcX3_in_b;
wire [31:0] main_opcX3_out_a;
wire [31:0] main_opcX3_out_b;

// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
rom_dual_port main_opcX3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX3_address_a ),
	.q_a( main_opcX3_out_a ),
	.address_b( main_opcX3_address_b ),
	.q_b( main_opcX3_out_b )
);
defparam main_opcX3.width_a = 32;
defparam main_opcX3.widthad_a = 6;
defparam main_opcX3.numwords_a = 62;
defparam main_opcX3.width_b = 32;
defparam main_opcX3.widthad_b = 6;
defparam main_opcX3.numwords_b = 62;
defparam main_opcX3.latency = ram_latency;
defparam main_opcX3.init_file = {`MEM_INIT_DIR, "main_opcX3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcX1_a;
assign select_main_opcX1_a = (tag_a == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_a;
wire [31:0] memory_controller_main_opcX1_out_a;
assign memory_controller_main_opcX1_out_a = {32{ select_main_opcX1_reg_a[ram_latency]}} & main_opcX1_out_a;

wire select_main_opcX2_a;
assign select_main_opcX2_a = (tag_a == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_a;
wire [31:0] memory_controller_main_opcX2_out_a;
assign memory_controller_main_opcX2_out_a = {32{ select_main_opcX2_reg_a[ram_latency]}} & main_opcX2_out_a;

wire select_main_opcX3_a;
assign select_main_opcX3_a = (tag_a == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_a;
wire [31:0] memory_controller_main_opcX3_out_a;
assign memory_controller_main_opcX3_out_a = {32{ select_main_opcX3_reg_a[ram_latency]}} & main_opcX3_out_a;

always @(*)
begin
main_opcX1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX1_a}};
main_opcX1_write_enable_a = memory_controller_write_enable_a & select_main_opcX1_a;
main_opcX1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX2_a}};
main_opcX2_write_enable_a = memory_controller_write_enable_a & select_main_opcX2_a;
main_opcX2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX3_a}};
main_opcX3_write_enable_a = memory_controller_write_enable_a & select_main_opcX3_a;
main_opcX3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcX1_reg_a[ram_latency]}} | {2{select_main_opcX2_reg_a[ram_latency]}} | {2{select_main_opcX3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcX1_out_a | memory_controller_main_opcX2_out_a | memory_controller_main_opcX3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_a[j+1] <= select_main_opcX1_reg_a[j];
select_main_opcX2_reg_a[j+1] <= select_main_opcX2_reg_a[j];
select_main_opcX3_reg_a[j+1] <= select_main_opcX3_reg_a[j];
end
always @(*)
begin
select_main_opcX1_reg_a[0] <= select_main_opcX1_a;
select_main_opcX2_reg_a[0] <= select_main_opcX2_a;
select_main_opcX3_reg_a[0] <= select_main_opcX3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcX1_b;
assign select_main_opcX1_b = (tag_b == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_b;
wire [31:0] memory_controller_main_opcX1_out_b;
assign memory_controller_main_opcX1_out_b = {32{ select_main_opcX1_reg_b[ram_latency]}} & main_opcX1_out_b;

wire select_main_opcX2_b;
assign select_main_opcX2_b = (tag_b == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_b;
wire [31:0] memory_controller_main_opcX2_out_b;
assign memory_controller_main_opcX2_out_b = {32{ select_main_opcX2_reg_b[ram_latency]}} & main_opcX2_out_b;

wire select_main_opcX3_b;
assign select_main_opcX3_b = (tag_b == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_b;
wire [31:0] memory_controller_main_opcX3_out_b;
assign memory_controller_main_opcX3_out_b = {32{ select_main_opcX3_reg_b[ram_latency]}} & main_opcX3_out_b;

always @(*)
begin
main_opcX1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX1_b}};
main_opcX1_write_enable_b = memory_controller_write_enable_b & select_main_opcX1_b;
main_opcX1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX2_b}};
main_opcX2_write_enable_b = memory_controller_write_enable_b & select_main_opcX2_b;
main_opcX2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX3_b}};
main_opcX3_write_enable_b = memory_controller_write_enable_b & select_main_opcX3_b;
main_opcX3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcX1_reg_b[ram_latency]}} | {2{select_main_opcX2_reg_b[ram_latency]}} | {2{select_main_opcX3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcX1_out_b | memory_controller_main_opcX2_out_b | memory_controller_main_opcX3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_b[j+1] <= select_main_opcX1_reg_b[j];
select_main_opcX2_reg_b[j+1] <= select_main_opcX2_reg_b[j];
select_main_opcX3_reg_b[j+1] <= select_main_opcX3_reg_b[j];
end
always @(*)
begin
select_main_opcX1_reg_b[0] <= select_main_opcX1_b;
select_main_opcX2_reg_b[0] <= select_main_opcX2_b;
select_main_opcX3_reg_b[0] <= select_main_opcX3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module main
(
	clk,
	reset,
	start,
	finish,
	return_val,
	memory_controller_1_write_enable_a,
	memory_controller_1_in_a,
	memory_controller_1_enable_a,
	memory_controller_1_address_a,
	memory_controller_1_size_a,
	memory_controller_1_out_a,
	memory_controller_1_write_enable_b,
	memory_controller_1_in_b,
	memory_controller_1_enable_b,
	memory_controller_1_address_b,
	memory_controller_1_size_b,
	memory_controller_1_out_b,
	memory_controller_0_write_enable_a,
	memory_controller_0_in_a,
	memory_controller_0_enable_a,
	memory_controller_0_address_a,
	memory_controller_0_size_a,
	memory_controller_0_out_a,
	memory_controller_0_write_enable_b,
	memory_controller_0_in_b,
	memory_controller_0_enable_b,
	memory_controller_0_address_b,
	memory_controller_0_size_b,
	memory_controller_0_out_b
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_main_BB_entry_1 = 9'd1;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_2 = 9'd2;
parameter [8:0] LEGUP_F_main_BB_NodeBlock7_3 = 9'd3;
parameter [8:0] LEGUP_F_main_BB_NodeBlock5_4 = 9'd4;
parameter [8:0] LEGUP_F_main_BB_LeafBlock3_5 = 9'd5;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_backedge_6 = 9'd6;
parameter [8:0] LEGUP_F_main_BB_NodeBlock1_7 = 9'd7;
parameter [8:0] LEGUP_F_main_BB_NodeBlock_8 = 9'd8;
parameter [8:0] LEGUP_F_main_BB_LeafBlock_9 = 9'd9;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_10 = 9'd10;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_11 = 9'd11;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_12 = 9'd12;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_13 = 9'd13;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_14 = 9'd14;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_15 = 9'd15;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_16 = 9'd16;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_17 = 9'd17;
parameter [8:0] LEGUP_F_main_BB_for_cond292_preheader_18 = 9'd18;
parameter [8:0] LEGUP_F_main_BB_sw_bb_19 = 9'd19;
parameter [8:0] LEGUP_F_main_BB_sw_bb_20 = 9'd20;
parameter [8:0] LEGUP_F_main_BB_sw_bb_21 = 9'd21;
parameter [8:0] LEGUP_F_main_BB_sw_bb_22 = 9'd22;
parameter [8:0] LEGUP_F_main_BB_sw_bb_23 = 9'd23;
parameter [8:0] LEGUP_F_main_BB_sw_bb_24 = 9'd24;
parameter [8:0] LEGUP_F_main_BB_sw_bb_25 = 9'd25;
parameter [8:0] LEGUP_F_main_BB_sw_bb_26 = 9'd26;
parameter [8:0] LEGUP_F_main_BB_sw_bb_27 = 9'd27;
parameter [8:0] LEGUP_F_main_BB_sw_bb_28 = 9'd28;
parameter [8:0] LEGUP_F_main_BB_sw_bb_29 = 9'd29;
parameter [8:0] LEGUP_F_main_BB_sw_bb_30 = 9'd30;
parameter [8:0] LEGUP_F_main_BB_sw_bb_31 = 9'd31;
parameter [8:0] LEGUP_F_main_BB_sw_bb_32 = 9'd32;
parameter [8:0] LEGUP_F_main_BB_sw_bb_33 = 9'd33;
parameter [8:0] LEGUP_F_main_BB_sw_bb_34 = 9'd34;
parameter [8:0] LEGUP_F_main_BB_sw_bb_35 = 9'd35;
parameter [8:0] LEGUP_F_main_BB_sw_bb_36 = 9'd36;
parameter [8:0] LEGUP_F_main_BB_sw_bb_37 = 9'd37;
parameter [8:0] LEGUP_F_main_BB_sw_bb_38 = 9'd38;
parameter [8:0] LEGUP_F_main_BB_sw_bb_39 = 9'd39;
parameter [8:0] LEGUP_F_main_BB_sw_bb_40 = 9'd40;
parameter [8:0] LEGUP_F_main_BB_sw_bb_41 = 9'd41;
parameter [8:0] LEGUP_F_main_BB_sw_bb_42 = 9'd42;
parameter [8:0] LEGUP_F_main_BB_sw_bb_43 = 9'd43;
parameter [8:0] LEGUP_F_main_BB_sw_bb_44 = 9'd44;
parameter [8:0] LEGUP_F_main_BB_sw_bb_45 = 9'd45;
parameter [8:0] LEGUP_F_main_BB_sw_bb_46 = 9'd46;
parameter [8:0] LEGUP_F_main_BB_sw_bb_47 = 9'd47;
parameter [8:0] LEGUP_F_main_BB_sw_bb_48 = 9'd48;
parameter [8:0] LEGUP_F_main_BB_sw_bb_49 = 9'd49;
parameter [8:0] LEGUP_F_main_BB_sw_bb_50 = 9'd50;
parameter [8:0] LEGUP_F_main_BB_sw_bb_51 = 9'd51;
parameter [8:0] LEGUP_F_main_BB_sw_bb_52 = 9'd52;
parameter [8:0] LEGUP_F_main_BB_sw_bb_53 = 9'd53;
parameter [8:0] LEGUP_F_main_BB_sw_bb_54 = 9'd54;
parameter [8:0] LEGUP_F_main_BB_sw_bb69_55 = 9'd55;
parameter [8:0] LEGUP_F_main_BB_if_end_56 = 9'd56;
parameter [8:0] LEGUP_F_main_BB_if_end_57 = 9'd57;
parameter [8:0] LEGUP_F_main_BB_if_end_58 = 9'd58;
parameter [8:0] LEGUP_F_main_BB_sw_bb80_59 = 9'd59;
parameter [8:0] LEGUP_F_main_BB_if_end83_60 = 9'd60;
parameter [8:0] LEGUP_F_main_BB_if_end83_61 = 9'd61;
parameter [8:0] LEGUP_F_main_BB_if_end83_62 = 9'd62;
parameter [8:0] LEGUP_F_main_BB_if_end83_63 = 9'd63;
parameter [8:0] LEGUP_F_main_BB_if_end83_64 = 9'd64;
parameter [8:0] LEGUP_F_main_BB_if_end83_65 = 9'd65;
parameter [8:0] LEGUP_F_main_BB_if_end83_66 = 9'd66;
parameter [8:0] LEGUP_F_main_BB_if_end83_67 = 9'd67;
parameter [8:0] LEGUP_F_main_BB_if_end83_68 = 9'd68;
parameter [8:0] LEGUP_F_main_BB_if_end83_69 = 9'd69;
parameter [8:0] LEGUP_F_main_BB_if_end83_70 = 9'd70;
parameter [8:0] LEGUP_F_main_BB_if_end83_71 = 9'd71;
parameter [8:0] LEGUP_F_main_BB_if_end83_72 = 9'd72;
parameter [8:0] LEGUP_F_main_BB_if_end83_73 = 9'd73;
parameter [8:0] LEGUP_F_main_BB_if_end83_74 = 9'd74;
parameter [8:0] LEGUP_F_main_BB_if_end83_75 = 9'd75;
parameter [8:0] LEGUP_F_main_BB_if_end83_76 = 9'd76;
parameter [8:0] LEGUP_F_main_BB_if_end83_77 = 9'd77;
parameter [8:0] LEGUP_F_main_BB_if_end83_78 = 9'd78;
parameter [8:0] LEGUP_F_main_BB_if_end83_79 = 9'd79;
parameter [8:0] LEGUP_F_main_BB_if_end83_80 = 9'd80;
parameter [8:0] LEGUP_F_main_BB_if_end83_81 = 9'd81;
parameter [8:0] LEGUP_F_main_BB_if_end83_82 = 9'd82;
parameter [8:0] LEGUP_F_main_BB_if_end83_83 = 9'd83;
parameter [8:0] LEGUP_F_main_BB_if_end83_84 = 9'd84;
parameter [8:0] LEGUP_F_main_BB_if_end83_85 = 9'd85;
parameter [8:0] LEGUP_F_main_BB_if_end83_86 = 9'd86;
parameter [8:0] LEGUP_F_main_BB_if_end83_87 = 9'd87;
parameter [8:0] LEGUP_F_main_BB_if_end83_88 = 9'd88;
parameter [8:0] LEGUP_F_main_BB_if_end83_89 = 9'd89;
parameter [8:0] LEGUP_F_main_BB_if_end83_90 = 9'd90;
parameter [8:0] LEGUP_F_main_BB_if_end83_91 = 9'd91;
parameter [8:0] LEGUP_F_main_BB_if_end83_92 = 9'd92;
parameter [8:0] LEGUP_F_main_BB_if_then88_93 = 9'd93;
parameter [8:0] LEGUP_F_main_BB_if_then90_94 = 9'd94;
parameter [8:0] LEGUP_F_main_BB_if_then90_95 = 9'd95;
parameter [8:0] LEGUP_F_main_BB_if_then90_96 = 9'd96;
parameter [8:0] LEGUP_F_main_BB_if_then90_97 = 9'd97;
parameter [8:0] LEGUP_F_main_BB_if_then90_98 = 9'd98;
parameter [8:0] LEGUP_F_main_BB_if_then90_99 = 9'd99;
parameter [8:0] LEGUP_F_main_BB_if_then90_100 = 9'd100;
parameter [8:0] LEGUP_F_main_BB_if_then90_101 = 9'd101;
parameter [8:0] LEGUP_F_main_BB_if_then90_102 = 9'd102;
parameter [8:0] LEGUP_F_main_BB_if_then90_103 = 9'd103;
parameter [8:0] LEGUP_F_main_BB_if_then90_104 = 9'd104;
parameter [8:0] LEGUP_F_main_BB_if_then90_105 = 9'd105;
parameter [8:0] LEGUP_F_main_BB_if_then90_106 = 9'd106;
parameter [8:0] LEGUP_F_main_BB_if_then90_107 = 9'd107;
parameter [8:0] LEGUP_F_main_BB_if_then90_108 = 9'd108;
parameter [8:0] LEGUP_F_main_BB_if_then90_109 = 9'd109;
parameter [8:0] LEGUP_F_main_BB_if_then90_110 = 9'd110;
parameter [8:0] LEGUP_F_main_BB_if_then90_111 = 9'd111;
parameter [8:0] LEGUP_F_main_BB_if_then90_112 = 9'd112;
parameter [8:0] LEGUP_F_main_BB_if_then90_113 = 9'd113;
parameter [8:0] LEGUP_F_main_BB_if_then90_114 = 9'd114;
parameter [8:0] LEGUP_F_main_BB_if_then90_115 = 9'd115;
parameter [8:0] LEGUP_F_main_BB_if_then90_116 = 9'd116;
parameter [8:0] LEGUP_F_main_BB_if_then90_117 = 9'd117;
parameter [8:0] LEGUP_F_main_BB_if_then90_118 = 9'd118;
parameter [8:0] LEGUP_F_main_BB_if_then90_119 = 9'd119;
parameter [8:0] LEGUP_F_main_BB_if_then90_120 = 9'd120;
parameter [8:0] LEGUP_F_main_BB_if_then90_121 = 9'd121;
parameter [8:0] LEGUP_F_main_BB_if_then90_122 = 9'd122;
parameter [8:0] LEGUP_F_main_BB_if_then90_123 = 9'd123;
parameter [8:0] LEGUP_F_main_BB_if_then90_124 = 9'd124;
parameter [8:0] LEGUP_F_main_BB_if_then90_125 = 9'd125;
parameter [8:0] LEGUP_F_main_BB_if_then90_126 = 9'd126;
parameter [8:0] LEGUP_F_main_BB_if_then90_127 = 9'd127;
parameter [8:0] LEGUP_F_main_BB_if_else101_128 = 9'd128;
parameter [8:0] LEGUP_F_main_BB_if_then103_129 = 9'd129;
parameter [8:0] LEGUP_F_main_BB_if_then103_130 = 9'd130;
parameter [8:0] LEGUP_F_main_BB_if_then103_131 = 9'd131;
parameter [8:0] LEGUP_F_main_BB_if_then103_132 = 9'd132;
parameter [8:0] LEGUP_F_main_BB_if_then103_133 = 9'd133;
parameter [8:0] LEGUP_F_main_BB_if_then103_134 = 9'd134;
parameter [8:0] LEGUP_F_main_BB_if_then103_135 = 9'd135;
parameter [8:0] LEGUP_F_main_BB_if_then103_136 = 9'd136;
parameter [8:0] LEGUP_F_main_BB_if_then103_137 = 9'd137;
parameter [8:0] LEGUP_F_main_BB_if_then103_138 = 9'd138;
parameter [8:0] LEGUP_F_main_BB_if_then103_139 = 9'd139;
parameter [8:0] LEGUP_F_main_BB_if_then103_140 = 9'd140;
parameter [8:0] LEGUP_F_main_BB_if_then103_141 = 9'd141;
parameter [8:0] LEGUP_F_main_BB_if_then103_142 = 9'd142;
parameter [8:0] LEGUP_F_main_BB_if_then103_143 = 9'd143;
parameter [8:0] LEGUP_F_main_BB_if_then103_144 = 9'd144;
parameter [8:0] LEGUP_F_main_BB_if_then103_145 = 9'd145;
parameter [8:0] LEGUP_F_main_BB_if_then103_146 = 9'd146;
parameter [8:0] LEGUP_F_main_BB_if_then103_147 = 9'd147;
parameter [8:0] LEGUP_F_main_BB_if_then103_148 = 9'd148;
parameter [8:0] LEGUP_F_main_BB_if_then103_149 = 9'd149;
parameter [8:0] LEGUP_F_main_BB_if_then103_150 = 9'd150;
parameter [8:0] LEGUP_F_main_BB_if_then103_151 = 9'd151;
parameter [8:0] LEGUP_F_main_BB_if_then103_152 = 9'd152;
parameter [8:0] LEGUP_F_main_BB_if_then103_153 = 9'd153;
parameter [8:0] LEGUP_F_main_BB_if_then103_154 = 9'd154;
parameter [8:0] LEGUP_F_main_BB_if_then103_155 = 9'd155;
parameter [8:0] LEGUP_F_main_BB_if_then103_156 = 9'd156;
parameter [8:0] LEGUP_F_main_BB_if_then103_157 = 9'd157;
parameter [8:0] LEGUP_F_main_BB_if_then103_158 = 9'd158;
parameter [8:0] LEGUP_F_main_BB_if_then103_159 = 9'd159;
parameter [8:0] LEGUP_F_main_BB_if_then103_160 = 9'd160;
parameter [8:0] LEGUP_F_main_BB_if_then103_161 = 9'd161;
parameter [8:0] LEGUP_F_main_BB_if_then103_162 = 9'd162;
parameter [8:0] LEGUP_F_main_BB_if_else114_163 = 9'd163;
parameter [8:0] LEGUP_F_main_BB_if_else114_164 = 9'd164;
parameter [8:0] LEGUP_F_main_BB_if_else114_165 = 9'd165;
parameter [8:0] LEGUP_F_main_BB_if_else114_166 = 9'd166;
parameter [8:0] LEGUP_F_main_BB_if_else114_167 = 9'd167;
parameter [8:0] LEGUP_F_main_BB_if_else114_168 = 9'd168;
parameter [8:0] LEGUP_F_main_BB_if_else114_169 = 9'd169;
parameter [8:0] LEGUP_F_main_BB_if_else114_170 = 9'd170;
parameter [8:0] LEGUP_F_main_BB_if_else114_171 = 9'd171;
parameter [8:0] LEGUP_F_main_BB_if_else114_172 = 9'd172;
parameter [8:0] LEGUP_F_main_BB_if_else114_173 = 9'd173;
parameter [8:0] LEGUP_F_main_BB_if_else114_174 = 9'd174;
parameter [8:0] LEGUP_F_main_BB_if_else114_175 = 9'd175;
parameter [8:0] LEGUP_F_main_BB_if_else114_176 = 9'd176;
parameter [8:0] LEGUP_F_main_BB_if_else114_177 = 9'd177;
parameter [8:0] LEGUP_F_main_BB_if_else114_178 = 9'd178;
parameter [8:0] LEGUP_F_main_BB_if_else114_179 = 9'd179;
parameter [8:0] LEGUP_F_main_BB_if_else114_180 = 9'd180;
parameter [8:0] LEGUP_F_main_BB_if_else114_181 = 9'd181;
parameter [8:0] LEGUP_F_main_BB_if_else114_182 = 9'd182;
parameter [8:0] LEGUP_F_main_BB_if_else114_183 = 9'd183;
parameter [8:0] LEGUP_F_main_BB_if_else114_184 = 9'd184;
parameter [8:0] LEGUP_F_main_BB_if_else114_185 = 9'd185;
parameter [8:0] LEGUP_F_main_BB_if_else114_186 = 9'd186;
parameter [8:0] LEGUP_F_main_BB_if_else114_187 = 9'd187;
parameter [8:0] LEGUP_F_main_BB_if_else114_188 = 9'd188;
parameter [8:0] LEGUP_F_main_BB_if_else114_189 = 9'd189;
parameter [8:0] LEGUP_F_main_BB_if_else114_190 = 9'd190;
parameter [8:0] LEGUP_F_main_BB_if_else114_191 = 9'd191;
parameter [8:0] LEGUP_F_main_BB_if_else114_192 = 9'd192;
parameter [8:0] LEGUP_F_main_BB_if_else114_193 = 9'd193;
parameter [8:0] LEGUP_F_main_BB_if_else114_194 = 9'd194;
parameter [8:0] LEGUP_F_main_BB_if_else114_195 = 9'd195;
parameter [8:0] LEGUP_F_main_BB_if_then116_196 = 9'd196;
parameter [8:0] LEGUP_F_main_BB_if_then116_197 = 9'd197;
parameter [8:0] LEGUP_F_main_BB_if_then116_198 = 9'd198;
parameter [8:0] LEGUP_F_main_BB_if_then116_199 = 9'd199;
parameter [8:0] LEGUP_F_main_BB_if_then116_200 = 9'd200;
parameter [8:0] LEGUP_F_main_BB_if_then116_201 = 9'd201;
parameter [8:0] LEGUP_F_main_BB_if_then116_202 = 9'd202;
parameter [8:0] LEGUP_F_main_BB_if_then116_203 = 9'd203;
parameter [8:0] LEGUP_F_main_BB_if_then116_204 = 9'd204;
parameter [8:0] LEGUP_F_main_BB_if_then116_205 = 9'd205;
parameter [8:0] LEGUP_F_main_BB_if_then116_206 = 9'd206;
parameter [8:0] LEGUP_F_main_BB_if_then116_207 = 9'd207;
parameter [8:0] LEGUP_F_main_BB_if_then116_208 = 9'd208;
parameter [8:0] LEGUP_F_main_BB_if_then116_209 = 9'd209;
parameter [8:0] LEGUP_F_main_BB_if_then116_210 = 9'd210;
parameter [8:0] LEGUP_F_main_BB_if_then116_211 = 9'd211;
parameter [8:0] LEGUP_F_main_BB_if_then116_212 = 9'd212;
parameter [8:0] LEGUP_F_main_BB_if_then116_213 = 9'd213;
parameter [8:0] LEGUP_F_main_BB_if_then116_214 = 9'd214;
parameter [8:0] LEGUP_F_main_BB_if_then116_215 = 9'd215;
parameter [8:0] LEGUP_F_main_BB_if_then116_216 = 9'd216;
parameter [8:0] LEGUP_F_main_BB_if_then116_217 = 9'd217;
parameter [8:0] LEGUP_F_main_BB_if_then116_218 = 9'd218;
parameter [8:0] LEGUP_F_main_BB_if_then116_219 = 9'd219;
parameter [8:0] LEGUP_F_main_BB_if_then116_220 = 9'd220;
parameter [8:0] LEGUP_F_main_BB_if_then116_221 = 9'd221;
parameter [8:0] LEGUP_F_main_BB_if_then116_222 = 9'd222;
parameter [8:0] LEGUP_F_main_BB_if_then116_223 = 9'd223;
parameter [8:0] LEGUP_F_main_BB_if_then116_224 = 9'd224;
parameter [8:0] LEGUP_F_main_BB_if_then116_225 = 9'd225;
parameter [8:0] LEGUP_F_main_BB_if_then116_226 = 9'd226;
parameter [8:0] LEGUP_F_main_BB_if_then116_227 = 9'd227;
parameter [8:0] LEGUP_F_main_BB_if_then116_228 = 9'd228;
parameter [8:0] LEGUP_F_main_BB_if_else127_229 = 9'd229;
parameter [8:0] LEGUP_F_main_BB_if_else127_230 = 9'd230;
parameter [8:0] LEGUP_F_main_BB_if_else127_231 = 9'd231;
parameter [8:0] LEGUP_F_main_BB_if_else127_232 = 9'd232;
parameter [8:0] LEGUP_F_main_BB_if_else127_233 = 9'd233;
parameter [8:0] LEGUP_F_main_BB_if_else127_234 = 9'd234;
parameter [8:0] LEGUP_F_main_BB_if_else127_235 = 9'd235;
parameter [8:0] LEGUP_F_main_BB_if_else127_236 = 9'd236;
parameter [8:0] LEGUP_F_main_BB_if_else127_237 = 9'd237;
parameter [8:0] LEGUP_F_main_BB_if_else127_238 = 9'd238;
parameter [8:0] LEGUP_F_main_BB_if_else127_239 = 9'd239;
parameter [8:0] LEGUP_F_main_BB_if_else127_240 = 9'd240;
parameter [8:0] LEGUP_F_main_BB_if_else127_241 = 9'd241;
parameter [8:0] LEGUP_F_main_BB_if_else127_242 = 9'd242;
parameter [8:0] LEGUP_F_main_BB_if_else127_243 = 9'd243;
parameter [8:0] LEGUP_F_main_BB_if_else127_244 = 9'd244;
parameter [8:0] LEGUP_F_main_BB_if_else127_245 = 9'd245;
parameter [8:0] LEGUP_F_main_BB_if_else127_246 = 9'd246;
parameter [8:0] LEGUP_F_main_BB_if_else127_247 = 9'd247;
parameter [8:0] LEGUP_F_main_BB_if_else127_248 = 9'd248;
parameter [8:0] LEGUP_F_main_BB_if_else127_249 = 9'd249;
parameter [8:0] LEGUP_F_main_BB_if_else127_250 = 9'd250;
parameter [8:0] LEGUP_F_main_BB_if_else127_251 = 9'd251;
parameter [8:0] LEGUP_F_main_BB_if_else127_252 = 9'd252;
parameter [8:0] LEGUP_F_main_BB_if_else127_253 = 9'd253;
parameter [8:0] LEGUP_F_main_BB_if_else127_254 = 9'd254;
parameter [8:0] LEGUP_F_main_BB_if_else127_255 = 9'd255;
parameter [8:0] LEGUP_F_main_BB_if_else127_256 = 9'd256;
parameter [8:0] LEGUP_F_main_BB_if_else127_257 = 9'd257;
parameter [8:0] LEGUP_F_main_BB_if_else127_258 = 9'd258;
parameter [8:0] LEGUP_F_main_BB_if_else127_259 = 9'd259;
parameter [8:0] LEGUP_F_main_BB_if_else127_260 = 9'd260;
parameter [8:0] LEGUP_F_main_BB_if_else127_261 = 9'd261;
parameter [8:0] LEGUP_F_main_BB_if_else141_262 = 9'd262;
parameter [8:0] LEGUP_F_main_BB_if_then143_263 = 9'd263;
parameter [8:0] LEGUP_F_main_BB_if_then143_264 = 9'd264;
parameter [8:0] LEGUP_F_main_BB_if_then143_265 = 9'd265;
parameter [8:0] LEGUP_F_main_BB_NodeBlock16_266 = 9'd266;
parameter [8:0] LEGUP_F_main_BB_LeafBlock14_267 = 9'd267;
parameter [8:0] LEGUP_F_main_BB_LeafBlock12_268 = 9'd268;
parameter [8:0] LEGUP_F_main_BB_if_then150_269 = 9'd269;
parameter [8:0] LEGUP_F_main_BB_if_then150_270 = 9'd270;
parameter [8:0] LEGUP_F_main_BB_if_then150_271 = 9'd271;
parameter [8:0] LEGUP_F_main_BB_if_then157_272 = 9'd272;
parameter [8:0] LEGUP_F_main_BB_if_then157_273 = 9'd273;
parameter [8:0] LEGUP_F_main_BB_if_then157_274 = 9'd274;
parameter [8:0] LEGUP_F_main_BB_if_else162_275 = 9'd275;
parameter [8:0] LEGUP_F_main_BB_if_else162_276 = 9'd276;
parameter [8:0] LEGUP_F_main_BB_if_else162_277 = 9'd277;
parameter [8:0] LEGUP_F_main_BB_if_end170_278 = 9'd278;
parameter [8:0] LEGUP_F_main_BB_if_end170_279 = 9'd279;
parameter [8:0] LEGUP_F_main_BB_if_end170_280 = 9'd280;
parameter [8:0] LEGUP_F_main_BB_if_then182_281 = 9'd281;
parameter [8:0] LEGUP_F_main_BB_if_then182_282 = 9'd282;
parameter [8:0] LEGUP_F_main_BB_if_else187_283 = 9'd283;
parameter [8:0] LEGUP_F_main_BB_if_then189_284 = 9'd284;
parameter [8:0] LEGUP_F_main_BB_if_end192_285 = 9'd285;
parameter [8:0] LEGUP_F_main_BB_sw_bb197_286 = 9'd286;
parameter [8:0] LEGUP_F_main_BB_if_then199_287 = 9'd287;
parameter [8:0] LEGUP_F_main_BB_if_end201_288 = 9'd288;
parameter [8:0] LEGUP_F_main_BB_if_end201_289 = 9'd289;
parameter [8:0] LEGUP_F_main_BB_if_end201_290 = 9'd290;
parameter [8:0] LEGUP_F_main_BB_if_end201_291 = 9'd291;
parameter [8:0] LEGUP_F_main_BB_if_end201_292 = 9'd292;
parameter [8:0] LEGUP_F_main_BB_if_end201_293 = 9'd293;
parameter [8:0] LEGUP_F_main_BB_if_end201_294 = 9'd294;
parameter [8:0] LEGUP_F_main_BB_if_end201_295 = 9'd295;
parameter [8:0] LEGUP_F_main_BB_if_end201_296 = 9'd296;
parameter [8:0] LEGUP_F_main_BB_if_end201_297 = 9'd297;
parameter [8:0] LEGUP_F_main_BB_if_end201_298 = 9'd298;
parameter [8:0] LEGUP_F_main_BB_if_end201_299 = 9'd299;
parameter [8:0] LEGUP_F_main_BB_if_end201_300 = 9'd300;
parameter [8:0] LEGUP_F_main_BB_if_end201_301 = 9'd301;
parameter [8:0] LEGUP_F_main_BB_if_end201_302 = 9'd302;
parameter [8:0] LEGUP_F_main_BB_if_end201_303 = 9'd303;
parameter [8:0] LEGUP_F_main_BB_if_end201_304 = 9'd304;
parameter [8:0] LEGUP_F_main_BB_if_end201_305 = 9'd305;
parameter [8:0] LEGUP_F_main_BB_if_end201_306 = 9'd306;
parameter [8:0] LEGUP_F_main_BB_if_end201_307 = 9'd307;
parameter [8:0] LEGUP_F_main_BB_if_end201_308 = 9'd308;
parameter [8:0] LEGUP_F_main_BB_if_end201_309 = 9'd309;
parameter [8:0] LEGUP_F_main_BB_if_end201_310 = 9'd310;
parameter [8:0] LEGUP_F_main_BB_if_end201_311 = 9'd311;
parameter [8:0] LEGUP_F_main_BB_if_end201_312 = 9'd312;
parameter [8:0] LEGUP_F_main_BB_if_end201_313 = 9'd313;
parameter [8:0] LEGUP_F_main_BB_if_end201_314 = 9'd314;
parameter [8:0] LEGUP_F_main_BB_if_end201_315 = 9'd315;
parameter [8:0] LEGUP_F_main_BB_if_end201_316 = 9'd316;
parameter [8:0] LEGUP_F_main_BB_if_end201_317 = 9'd317;
parameter [8:0] LEGUP_F_main_BB_if_end201_318 = 9'd318;
parameter [8:0] LEGUP_F_main_BB_if_end201_319 = 9'd319;
parameter [8:0] LEGUP_F_main_BB_if_end201_320 = 9'd320;
parameter [8:0] LEGUP_F_main_BB_NodeBlock23_321 = 9'd321;
parameter [8:0] LEGUP_F_main_BB_LeafBlock21_322 = 9'd322;
parameter [8:0] LEGUP_F_main_BB_LeafBlock19_323 = 9'd323;
parameter [8:0] LEGUP_F_main_BB_if_then206_324 = 9'd324;
parameter [8:0] LEGUP_F_main_BB_if_then213_325 = 9'd325;
parameter [8:0] LEGUP_F_main_BB_if_then220_326 = 9'd326;
parameter [8:0] LEGUP_F_main_BB_if_else225_327 = 9'd327;
parameter [8:0] LEGUP_F_main_BB_if_end232_328 = 9'd328;
parameter [8:0] LEGUP_F_main_BB_if_end232_329 = 9'd329;
parameter [8:0] LEGUP_F_main_BB_if_end232_330 = 9'd330;
parameter [8:0] LEGUP_F_main_BB_if_end232_331 = 9'd331;
parameter [8:0] LEGUP_F_main_BB_if_end232_332 = 9'd332;
parameter [8:0] LEGUP_F_main_BB_if_then245_333 = 9'd333;
parameter [8:0] LEGUP_F_main_BB_if_then245_334 = 9'd334;
parameter [8:0] LEGUP_F_main_BB_if_else251_335 = 9'd335;
parameter [8:0] LEGUP_F_main_BB_if_then253_336 = 9'd336;
parameter [8:0] LEGUP_F_main_BB_sw_bb262_337 = 9'd337;
parameter [8:0] LEGUP_F_main_BB_if_end265_338 = 9'd338;
parameter [8:0] LEGUP_F_main_BB_if_end265_339 = 9'd339;
parameter [8:0] LEGUP_F_main_BB_if_end265_340 = 9'd340;
parameter [8:0] LEGUP_F_main_BB_if_end265_341 = 9'd341;
parameter [8:0] LEGUP_F_main_BB_if_end265_342 = 9'd342;
parameter [8:0] LEGUP_F_main_BB_if_end265_343 = 9'd343;
parameter [8:0] LEGUP_F_main_BB_if_end265_344 = 9'd344;
parameter [8:0] LEGUP_F_main_BB_if_end265_345 = 9'd345;
parameter [8:0] LEGUP_F_main_BB_if_end265_346 = 9'd346;
parameter [8:0] LEGUP_F_main_BB_if_end265_347 = 9'd347;
parameter [8:0] LEGUP_F_main_BB_if_end265_348 = 9'd348;
parameter [8:0] LEGUP_F_main_BB_if_end265_349 = 9'd349;
parameter [8:0] LEGUP_F_main_BB_if_end265_350 = 9'd350;
parameter [8:0] LEGUP_F_main_BB_if_end265_351 = 9'd351;
parameter [8:0] LEGUP_F_main_BB_if_end265_352 = 9'd352;
parameter [8:0] LEGUP_F_main_BB_if_end265_353 = 9'd353;
parameter [8:0] LEGUP_F_main_BB_if_end265_354 = 9'd354;
parameter [8:0] LEGUP_F_main_BB_if_end265_355 = 9'd355;
parameter [8:0] LEGUP_F_main_BB_if_end265_356 = 9'd356;
parameter [8:0] LEGUP_F_main_BB_if_end265_357 = 9'd357;
parameter [8:0] LEGUP_F_main_BB_if_end265_358 = 9'd358;
parameter [8:0] LEGUP_F_main_BB_if_end265_359 = 9'd359;
parameter [8:0] LEGUP_F_main_BB_if_end265_360 = 9'd360;
parameter [8:0] LEGUP_F_main_BB_if_end265_361 = 9'd361;
parameter [8:0] LEGUP_F_main_BB_if_end265_362 = 9'd362;
parameter [8:0] LEGUP_F_main_BB_if_end265_363 = 9'd363;
parameter [8:0] LEGUP_F_main_BB_if_end265_364 = 9'd364;
parameter [8:0] LEGUP_F_main_BB_if_end265_365 = 9'd365;
parameter [8:0] LEGUP_F_main_BB_if_end265_366 = 9'd366;
parameter [8:0] LEGUP_F_main_BB_if_end265_367 = 9'd367;
parameter [8:0] LEGUP_F_main_BB_if_end265_368 = 9'd368;
parameter [8:0] LEGUP_F_main_BB_if_end265_369 = 9'd369;
parameter [8:0] LEGUP_F_main_BB_if_end265_370 = 9'd370;
parameter [8:0] LEGUP_F_main_BB_if_end265_371 = 9'd371;
parameter [8:0] LEGUP_F_main_BB_if_end265_372 = 9'd372;
parameter [8:0] LEGUP_F_main_BB_if_end265_373 = 9'd373;
parameter [8:0] LEGUP_F_main_BB_if_end265_374 = 9'd374;
parameter [8:0] LEGUP_F_main_BB_cleanup_375 = 9'd375;

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
output  memory_controller_1_write_enable_a;
output [63:0] memory_controller_1_in_a;
output reg  memory_controller_1_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_a;
output reg [1:0] memory_controller_1_size_a;
input [63:0] memory_controller_1_out_a;
output  memory_controller_1_write_enable_b;
output [63:0] memory_controller_1_in_b;
output  memory_controller_1_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_b;
output [1:0] memory_controller_1_size_b;
input [63:0] memory_controller_1_out_b;
output  memory_controller_0_write_enable_a;
output [63:0] memory_controller_0_in_a;
output reg  memory_controller_0_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_a;
output reg [1:0] memory_controller_0_size_a;
input [63:0] memory_controller_0_out_a;
output  memory_controller_0_write_enable_b;
output [63:0] memory_controller_0_in_b;
output  memory_controller_0_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_b;
output [1:0] memory_controller_0_size_b;
input [63:0] memory_controller_0_out_b;
reg [8:0] cur_state/* synthesis syn_encoding="onehot" */;
reg [8:0] next_state;
wire  fsm_stall;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1490_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1490_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla489_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla489_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1519;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1519_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2520;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2520_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3521;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3521_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_1_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_2_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_3_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_15_reg;
reg [31:0] main_NodeBlock9_state_0;
reg [31:0] main_NodeBlock9_state_0_reg;
reg [31:0] main_NodeBlock9_i_0;
reg [31:0] main_NodeBlock9_i_0_reg;
reg [31:0] main_NodeBlock9_j_0;
reg [31:0] main_NodeBlock9_j_0_reg;
reg [31:0] main_NodeBlock9_a_0;
reg [31:0] main_NodeBlock9_a_0_reg;
reg [31:0] main_NodeBlock9_b_0;
reg [31:0] main_NodeBlock9_b_0_reg;
reg [31:0] main_NodeBlock9_pos_a_X_0;
reg [31:0] main_NodeBlock9_pos_a_X_0_reg;
reg [31:0] main_NodeBlock9_pos_a_Y_0;
reg [31:0] main_NodeBlock9_pos_a_Y_0_reg;
reg [31:0] main_NodeBlock9_pos_b_X_0;
reg [31:0] main_NodeBlock9_pos_b_X_0_reg;
reg [31:0] main_NodeBlock9_pos_b_Y_0;
reg [31:0] main_NodeBlock9_pos_b_Y_0_reg;
reg [31:0] main_NodeBlock9_sum_mesh_0;
reg [31:0] main_NodeBlock9_sum_mesh_0_reg;
reg [31:0] main_NodeBlock9_sum_1hop_0;
reg [31:0] main_NodeBlock9_sum_1hop_0_reg;
reg [31:0] main_NodeBlock9_seed_0;
reg [31:0] main_NodeBlock9_seed_0_reg;
reg  main_NodeBlock9_Pivot10;
reg  main_NodeBlock7_Pivot8;
reg  main_NodeBlock5_Pivot6;
reg  main_LeafBlock3_SwitchLeaf4;
reg [31:0] main_NodeBlock9_backedge_state_0_be;
reg [31:0] main_NodeBlock9_backedge_state_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_i_0_be;
reg [31:0] main_NodeBlock9_backedge_i_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_j_0_be;
reg [31:0] main_NodeBlock9_backedge_j_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_a_0_be;
reg [31:0] main_NodeBlock9_backedge_a_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_b_0_be;
reg [31:0] main_NodeBlock9_backedge_b_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_seed_0_be;
reg [31:0] main_NodeBlock9_backedge_seed_0_be_reg;
reg  main_NodeBlock1_Pivot2;
reg  main_NodeBlock_Pivot;
reg  main_LeafBlock_SwitchLeaf;
reg [31:0] main_for_cond292_preheader_0;
reg [31:0] main_for_cond292_preheader_1;
reg [31:0] main_for_cond292_preheader_2;
reg [31:0] main_for_cond292_preheader_3;
reg [31:0] main_for_cond292_preheader_4;
reg [31:0] main_for_cond292_preheader_5;
reg [31:0] main_for_cond292_preheader_6;
reg [31:0] main_for_cond292_preheader_7;
reg [31:0] main_for_cond292_preheader_8;
reg [31:0] main_for_cond292_preheader_9;
reg [31:0] main_for_cond292_preheader_10;
reg [31:0] main_for_cond292_preheader_11;
reg [31:0] main_for_cond292_preheader_12;
reg [31:0] main_for_cond292_preheader_13;
reg [31:0] main_for_cond292_preheader_14;
reg [31:0] main_for_cond292_preheader_15;
reg [31:0] main_sw_bb_sub_i;
reg [31:0] main_sw_bb_xor2_i;
reg [3:0] main_sw_bb_rem;
reg [29:0] main_sw_bb_bit_select5;
reg [31:0] main_sw_bb_xor2_i16;
reg [31:0] main_sw_bb_xor2_i16_reg;
reg [3:0] main_sw_bb_rem62;
reg [3:0] main_sw_bb_rem62_reg;
reg [31:0] main_sw_bb_add64;
reg [31:0] main_sw_bb_add64_reg;
reg [31:0] main_sw_bb_bit_concat6;
reg [31:0] main_sw_bb_bit_concat6_reg;
reg [31:0] main_sw_bb_arrayidx67_sum;
reg [31:0] main_sw_bb_arrayidx67_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_sw_bb_arrayidx68;
reg  main_sw_bb69_cmp70;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx71;
reg [31:0] main_if_end_16;
reg [31:0] main_if_end_16_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx72;
reg [31:0] main_if_end_17;
reg [31:0] main_if_end_17_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx73;
reg [31:0] main_if_end_18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx74;
reg [31:0] main_if_end_19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx75;
reg [31:0] main_if_end_20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx76;
reg [31:0] main_if_end_21;
reg  main_if_end_cmp77;
reg [1:0] main_if_end_1;
reg [1:0] main_if_end_1_reg;
reg  main_sw_bb80_cmp81;
reg [31:0] main_if_end83_sub_i14;
reg [31:0] main_if_end83_xor2_i15;
reg [3:0] main_if_end83_rem85;
reg [3:0] main_if_end83_rem85_reg;
reg [31:0] main_if_end83_add86;
reg [31:0] main_if_end83_add86_reg;
reg  main_if_end83_cmp87;
reg  main_if_end83_cmp87_reg;
reg  main_if_end83_cmp89;
reg  main_if_end83_cmp89_reg;
reg [31:0] main_if_then90_xor2_i13;
reg [3:0] main_if_then90_rem92;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then90_arrayidx93;
reg [31:0] main_if_then90_22;
reg [31:0] main_if_then90_22_reg;
reg [31:0] main_if_then90_add94;
reg [31:0] main_if_then90_add94_reg;
reg [31:0] main_if_then90_xor2_i12;
reg [31:0] main_if_then90_xor2_i12_reg;
reg [3:0] main_if_then90_rem97;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then90_arrayidx98;
reg [31:0] main_if_then90_23;
reg [31:0] main_if_then90_23_reg;
reg [31:0] main_if_then90_add99;
reg [31:0] main_if_then90_add100;
reg [31:0] main_if_then90_add100_reg;
reg  main_if_else101_cmp102;
reg [31:0] main_if_then103_xor2_i10;
reg [3:0] main_if_then103_rem105;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then103_arrayidx106;
reg [31:0] main_if_then103_24;
reg [31:0] main_if_then103_24_reg;
reg [31:0] main_if_then103_add107;
reg [31:0] main_if_then103_add107_reg;
reg [31:0] main_if_then103_xor2_i9;
reg [31:0] main_if_then103_xor2_i9_reg;
reg [3:0] main_if_then103_rem110;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then103_arrayidx111;
reg [31:0] main_if_then103_25;
reg [31:0] main_if_then103_25_reg;
reg [31:0] main_if_then103_add112;
reg [31:0] main_if_then103_add113;
reg [31:0] main_if_then103_add113_reg;
reg  main_if_else114_cmp115;
reg  main_if_else114_cmp115_reg;
reg [31:0] main_if_else114_xor2_i7;
reg [3:0] main_if_else114_rem118;
reg [3:0] main_if_else114_rem118_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then116_arrayidx119;
reg [31:0] main_if_then116_26;
reg [31:0] main_if_then116_add120;
reg [31:0] main_if_then116_add120_reg;
reg [31:0] main_if_then116_xor2_i6;
reg [3:0] main_if_then116_rem123;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then116_arrayidx124;
reg [31:0] main_if_then116_27;
reg [31:0] main_if_then116_27_reg;
reg [31:0] main_if_then116_add125;
reg [31:0] main_if_then116_add126;
reg [31:0] main_if_then116_add126_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else127_arrayidx130;
reg [31:0] main_if_else127_28;
reg [31:0] main_if_else127_add131;
reg [31:0] main_if_else127_add131_reg;
reg [31:0] main_if_else127_xor2_i4;
reg [3:0] main_if_else127_rem134;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else127_arrayidx135;
reg [31:0] main_if_else127_29;
reg [31:0] main_if_else127_29_reg;
reg [31:0] main_if_else127_add136;
reg [31:0] main_if_else127_add137;
reg [31:0] main_if_else127_add137_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then143_arrayidx144;
reg [31:0] main_if_then143_30;
reg [31:0] main_if_then143_add145;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then143_arrayidx146;
reg [31:0] main_if_then143_31;
reg [31:0] main_if_then143_add147;
reg  main_NodeBlock16_Pivot17;
reg  main_LeafBlock14_SwitchLeaf15;
reg  main_LeafBlock12_SwitchLeaf13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then150_arrayidx151;
reg [31:0] main_if_then150_32;
reg [31:0] main_if_then150_add152;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then150_arrayidx153;
reg [31:0] main_if_then150_33;
reg [31:0] main_if_then150_add154;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then157_arrayidx158;
reg [31:0] main_if_then157_34;
reg [31:0] main_if_then157_add159;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then157_arrayidx160;
reg [31:0] main_if_then157_35;
reg [31:0] main_if_then157_add161;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else162_arrayidx163;
reg [31:0] main_if_else162_36;
reg [31:0] main_if_else162_add164;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else162_arrayidx165;
reg [31:0] main_if_else162_37;
reg [31:0] main_if_else162_add166;
reg [31:0] main_if_end170_xi_0;
reg [31:0] main_if_end170_xi_0_reg;
reg [31:0] main_if_end170_xj_0;
reg [31:0] main_if_end170_xj_0_reg;
reg [31:0] main_if_end170_seed_1;
reg [31:0] main_if_end170_seed_1_reg;
reg [29:0] main_if_end170_bit_select3;
reg [31:0] main_if_end170_inc171;
reg [31:0] main_if_end170_inc171_reg;
reg [31:0] main_if_end170_bit_concat4;
reg [31:0] main_if_end170_arrayidx172_sum;
reg [31:0] main_if_end170_arrayidx172_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end170_arrayidx173;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end170_arrayidx173_reg;
reg [31:0] main_if_end170_38;
reg  main_if_end170_cmp174;
reg  main_if_end170_39;
reg  main_if_end170_39_reg;
reg  main_if_end170_or_cond;
reg  main_if_end170_40;
reg  main_if_end170_40_reg;
reg  main_if_end170_or_cond495;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then182_arrayidx185;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then182_arrayidx186;
reg  main_if_else187_cmp188;
reg [31:0] main_if_end192_pos_a_X_1;
reg [31:0] main_if_end192_pos_a_X_1_reg;
reg [31:0] main_if_end192_pos_a_Y_1;
reg [31:0] main_if_end192_pos_a_Y_1_reg;
reg  main_if_end192_cmp193;
reg [1:0] main_if_end192_496;
reg [31:0] main_if_end192_inc171_1;
reg  main_sw_bb197_cmp198;
reg [31:0] main_if_then199_inc200;
reg [31:0] main_if_end201_sub_i1;
reg [31:0] main_if_end201_xor2_i2;
reg [3:0] main_if_end201_rem203;
reg [3:0] main_if_end201_rem203_reg;
reg [31:0] main_if_end201_add204;
reg [31:0] main_if_end201_add204_reg;
reg  main_if_end201_Pivot26;
reg  main_NodeBlock23_Pivot24;
reg  main_LeafBlock21_SwitchLeaf22;
reg  main_LeafBlock19_SwitchLeaf20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then206_arrayidx207;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then206_arrayidx209;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then213_arrayidx214;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then213_arrayidx216;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then220_arrayidx221;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then220_arrayidx223;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else225_arrayidx226;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else225_arrayidx228;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end232_pn_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end232_pn_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end232_pn494_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end232_pn494_in_reg;
reg [31:0] main_if_end232_pn494;
reg [31:0] main_if_end232_pn;
reg [31:0] main_if_end232_xj_1;
reg [31:0] main_if_end232_xj_1_reg;
reg [31:0] main_if_end232_xi_1;
reg [31:0] main_if_end232_xi_1_reg;
reg [29:0] main_if_end232_bit_select2;
reg [31:0] main_if_end232_bit_concat;
reg [31:0] main_if_end232_arrayidx234_sum;
reg [31:0] main_if_end232_arrayidx234_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end232_arrayidx235;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end232_arrayidx235_reg;
reg [31:0] main_if_end232_41;
reg  main_if_end232_cmp236;
reg  main_if_end232_42;
reg  main_if_end232_42_reg;
reg  main_if_end232_or_cond497;
reg  main_if_end232_43;
reg  main_if_end232_43_reg;
reg  main_if_end232_or_cond498;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then245_arrayidx248;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then245_arrayidx249;
reg [31:0] main_if_then245_inc250;
reg [31:0] main_if_then245_inc250_reg;
reg [31:0] main_if_else251_inc233;
reg  main_if_else251_cmp252;
reg  main_sw_bb262_cmp263;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end265_arrayidx266;
reg [31:0] main_if_end265_44;
reg [31:0] main_if_end265_44_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end265_arrayidx267;
reg [31:0] main_if_end265_45;
reg [31:0] main_if_end265_45_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end265_arrayidx268;
reg [31:0] main_if_end265_46;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end265_arrayidx269;
reg [31:0] main_if_end265_47;
reg [31:0] main_if_end265_sub;
reg [31:0] main_if_end265_sub_reg;
reg  main_if_end265_bit_select1;
reg  main_if_end265_bit_select1_reg;
reg [31:0] main_if_end265_mul;
reg [31:0] main_if_end265_mul_reg;
reg [31:0] main_if_end265_mul_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end265_arrayidx273;
reg [31:0] main_if_end265_48;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end265_arrayidx274;
reg [31:0] main_if_end265_49;
reg [31:0] main_if_end265_sub275;
reg [31:0] main_if_end265_sub275_reg;
reg  main_if_end265_bit_select;
reg  main_if_end265_bit_select_reg;
reg [31:0] main_if_end265_mul278;
reg [31:0] main_if_end265_mul278_reg;
reg [31:0] main_if_end265_diff_pos_y_0;
reg [31:0] main_if_end265_diff_pos_y_0_reg;
reg [31:0] main_if_end265_add280;
reg [31:0] main_if_end265_add280_reg;
reg [31:0] main_if_end265_newEarly_add282;
reg [31:0] main_if_end265_newEarly_add282_reg;
reg [31:0] main_if_end265_newCurOp_add282;
reg [31:0] main_if_end265_newCurOp_add282_reg;
reg [30:0] main_if_end265_div;
reg [3:0] main_if_end265_rem283;
reg [3:0] main_if_end265_rem283_reg;
reg [30:0] main_if_end265_div285;
reg [3:0] main_if_end265_rem286;
reg [31:0] main_if_end265_add287;
reg [31:0] main_if_end265_add287_reg;
reg [31:0] main_if_end265_newEarly_add288;
reg [31:0] main_if_end265_newEarly_add288_reg;
reg [31:0] main_if_end265_newEarly_sub289;
reg [31:0] main_if_end265_newEarly_add290;
reg [31:0] main_if_end265_newCurOp_add290;
reg [31:0] main_if_end265_inc291;
reg [31:0] main_if_end265_inc291_reg;
reg  main_cleanup_retval_0;
reg  main_cleanup_retval_0_reg;
reg [4:0] main_entry_vla489_address_a;
reg  main_entry_vla489_write_enable_a;
reg [31:0] main_entry_vla489_in_a;
wire [31:0] main_entry_vla489_out_a;
reg [4:0] main_entry_vla489_address_b;
reg  main_entry_vla489_write_enable_b;
reg [31:0] main_entry_vla489_in_b;
wire [31:0] main_entry_vla489_out_b;
reg [4:0] main_entry_vla1490_address_a;
reg  main_entry_vla1490_write_enable_a;
reg [31:0] main_entry_vla1490_in_a;
wire [31:0] main_entry_vla1490_out_a;
reg [4:0] main_entry_vla1490_address_b;
reg  main_entry_vla1490_write_enable_b;
reg [31:0] main_entry_vla1490_in_b;
wire [31:0] main_entry_vla1490_out_b;
reg [3:0] main_entry_vla2491_address_a;
reg  main_entry_vla2491_write_enable_a;
reg [31:0] main_entry_vla2491_in_a;
wire [31:0] main_entry_vla2491_out_a;
reg [3:0] main_entry_vla2491_address_b;
reg  main_entry_vla2491_write_enable_b;
reg [31:0] main_entry_vla2491_in_b;
wire [31:0] main_entry_vla2491_out_b;
reg [3:0] main_entry_vla3492_address_a;
reg  main_entry_vla3492_write_enable_a;
reg [31:0] main_entry_vla3492_in_a;
wire [31:0] main_entry_vla3492_out_a;
reg [3:0] main_entry_vla3492_address_b;
reg  main_entry_vla3492_write_enable_b;
reg [31:0] main_entry_vla3492_in_b;
wire [31:0] main_entry_vla3492_out_b;
reg [3:0] main_entry_vla4493_address_a;
reg  main_entry_vla4493_write_enable_a;
reg [31:0] main_entry_vla4493_in_a;
wire [31:0] main_entry_vla4493_out_a;
reg [3:0] main_entry_vla4493_address_b;
reg  main_entry_vla4493_write_enable_b;
reg [31:0] main_entry_vla4493_in_b;
wire [31:0] main_entry_vla4493_out_b;
reg [31:0] main_signed_divide_32_0_op0;
reg [3:0] main_signed_divide_32_0_op1;
reg  main_signed_divide_32_0_inst_clock;
reg  main_signed_divide_32_0_inst_aclr;
reg  main_signed_divide_32_0_inst_clken;
reg [31:0] main_signed_divide_32_0_inst_numer;
reg [3:0] main_signed_divide_32_0_inst_denom;
wire [31:0] main_signed_divide_32_0_inst_quotient;
wire [3:0] main_signed_divide_32_0_inst_remain;
reg [31:0] divide_main_if_end265_div_temp_out;
reg  divide_main_if_end265_div_en;
reg [30:0] divide_main_if_end265_div_out;
reg [30:0] main_signed_divide_32_0;
reg [31:0] main_signed_modulus_32_0_op0;
reg [4:0] main_signed_modulus_32_0_op1;
reg  main_signed_modulus_32_0_inst_clock;
reg  main_signed_modulus_32_0_inst_aclr;
reg  main_signed_modulus_32_0_inst_clken;
reg [31:0] main_signed_modulus_32_0_inst_numer;
reg [4:0] main_signed_modulus_32_0_inst_denom;
wire [31:0] main_signed_modulus_32_0_inst_quotient;
wire [4:0] main_signed_modulus_32_0_inst_remain;
reg [4:0] divide_main_if_end265_rem283_temp_out;
reg  divide_main_if_end265_rem283_en;
reg [3:0] divide_main_if_end265_rem283_out;
reg [3:0] main_signed_modulus_32_0;
wire [3:0] main_NodeBlock9_Pivot10_op1_temp;
wire [4:0] main_NodeBlock7_Pivot8_op1_temp;
wire [4:0] main_NodeBlock5_Pivot6_op1_temp;
wire [2:0] main_NodeBlock1_Pivot2_op1_temp;
wire [3:0] main_NodeBlock_Pivot_op1_temp;
reg [29:0] main_sw_bb_rem_width_extended;
wire [1:0] main_sw_bb_bit_concat6_bit_select_operand_2;
wire [3:0] main_NodeBlock16_Pivot17_op1_temp;
wire [1:0] main_if_end170_bit_concat4_bit_select_operand_2;
wire [7:0] main_if_else187_cmp188_op1_temp;
wire [2:0] main_if_end201_Pivot26_op1_temp;
wire [3:0] main_NodeBlock23_Pivot24_op1_temp;
wire [1:0] main_if_end232_bit_concat_bit_select_operand_2;
wire [7:0] main_if_else251_cmp252_op1_temp;

/*   %div = sdiv i32 %mul.sub, 2, !dbg !313, !MSB !133, !LSB !67, !extendFrom !314*/
lpm_divide main_signed_divide_32_0_inst (
	.clock (main_signed_divide_32_0_inst_clock),
	.aclr (main_signed_divide_32_0_inst_aclr),
	.clken (main_signed_divide_32_0_inst_clken),
	.numer (main_signed_divide_32_0_inst_numer),
	.denom (main_signed_divide_32_0_inst_denom),
	.quotient (main_signed_divide_32_0_inst_quotient),
	.remain (main_signed_divide_32_0_inst_remain)
);

defparam
	main_signed_divide_32_0_inst.lpm_widthn = 32,
	main_signed_divide_32_0_inst.lpm_widthd = 4,
	main_signed_divide_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_divide_32_0_inst.lpm_pipeline = 32;

/*   %rem283 = srem i32 %mul.sub, 2, !dbg !313, !MSB !315, !LSB !67, !extendFrom !315*/
lpm_divide main_signed_modulus_32_0_inst (
	.clock (main_signed_modulus_32_0_inst_clock),
	.aclr (main_signed_modulus_32_0_inst_aclr),
	.clken (main_signed_modulus_32_0_inst_clken),
	.numer (main_signed_modulus_32_0_inst_numer),
	.denom (main_signed_modulus_32_0_inst_denom),
	.quotient (main_signed_modulus_32_0_inst_quotient),
	.remain (main_signed_modulus_32_0_inst_remain)
);

defparam
	main_signed_modulus_32_0_inst.lpm_widthn = 32,
	main_signed_modulus_32_0_inst.lpm_widthd = 5,
	main_signed_modulus_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_modulus_32_0_inst.lpm_pipeline = 32;



//   %vla489 = alloca [19 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla489 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla489_address_a ),
	.wren_a( main_entry_vla489_write_enable_a ),
	.data_a( main_entry_vla489_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla489_out_a ),
	.address_b( main_entry_vla489_address_b ),
	.wren_b( main_entry_vla489_write_enable_b ),
	.data_b( main_entry_vla489_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla489_out_b )
);
defparam main_entry_vla489.width_a = 32;
defparam main_entry_vla489.widthad_a = 5;
defparam main_entry_vla489.width_be_a = 4;
defparam main_entry_vla489.numwords_a = 19;
defparam main_entry_vla489.width_b = 32;
defparam main_entry_vla489.widthad_b = 5;
defparam main_entry_vla489.width_be_b = 4;
defparam main_entry_vla489.numwords_b = 19;
defparam main_entry_vla489.latency = 1;


//   %vla1490 = alloca [19 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla1490 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla1490_address_a ),
	.wren_a( main_entry_vla1490_write_enable_a ),
	.data_a( main_entry_vla1490_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla1490_out_a ),
	.address_b( main_entry_vla1490_address_b ),
	.wren_b( main_entry_vla1490_write_enable_b ),
	.data_b( main_entry_vla1490_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla1490_out_b )
);
defparam main_entry_vla1490.width_a = 32;
defparam main_entry_vla1490.widthad_a = 5;
defparam main_entry_vla1490.width_be_a = 4;
defparam main_entry_vla1490.numwords_a = 19;
defparam main_entry_vla1490.width_b = 32;
defparam main_entry_vla1490.widthad_b = 5;
defparam main_entry_vla1490.width_be_b = 4;
defparam main_entry_vla1490.numwords_b = 19;
defparam main_entry_vla1490.latency = 1;


//   %vla2491 = alloca [16 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla2491 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla2491_address_a ),
	.wren_a( main_entry_vla2491_write_enable_a ),
	.data_a( main_entry_vla2491_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla2491_out_a ),
	.address_b( main_entry_vla2491_address_b ),
	.wren_b( main_entry_vla2491_write_enable_b ),
	.data_b( main_entry_vla2491_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla2491_out_b )
);
defparam main_entry_vla2491.width_a = 32;
defparam main_entry_vla2491.widthad_a = 4;
defparam main_entry_vla2491.width_be_a = 4;
defparam main_entry_vla2491.numwords_a = 16;
defparam main_entry_vla2491.width_b = 32;
defparam main_entry_vla2491.widthad_b = 4;
defparam main_entry_vla2491.width_be_b = 4;
defparam main_entry_vla2491.numwords_b = 16;
defparam main_entry_vla2491.latency = 1;


//   %vla3492 = alloca [16 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla3492 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla3492_address_a ),
	.wren_a( main_entry_vla3492_write_enable_a ),
	.data_a( main_entry_vla3492_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla3492_out_a ),
	.address_b( main_entry_vla3492_address_b ),
	.wren_b( main_entry_vla3492_write_enable_b ),
	.data_b( main_entry_vla3492_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla3492_out_b )
);
defparam main_entry_vla3492.width_a = 32;
defparam main_entry_vla3492.widthad_a = 4;
defparam main_entry_vla3492.width_be_a = 4;
defparam main_entry_vla3492.numwords_a = 16;
defparam main_entry_vla3492.width_b = 32;
defparam main_entry_vla3492.widthad_b = 4;
defparam main_entry_vla3492.width_be_b = 4;
defparam main_entry_vla3492.numwords_b = 16;
defparam main_entry_vla3492.latency = 1;


//   %vla4493 = alloca [16 x i32], align 4, !dbg !69, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla4493 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla4493_address_a ),
	.wren_a( main_entry_vla4493_write_enable_a ),
	.data_a( main_entry_vla4493_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla4493_out_a ),
	.address_b( main_entry_vla4493_address_b ),
	.wren_b( main_entry_vla4493_write_enable_b ),
	.data_b( main_entry_vla4493_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla4493_out_b )
);
defparam main_entry_vla4493.width_a = 32;
defparam main_entry_vla4493.widthad_a = 4;
defparam main_entry_vla4493.width_be_a = 4;
defparam main_entry_vla4493.numwords_a = 16;
defparam main_entry_vla4493.width_b = 32;
defparam main_entry_vla4493.widthad_b = 4;
defparam main_entry_vla4493.width_be_b = 4;
defparam main_entry_vla4493.numwords_b = 16;
defparam main_entry_vla4493.latency = 1;

/* Unsynthesizable Statements */
/* synthesis translate_off */
always @(posedge clk)
	if (!fsm_stall) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_11)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_0));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_0) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_11)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_1));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_1) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_12)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_2));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_2) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_12)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_3));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_3) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_12)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_13)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_4));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_4) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_13)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_5));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_5) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_14)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_6));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_6) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_14)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_7));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_7) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_14)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_15)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_8));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_8) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_15)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_9));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_9) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_16)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_10));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_10) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_16)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_11));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_11) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_16)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_17)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_12));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_12) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_17)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_13));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_13) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_18)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_14));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_14) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_18)) begin
		$write("%3d ", $signed(main_for_cond292_preheader_15));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond292_preheader_15) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_18)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_18)) begin
		$write("\nEvaluation = %d\nEvaluation 1-hop = %d\n", $signed(main_NodeBlock9_sum_mesh_0_reg), $signed(main_NodeBlock9_sum_1hop_0_reg));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_mesh_0_reg) === 1'bX) finish <= 0;
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_1hop_0_reg) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then189_284)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_if_then253_336)) begin
		$write("No solution\n");
	end
end
/* synthesis translate_on */
always @(posedge clk) begin
if (reset == 1'b1)
	cur_state <= LEGUP_0;
else if (!fsm_stall)
	cur_state <= next_state;
end

always @(*)
begin
next_state = cur_state;
case(cur_state)  /* synthesis parallel_case */
LEGUP_0:
	if ((fsm_stall == 1'd0) && (start == 1'd1))
		next_state = LEGUP_F_main_BB_entry_1;
LEGUP_F_main_BB_LeafBlock12_268:
	if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then150_269;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else162_275;
LEGUP_F_main_BB_LeafBlock14_267:
	if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then157_272;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else162_275;
LEGUP_F_main_BB_LeafBlock19_323:
	if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then206_324;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else225_327;
LEGUP_F_main_BB_LeafBlock21_322:
	if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then220_326;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else225_327;
LEGUP_F_main_BB_LeafBlock3_5:
	if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond292_preheader_10;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_LeafBlock_9:
	if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb_19;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_NodeBlock16_266:
	if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock12_268;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock14_267;
LEGUP_F_main_BB_NodeBlock1_7:
	if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock_9;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock_8;
LEGUP_F_main_BB_NodeBlock23_321:
	if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then213_325;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock21_322;
LEGUP_F_main_BB_NodeBlock5_4:
	if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb262_337;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock3_5;
LEGUP_F_main_BB_NodeBlock7_3:
	if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb197_286;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock5_4;
LEGUP_F_main_BB_NodeBlock9_2:
	if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock1_7;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock7_3;
LEGUP_F_main_BB_NodeBlock9_backedge_6:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_NodeBlock_8:
	if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb69_55;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd0))
		next_state = LEGUP_F_main_BB_sw_bb80_59;
LEGUP_F_main_BB_cleanup_375:
		next_state = LEGUP_0;
LEGUP_F_main_BB_entry_1:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_for_cond292_preheader_10:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_11;
LEGUP_F_main_BB_for_cond292_preheader_11:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_12;
LEGUP_F_main_BB_for_cond292_preheader_12:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_13;
LEGUP_F_main_BB_for_cond292_preheader_13:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_14;
LEGUP_F_main_BB_for_cond292_preheader_14:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_15;
LEGUP_F_main_BB_for_cond292_preheader_15:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_16;
LEGUP_F_main_BB_for_cond292_preheader_16:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_17;
LEGUP_F_main_BB_for_cond292_preheader_17:
		next_state = LEGUP_F_main_BB_for_cond292_preheader_18;
LEGUP_F_main_BB_for_cond292_preheader_18:
		next_state = LEGUP_F_main_BB_cleanup_375;
LEGUP_F_main_BB_if_else101_128:
	if ((fsm_stall == 1'd0) && (main_if_else101_cmp102 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then103_129;
	else if ((fsm_stall == 1'd0) && (main_if_else101_cmp102 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else114_163;
LEGUP_F_main_BB_if_else114_163:
		next_state = LEGUP_F_main_BB_if_else114_164;
LEGUP_F_main_BB_if_else114_164:
		next_state = LEGUP_F_main_BB_if_else114_165;
LEGUP_F_main_BB_if_else114_165:
		next_state = LEGUP_F_main_BB_if_else114_166;
LEGUP_F_main_BB_if_else114_166:
		next_state = LEGUP_F_main_BB_if_else114_167;
LEGUP_F_main_BB_if_else114_167:
		next_state = LEGUP_F_main_BB_if_else114_168;
LEGUP_F_main_BB_if_else114_168:
		next_state = LEGUP_F_main_BB_if_else114_169;
LEGUP_F_main_BB_if_else114_169:
		next_state = LEGUP_F_main_BB_if_else114_170;
LEGUP_F_main_BB_if_else114_170:
		next_state = LEGUP_F_main_BB_if_else114_171;
LEGUP_F_main_BB_if_else114_171:
		next_state = LEGUP_F_main_BB_if_else114_172;
LEGUP_F_main_BB_if_else114_172:
		next_state = LEGUP_F_main_BB_if_else114_173;
LEGUP_F_main_BB_if_else114_173:
		next_state = LEGUP_F_main_BB_if_else114_174;
LEGUP_F_main_BB_if_else114_174:
		next_state = LEGUP_F_main_BB_if_else114_175;
LEGUP_F_main_BB_if_else114_175:
		next_state = LEGUP_F_main_BB_if_else114_176;
LEGUP_F_main_BB_if_else114_176:
		next_state = LEGUP_F_main_BB_if_else114_177;
LEGUP_F_main_BB_if_else114_177:
		next_state = LEGUP_F_main_BB_if_else114_178;
LEGUP_F_main_BB_if_else114_178:
		next_state = LEGUP_F_main_BB_if_else114_179;
LEGUP_F_main_BB_if_else114_179:
		next_state = LEGUP_F_main_BB_if_else114_180;
LEGUP_F_main_BB_if_else114_180:
		next_state = LEGUP_F_main_BB_if_else114_181;
LEGUP_F_main_BB_if_else114_181:
		next_state = LEGUP_F_main_BB_if_else114_182;
LEGUP_F_main_BB_if_else114_182:
		next_state = LEGUP_F_main_BB_if_else114_183;
LEGUP_F_main_BB_if_else114_183:
		next_state = LEGUP_F_main_BB_if_else114_184;
LEGUP_F_main_BB_if_else114_184:
		next_state = LEGUP_F_main_BB_if_else114_185;
LEGUP_F_main_BB_if_else114_185:
		next_state = LEGUP_F_main_BB_if_else114_186;
LEGUP_F_main_BB_if_else114_186:
		next_state = LEGUP_F_main_BB_if_else114_187;
LEGUP_F_main_BB_if_else114_187:
		next_state = LEGUP_F_main_BB_if_else114_188;
LEGUP_F_main_BB_if_else114_188:
		next_state = LEGUP_F_main_BB_if_else114_189;
LEGUP_F_main_BB_if_else114_189:
		next_state = LEGUP_F_main_BB_if_else114_190;
LEGUP_F_main_BB_if_else114_190:
		next_state = LEGUP_F_main_BB_if_else114_191;
LEGUP_F_main_BB_if_else114_191:
		next_state = LEGUP_F_main_BB_if_else114_192;
LEGUP_F_main_BB_if_else114_192:
		next_state = LEGUP_F_main_BB_if_else114_193;
LEGUP_F_main_BB_if_else114_193:
		next_state = LEGUP_F_main_BB_if_else114_194;
LEGUP_F_main_BB_if_else114_194:
		next_state = LEGUP_F_main_BB_if_else114_195;
LEGUP_F_main_BB_if_else114_195:
	if ((fsm_stall == 1'd0) && (main_if_else114_cmp115_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then116_196;
	else if ((fsm_stall == 1'd0) && (main_if_else114_cmp115_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else127_229;
LEGUP_F_main_BB_if_else127_229:
		next_state = LEGUP_F_main_BB_if_else127_230;
LEGUP_F_main_BB_if_else127_230:
		next_state = LEGUP_F_main_BB_if_else127_231;
LEGUP_F_main_BB_if_else127_231:
		next_state = LEGUP_F_main_BB_if_else127_232;
LEGUP_F_main_BB_if_else127_232:
		next_state = LEGUP_F_main_BB_if_else127_233;
LEGUP_F_main_BB_if_else127_233:
		next_state = LEGUP_F_main_BB_if_else127_234;
LEGUP_F_main_BB_if_else127_234:
		next_state = LEGUP_F_main_BB_if_else127_235;
LEGUP_F_main_BB_if_else127_235:
		next_state = LEGUP_F_main_BB_if_else127_236;
LEGUP_F_main_BB_if_else127_236:
		next_state = LEGUP_F_main_BB_if_else127_237;
LEGUP_F_main_BB_if_else127_237:
		next_state = LEGUP_F_main_BB_if_else127_238;
LEGUP_F_main_BB_if_else127_238:
		next_state = LEGUP_F_main_BB_if_else127_239;
LEGUP_F_main_BB_if_else127_239:
		next_state = LEGUP_F_main_BB_if_else127_240;
LEGUP_F_main_BB_if_else127_240:
		next_state = LEGUP_F_main_BB_if_else127_241;
LEGUP_F_main_BB_if_else127_241:
		next_state = LEGUP_F_main_BB_if_else127_242;
LEGUP_F_main_BB_if_else127_242:
		next_state = LEGUP_F_main_BB_if_else127_243;
LEGUP_F_main_BB_if_else127_243:
		next_state = LEGUP_F_main_BB_if_else127_244;
LEGUP_F_main_BB_if_else127_244:
		next_state = LEGUP_F_main_BB_if_else127_245;
LEGUP_F_main_BB_if_else127_245:
		next_state = LEGUP_F_main_BB_if_else127_246;
LEGUP_F_main_BB_if_else127_246:
		next_state = LEGUP_F_main_BB_if_else127_247;
LEGUP_F_main_BB_if_else127_247:
		next_state = LEGUP_F_main_BB_if_else127_248;
LEGUP_F_main_BB_if_else127_248:
		next_state = LEGUP_F_main_BB_if_else127_249;
LEGUP_F_main_BB_if_else127_249:
		next_state = LEGUP_F_main_BB_if_else127_250;
LEGUP_F_main_BB_if_else127_250:
		next_state = LEGUP_F_main_BB_if_else127_251;
LEGUP_F_main_BB_if_else127_251:
		next_state = LEGUP_F_main_BB_if_else127_252;
LEGUP_F_main_BB_if_else127_252:
		next_state = LEGUP_F_main_BB_if_else127_253;
LEGUP_F_main_BB_if_else127_253:
		next_state = LEGUP_F_main_BB_if_else127_254;
LEGUP_F_main_BB_if_else127_254:
		next_state = LEGUP_F_main_BB_if_else127_255;
LEGUP_F_main_BB_if_else127_255:
		next_state = LEGUP_F_main_BB_if_else127_256;
LEGUP_F_main_BB_if_else127_256:
		next_state = LEGUP_F_main_BB_if_else127_257;
LEGUP_F_main_BB_if_else127_257:
		next_state = LEGUP_F_main_BB_if_else127_258;
LEGUP_F_main_BB_if_else127_258:
		next_state = LEGUP_F_main_BB_if_else127_259;
LEGUP_F_main_BB_if_else127_259:
		next_state = LEGUP_F_main_BB_if_else127_260;
LEGUP_F_main_BB_if_else127_260:
		next_state = LEGUP_F_main_BB_if_else127_261;
LEGUP_F_main_BB_if_else127_261:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_else141_262:
	if ((fsm_stall == 1'd0) && (main_if_end83_cmp89_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then143_263;
	else if ((fsm_stall == 1'd0) && (main_if_end83_cmp89_reg == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock16_266;
LEGUP_F_main_BB_if_else162_275:
		next_state = LEGUP_F_main_BB_if_else162_276;
LEGUP_F_main_BB_if_else162_276:
		next_state = LEGUP_F_main_BB_if_else162_277;
LEGUP_F_main_BB_if_else162_277:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_else187_283:
	if ((fsm_stall == 1'd0) && (main_if_else187_cmp188 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then189_284;
	else if ((fsm_stall == 1'd0) && (main_if_else187_cmp188 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end192_285;
LEGUP_F_main_BB_if_else225_327:
		next_state = LEGUP_F_main_BB_if_end232_328;
LEGUP_F_main_BB_if_else251_335:
	if ((fsm_stall == 1'd0) && (main_if_else251_cmp252 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then253_336;
	else if ((fsm_stall == 1'd0) && (main_if_else251_cmp252 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end170_278:
		next_state = LEGUP_F_main_BB_if_end170_279;
LEGUP_F_main_BB_if_end170_279:
		next_state = LEGUP_F_main_BB_if_end170_280;
LEGUP_F_main_BB_if_end170_280:
	if ((fsm_stall == 1'd0) && (main_if_end170_or_cond495 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then182_281;
	else if ((fsm_stall == 1'd0) && (main_if_end170_or_cond495 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else187_283;
LEGUP_F_main_BB_if_end192_285:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end201_288:
		next_state = LEGUP_F_main_BB_if_end201_289;
LEGUP_F_main_BB_if_end201_289:
		next_state = LEGUP_F_main_BB_if_end201_290;
LEGUP_F_main_BB_if_end201_290:
		next_state = LEGUP_F_main_BB_if_end201_291;
LEGUP_F_main_BB_if_end201_291:
		next_state = LEGUP_F_main_BB_if_end201_292;
LEGUP_F_main_BB_if_end201_292:
		next_state = LEGUP_F_main_BB_if_end201_293;
LEGUP_F_main_BB_if_end201_293:
		next_state = LEGUP_F_main_BB_if_end201_294;
LEGUP_F_main_BB_if_end201_294:
		next_state = LEGUP_F_main_BB_if_end201_295;
LEGUP_F_main_BB_if_end201_295:
		next_state = LEGUP_F_main_BB_if_end201_296;
LEGUP_F_main_BB_if_end201_296:
		next_state = LEGUP_F_main_BB_if_end201_297;
LEGUP_F_main_BB_if_end201_297:
		next_state = LEGUP_F_main_BB_if_end201_298;
LEGUP_F_main_BB_if_end201_298:
		next_state = LEGUP_F_main_BB_if_end201_299;
LEGUP_F_main_BB_if_end201_299:
		next_state = LEGUP_F_main_BB_if_end201_300;
LEGUP_F_main_BB_if_end201_300:
		next_state = LEGUP_F_main_BB_if_end201_301;
LEGUP_F_main_BB_if_end201_301:
		next_state = LEGUP_F_main_BB_if_end201_302;
LEGUP_F_main_BB_if_end201_302:
		next_state = LEGUP_F_main_BB_if_end201_303;
LEGUP_F_main_BB_if_end201_303:
		next_state = LEGUP_F_main_BB_if_end201_304;
LEGUP_F_main_BB_if_end201_304:
		next_state = LEGUP_F_main_BB_if_end201_305;
LEGUP_F_main_BB_if_end201_305:
		next_state = LEGUP_F_main_BB_if_end201_306;
LEGUP_F_main_BB_if_end201_306:
		next_state = LEGUP_F_main_BB_if_end201_307;
LEGUP_F_main_BB_if_end201_307:
		next_state = LEGUP_F_main_BB_if_end201_308;
LEGUP_F_main_BB_if_end201_308:
		next_state = LEGUP_F_main_BB_if_end201_309;
LEGUP_F_main_BB_if_end201_309:
		next_state = LEGUP_F_main_BB_if_end201_310;
LEGUP_F_main_BB_if_end201_310:
		next_state = LEGUP_F_main_BB_if_end201_311;
LEGUP_F_main_BB_if_end201_311:
		next_state = LEGUP_F_main_BB_if_end201_312;
LEGUP_F_main_BB_if_end201_312:
		next_state = LEGUP_F_main_BB_if_end201_313;
LEGUP_F_main_BB_if_end201_313:
		next_state = LEGUP_F_main_BB_if_end201_314;
LEGUP_F_main_BB_if_end201_314:
		next_state = LEGUP_F_main_BB_if_end201_315;
LEGUP_F_main_BB_if_end201_315:
		next_state = LEGUP_F_main_BB_if_end201_316;
LEGUP_F_main_BB_if_end201_316:
		next_state = LEGUP_F_main_BB_if_end201_317;
LEGUP_F_main_BB_if_end201_317:
		next_state = LEGUP_F_main_BB_if_end201_318;
LEGUP_F_main_BB_if_end201_318:
		next_state = LEGUP_F_main_BB_if_end201_319;
LEGUP_F_main_BB_if_end201_319:
		next_state = LEGUP_F_main_BB_if_end201_320;
LEGUP_F_main_BB_if_end201_320:
	if ((fsm_stall == 1'd0) && (main_if_end201_Pivot26 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock19_323;
	else if ((fsm_stall == 1'd0) && (main_if_end201_Pivot26 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock23_321;
LEGUP_F_main_BB_if_end232_328:
		next_state = LEGUP_F_main_BB_if_end232_329;
LEGUP_F_main_BB_if_end232_329:
		next_state = LEGUP_F_main_BB_if_end232_330;
LEGUP_F_main_BB_if_end232_330:
		next_state = LEGUP_F_main_BB_if_end232_331;
LEGUP_F_main_BB_if_end232_331:
		next_state = LEGUP_F_main_BB_if_end232_332;
LEGUP_F_main_BB_if_end232_332:
	if ((fsm_stall == 1'd0) && (main_if_end232_or_cond498 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then245_333;
	else if ((fsm_stall == 1'd0) && (main_if_end232_or_cond498 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else251_335;
LEGUP_F_main_BB_if_end265_338:
		next_state = LEGUP_F_main_BB_if_end265_339;
LEGUP_F_main_BB_if_end265_339:
		next_state = LEGUP_F_main_BB_if_end265_340;
LEGUP_F_main_BB_if_end265_340:
		next_state = LEGUP_F_main_BB_if_end265_341;
LEGUP_F_main_BB_if_end265_341:
		next_state = LEGUP_F_main_BB_if_end265_342;
LEGUP_F_main_BB_if_end265_342:
		next_state = LEGUP_F_main_BB_if_end265_343;
LEGUP_F_main_BB_if_end265_343:
		next_state = LEGUP_F_main_BB_if_end265_344;
LEGUP_F_main_BB_if_end265_344:
		next_state = LEGUP_F_main_BB_if_end265_345;
LEGUP_F_main_BB_if_end265_345:
		next_state = LEGUP_F_main_BB_if_end265_346;
LEGUP_F_main_BB_if_end265_346:
		next_state = LEGUP_F_main_BB_if_end265_347;
LEGUP_F_main_BB_if_end265_347:
		next_state = LEGUP_F_main_BB_if_end265_348;
LEGUP_F_main_BB_if_end265_348:
		next_state = LEGUP_F_main_BB_if_end265_349;
LEGUP_F_main_BB_if_end265_349:
		next_state = LEGUP_F_main_BB_if_end265_350;
LEGUP_F_main_BB_if_end265_350:
		next_state = LEGUP_F_main_BB_if_end265_351;
LEGUP_F_main_BB_if_end265_351:
		next_state = LEGUP_F_main_BB_if_end265_352;
LEGUP_F_main_BB_if_end265_352:
		next_state = LEGUP_F_main_BB_if_end265_353;
LEGUP_F_main_BB_if_end265_353:
		next_state = LEGUP_F_main_BB_if_end265_354;
LEGUP_F_main_BB_if_end265_354:
		next_state = LEGUP_F_main_BB_if_end265_355;
LEGUP_F_main_BB_if_end265_355:
		next_state = LEGUP_F_main_BB_if_end265_356;
LEGUP_F_main_BB_if_end265_356:
		next_state = LEGUP_F_main_BB_if_end265_357;
LEGUP_F_main_BB_if_end265_357:
		next_state = LEGUP_F_main_BB_if_end265_358;
LEGUP_F_main_BB_if_end265_358:
		next_state = LEGUP_F_main_BB_if_end265_359;
LEGUP_F_main_BB_if_end265_359:
		next_state = LEGUP_F_main_BB_if_end265_360;
LEGUP_F_main_BB_if_end265_360:
		next_state = LEGUP_F_main_BB_if_end265_361;
LEGUP_F_main_BB_if_end265_361:
		next_state = LEGUP_F_main_BB_if_end265_362;
LEGUP_F_main_BB_if_end265_362:
		next_state = LEGUP_F_main_BB_if_end265_363;
LEGUP_F_main_BB_if_end265_363:
		next_state = LEGUP_F_main_BB_if_end265_364;
LEGUP_F_main_BB_if_end265_364:
		next_state = LEGUP_F_main_BB_if_end265_365;
LEGUP_F_main_BB_if_end265_365:
		next_state = LEGUP_F_main_BB_if_end265_366;
LEGUP_F_main_BB_if_end265_366:
		next_state = LEGUP_F_main_BB_if_end265_367;
LEGUP_F_main_BB_if_end265_367:
		next_state = LEGUP_F_main_BB_if_end265_368;
LEGUP_F_main_BB_if_end265_368:
		next_state = LEGUP_F_main_BB_if_end265_369;
LEGUP_F_main_BB_if_end265_369:
		next_state = LEGUP_F_main_BB_if_end265_370;
LEGUP_F_main_BB_if_end265_370:
		next_state = LEGUP_F_main_BB_if_end265_371;
LEGUP_F_main_BB_if_end265_371:
		next_state = LEGUP_F_main_BB_if_end265_372;
LEGUP_F_main_BB_if_end265_372:
		next_state = LEGUP_F_main_BB_if_end265_373;
LEGUP_F_main_BB_if_end265_373:
		next_state = LEGUP_F_main_BB_if_end265_374;
LEGUP_F_main_BB_if_end265_374:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end83_60:
		next_state = LEGUP_F_main_BB_if_end83_61;
LEGUP_F_main_BB_if_end83_61:
		next_state = LEGUP_F_main_BB_if_end83_62;
LEGUP_F_main_BB_if_end83_62:
		next_state = LEGUP_F_main_BB_if_end83_63;
LEGUP_F_main_BB_if_end83_63:
		next_state = LEGUP_F_main_BB_if_end83_64;
LEGUP_F_main_BB_if_end83_64:
		next_state = LEGUP_F_main_BB_if_end83_65;
LEGUP_F_main_BB_if_end83_65:
		next_state = LEGUP_F_main_BB_if_end83_66;
LEGUP_F_main_BB_if_end83_66:
		next_state = LEGUP_F_main_BB_if_end83_67;
LEGUP_F_main_BB_if_end83_67:
		next_state = LEGUP_F_main_BB_if_end83_68;
LEGUP_F_main_BB_if_end83_68:
		next_state = LEGUP_F_main_BB_if_end83_69;
LEGUP_F_main_BB_if_end83_69:
		next_state = LEGUP_F_main_BB_if_end83_70;
LEGUP_F_main_BB_if_end83_70:
		next_state = LEGUP_F_main_BB_if_end83_71;
LEGUP_F_main_BB_if_end83_71:
		next_state = LEGUP_F_main_BB_if_end83_72;
LEGUP_F_main_BB_if_end83_72:
		next_state = LEGUP_F_main_BB_if_end83_73;
LEGUP_F_main_BB_if_end83_73:
		next_state = LEGUP_F_main_BB_if_end83_74;
LEGUP_F_main_BB_if_end83_74:
		next_state = LEGUP_F_main_BB_if_end83_75;
LEGUP_F_main_BB_if_end83_75:
		next_state = LEGUP_F_main_BB_if_end83_76;
LEGUP_F_main_BB_if_end83_76:
		next_state = LEGUP_F_main_BB_if_end83_77;
LEGUP_F_main_BB_if_end83_77:
		next_state = LEGUP_F_main_BB_if_end83_78;
LEGUP_F_main_BB_if_end83_78:
		next_state = LEGUP_F_main_BB_if_end83_79;
LEGUP_F_main_BB_if_end83_79:
		next_state = LEGUP_F_main_BB_if_end83_80;
LEGUP_F_main_BB_if_end83_80:
		next_state = LEGUP_F_main_BB_if_end83_81;
LEGUP_F_main_BB_if_end83_81:
		next_state = LEGUP_F_main_BB_if_end83_82;
LEGUP_F_main_BB_if_end83_82:
		next_state = LEGUP_F_main_BB_if_end83_83;
LEGUP_F_main_BB_if_end83_83:
		next_state = LEGUP_F_main_BB_if_end83_84;
LEGUP_F_main_BB_if_end83_84:
		next_state = LEGUP_F_main_BB_if_end83_85;
LEGUP_F_main_BB_if_end83_85:
		next_state = LEGUP_F_main_BB_if_end83_86;
LEGUP_F_main_BB_if_end83_86:
		next_state = LEGUP_F_main_BB_if_end83_87;
LEGUP_F_main_BB_if_end83_87:
		next_state = LEGUP_F_main_BB_if_end83_88;
LEGUP_F_main_BB_if_end83_88:
		next_state = LEGUP_F_main_BB_if_end83_89;
LEGUP_F_main_BB_if_end83_89:
		next_state = LEGUP_F_main_BB_if_end83_90;
LEGUP_F_main_BB_if_end83_90:
		next_state = LEGUP_F_main_BB_if_end83_91;
LEGUP_F_main_BB_if_end83_91:
		next_state = LEGUP_F_main_BB_if_end83_92;
LEGUP_F_main_BB_if_end83_92:
	if ((fsm_stall == 1'd0) && (main_if_end83_cmp87_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then88_93;
	else if ((fsm_stall == 1'd0) && (main_if_end83_cmp87_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else141_262;
LEGUP_F_main_BB_if_end_56:
		next_state = LEGUP_F_main_BB_if_end_57;
LEGUP_F_main_BB_if_end_57:
		next_state = LEGUP_F_main_BB_if_end_58;
LEGUP_F_main_BB_if_end_58:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then103_129:
		next_state = LEGUP_F_main_BB_if_then103_130;
LEGUP_F_main_BB_if_then103_130:
		next_state = LEGUP_F_main_BB_if_then103_131;
LEGUP_F_main_BB_if_then103_131:
		next_state = LEGUP_F_main_BB_if_then103_132;
LEGUP_F_main_BB_if_then103_132:
		next_state = LEGUP_F_main_BB_if_then103_133;
LEGUP_F_main_BB_if_then103_133:
		next_state = LEGUP_F_main_BB_if_then103_134;
LEGUP_F_main_BB_if_then103_134:
		next_state = LEGUP_F_main_BB_if_then103_135;
LEGUP_F_main_BB_if_then103_135:
		next_state = LEGUP_F_main_BB_if_then103_136;
LEGUP_F_main_BB_if_then103_136:
		next_state = LEGUP_F_main_BB_if_then103_137;
LEGUP_F_main_BB_if_then103_137:
		next_state = LEGUP_F_main_BB_if_then103_138;
LEGUP_F_main_BB_if_then103_138:
		next_state = LEGUP_F_main_BB_if_then103_139;
LEGUP_F_main_BB_if_then103_139:
		next_state = LEGUP_F_main_BB_if_then103_140;
LEGUP_F_main_BB_if_then103_140:
		next_state = LEGUP_F_main_BB_if_then103_141;
LEGUP_F_main_BB_if_then103_141:
		next_state = LEGUP_F_main_BB_if_then103_142;
LEGUP_F_main_BB_if_then103_142:
		next_state = LEGUP_F_main_BB_if_then103_143;
LEGUP_F_main_BB_if_then103_143:
		next_state = LEGUP_F_main_BB_if_then103_144;
LEGUP_F_main_BB_if_then103_144:
		next_state = LEGUP_F_main_BB_if_then103_145;
LEGUP_F_main_BB_if_then103_145:
		next_state = LEGUP_F_main_BB_if_then103_146;
LEGUP_F_main_BB_if_then103_146:
		next_state = LEGUP_F_main_BB_if_then103_147;
LEGUP_F_main_BB_if_then103_147:
		next_state = LEGUP_F_main_BB_if_then103_148;
LEGUP_F_main_BB_if_then103_148:
		next_state = LEGUP_F_main_BB_if_then103_149;
LEGUP_F_main_BB_if_then103_149:
		next_state = LEGUP_F_main_BB_if_then103_150;
LEGUP_F_main_BB_if_then103_150:
		next_state = LEGUP_F_main_BB_if_then103_151;
LEGUP_F_main_BB_if_then103_151:
		next_state = LEGUP_F_main_BB_if_then103_152;
LEGUP_F_main_BB_if_then103_152:
		next_state = LEGUP_F_main_BB_if_then103_153;
LEGUP_F_main_BB_if_then103_153:
		next_state = LEGUP_F_main_BB_if_then103_154;
LEGUP_F_main_BB_if_then103_154:
		next_state = LEGUP_F_main_BB_if_then103_155;
LEGUP_F_main_BB_if_then103_155:
		next_state = LEGUP_F_main_BB_if_then103_156;
LEGUP_F_main_BB_if_then103_156:
		next_state = LEGUP_F_main_BB_if_then103_157;
LEGUP_F_main_BB_if_then103_157:
		next_state = LEGUP_F_main_BB_if_then103_158;
LEGUP_F_main_BB_if_then103_158:
		next_state = LEGUP_F_main_BB_if_then103_159;
LEGUP_F_main_BB_if_then103_159:
		next_state = LEGUP_F_main_BB_if_then103_160;
LEGUP_F_main_BB_if_then103_160:
		next_state = LEGUP_F_main_BB_if_then103_161;
LEGUP_F_main_BB_if_then103_161:
		next_state = LEGUP_F_main_BB_if_then103_162;
LEGUP_F_main_BB_if_then103_162:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_then116_196:
		next_state = LEGUP_F_main_BB_if_then116_197;
LEGUP_F_main_BB_if_then116_197:
		next_state = LEGUP_F_main_BB_if_then116_198;
LEGUP_F_main_BB_if_then116_198:
		next_state = LEGUP_F_main_BB_if_then116_199;
LEGUP_F_main_BB_if_then116_199:
		next_state = LEGUP_F_main_BB_if_then116_200;
LEGUP_F_main_BB_if_then116_200:
		next_state = LEGUP_F_main_BB_if_then116_201;
LEGUP_F_main_BB_if_then116_201:
		next_state = LEGUP_F_main_BB_if_then116_202;
LEGUP_F_main_BB_if_then116_202:
		next_state = LEGUP_F_main_BB_if_then116_203;
LEGUP_F_main_BB_if_then116_203:
		next_state = LEGUP_F_main_BB_if_then116_204;
LEGUP_F_main_BB_if_then116_204:
		next_state = LEGUP_F_main_BB_if_then116_205;
LEGUP_F_main_BB_if_then116_205:
		next_state = LEGUP_F_main_BB_if_then116_206;
LEGUP_F_main_BB_if_then116_206:
		next_state = LEGUP_F_main_BB_if_then116_207;
LEGUP_F_main_BB_if_then116_207:
		next_state = LEGUP_F_main_BB_if_then116_208;
LEGUP_F_main_BB_if_then116_208:
		next_state = LEGUP_F_main_BB_if_then116_209;
LEGUP_F_main_BB_if_then116_209:
		next_state = LEGUP_F_main_BB_if_then116_210;
LEGUP_F_main_BB_if_then116_210:
		next_state = LEGUP_F_main_BB_if_then116_211;
LEGUP_F_main_BB_if_then116_211:
		next_state = LEGUP_F_main_BB_if_then116_212;
LEGUP_F_main_BB_if_then116_212:
		next_state = LEGUP_F_main_BB_if_then116_213;
LEGUP_F_main_BB_if_then116_213:
		next_state = LEGUP_F_main_BB_if_then116_214;
LEGUP_F_main_BB_if_then116_214:
		next_state = LEGUP_F_main_BB_if_then116_215;
LEGUP_F_main_BB_if_then116_215:
		next_state = LEGUP_F_main_BB_if_then116_216;
LEGUP_F_main_BB_if_then116_216:
		next_state = LEGUP_F_main_BB_if_then116_217;
LEGUP_F_main_BB_if_then116_217:
		next_state = LEGUP_F_main_BB_if_then116_218;
LEGUP_F_main_BB_if_then116_218:
		next_state = LEGUP_F_main_BB_if_then116_219;
LEGUP_F_main_BB_if_then116_219:
		next_state = LEGUP_F_main_BB_if_then116_220;
LEGUP_F_main_BB_if_then116_220:
		next_state = LEGUP_F_main_BB_if_then116_221;
LEGUP_F_main_BB_if_then116_221:
		next_state = LEGUP_F_main_BB_if_then116_222;
LEGUP_F_main_BB_if_then116_222:
		next_state = LEGUP_F_main_BB_if_then116_223;
LEGUP_F_main_BB_if_then116_223:
		next_state = LEGUP_F_main_BB_if_then116_224;
LEGUP_F_main_BB_if_then116_224:
		next_state = LEGUP_F_main_BB_if_then116_225;
LEGUP_F_main_BB_if_then116_225:
		next_state = LEGUP_F_main_BB_if_then116_226;
LEGUP_F_main_BB_if_then116_226:
		next_state = LEGUP_F_main_BB_if_then116_227;
LEGUP_F_main_BB_if_then116_227:
		next_state = LEGUP_F_main_BB_if_then116_228;
LEGUP_F_main_BB_if_then116_228:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_then143_263:
		next_state = LEGUP_F_main_BB_if_then143_264;
LEGUP_F_main_BB_if_then143_264:
		next_state = LEGUP_F_main_BB_if_then143_265;
LEGUP_F_main_BB_if_then143_265:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_then150_269:
		next_state = LEGUP_F_main_BB_if_then150_270;
LEGUP_F_main_BB_if_then150_270:
		next_state = LEGUP_F_main_BB_if_then150_271;
LEGUP_F_main_BB_if_then150_271:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_then157_272:
		next_state = LEGUP_F_main_BB_if_then157_273;
LEGUP_F_main_BB_if_then157_273:
		next_state = LEGUP_F_main_BB_if_then157_274;
LEGUP_F_main_BB_if_then157_274:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_then182_281:
		next_state = LEGUP_F_main_BB_if_then182_282;
LEGUP_F_main_BB_if_then182_282:
		next_state = LEGUP_F_main_BB_if_end192_285;
LEGUP_F_main_BB_if_then189_284:
		next_state = LEGUP_F_main_BB_cleanup_375;
LEGUP_F_main_BB_if_then199_287:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then206_324:
		next_state = LEGUP_F_main_BB_if_end232_328;
LEGUP_F_main_BB_if_then213_325:
		next_state = LEGUP_F_main_BB_if_end232_328;
LEGUP_F_main_BB_if_then220_326:
		next_state = LEGUP_F_main_BB_if_end232_328;
LEGUP_F_main_BB_if_then245_333:
		next_state = LEGUP_F_main_BB_if_then245_334;
LEGUP_F_main_BB_if_then245_334:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then253_336:
		next_state = LEGUP_F_main_BB_cleanup_375;
LEGUP_F_main_BB_if_then88_93:
	if ((fsm_stall == 1'd0) && (main_if_end83_cmp89_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then90_94;
	else if ((fsm_stall == 1'd0) && (main_if_end83_cmp89_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else101_128;
LEGUP_F_main_BB_if_then90_100:
		next_state = LEGUP_F_main_BB_if_then90_101;
LEGUP_F_main_BB_if_then90_101:
		next_state = LEGUP_F_main_BB_if_then90_102;
LEGUP_F_main_BB_if_then90_102:
		next_state = LEGUP_F_main_BB_if_then90_103;
LEGUP_F_main_BB_if_then90_103:
		next_state = LEGUP_F_main_BB_if_then90_104;
LEGUP_F_main_BB_if_then90_104:
		next_state = LEGUP_F_main_BB_if_then90_105;
LEGUP_F_main_BB_if_then90_105:
		next_state = LEGUP_F_main_BB_if_then90_106;
LEGUP_F_main_BB_if_then90_106:
		next_state = LEGUP_F_main_BB_if_then90_107;
LEGUP_F_main_BB_if_then90_107:
		next_state = LEGUP_F_main_BB_if_then90_108;
LEGUP_F_main_BB_if_then90_108:
		next_state = LEGUP_F_main_BB_if_then90_109;
LEGUP_F_main_BB_if_then90_109:
		next_state = LEGUP_F_main_BB_if_then90_110;
LEGUP_F_main_BB_if_then90_110:
		next_state = LEGUP_F_main_BB_if_then90_111;
LEGUP_F_main_BB_if_then90_111:
		next_state = LEGUP_F_main_BB_if_then90_112;
LEGUP_F_main_BB_if_then90_112:
		next_state = LEGUP_F_main_BB_if_then90_113;
LEGUP_F_main_BB_if_then90_113:
		next_state = LEGUP_F_main_BB_if_then90_114;
LEGUP_F_main_BB_if_then90_114:
		next_state = LEGUP_F_main_BB_if_then90_115;
LEGUP_F_main_BB_if_then90_115:
		next_state = LEGUP_F_main_BB_if_then90_116;
LEGUP_F_main_BB_if_then90_116:
		next_state = LEGUP_F_main_BB_if_then90_117;
LEGUP_F_main_BB_if_then90_117:
		next_state = LEGUP_F_main_BB_if_then90_118;
LEGUP_F_main_BB_if_then90_118:
		next_state = LEGUP_F_main_BB_if_then90_119;
LEGUP_F_main_BB_if_then90_119:
		next_state = LEGUP_F_main_BB_if_then90_120;
LEGUP_F_main_BB_if_then90_120:
		next_state = LEGUP_F_main_BB_if_then90_121;
LEGUP_F_main_BB_if_then90_121:
		next_state = LEGUP_F_main_BB_if_then90_122;
LEGUP_F_main_BB_if_then90_122:
		next_state = LEGUP_F_main_BB_if_then90_123;
LEGUP_F_main_BB_if_then90_123:
		next_state = LEGUP_F_main_BB_if_then90_124;
LEGUP_F_main_BB_if_then90_124:
		next_state = LEGUP_F_main_BB_if_then90_125;
LEGUP_F_main_BB_if_then90_125:
		next_state = LEGUP_F_main_BB_if_then90_126;
LEGUP_F_main_BB_if_then90_126:
		next_state = LEGUP_F_main_BB_if_then90_127;
LEGUP_F_main_BB_if_then90_127:
		next_state = LEGUP_F_main_BB_if_end170_278;
LEGUP_F_main_BB_if_then90_94:
		next_state = LEGUP_F_main_BB_if_then90_95;
LEGUP_F_main_BB_if_then90_95:
		next_state = LEGUP_F_main_BB_if_then90_96;
LEGUP_F_main_BB_if_then90_96:
		next_state = LEGUP_F_main_BB_if_then90_97;
LEGUP_F_main_BB_if_then90_97:
		next_state = LEGUP_F_main_BB_if_then90_98;
LEGUP_F_main_BB_if_then90_98:
		next_state = LEGUP_F_main_BB_if_then90_99;
LEGUP_F_main_BB_if_then90_99:
		next_state = LEGUP_F_main_BB_if_then90_100;
LEGUP_F_main_BB_sw_bb197_286:
	if ((fsm_stall == 1'd0) && (main_sw_bb197_cmp198 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end201_288;
	else if ((fsm_stall == 1'd0) && (main_sw_bb197_cmp198 == 1'd0))
		next_state = LEGUP_F_main_BB_if_then199_287;
LEGUP_F_main_BB_sw_bb262_337:
	if ((fsm_stall == 1'd0) && (main_sw_bb262_cmp263 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb262_cmp263 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end265_338;
LEGUP_F_main_BB_sw_bb69_55:
	if ((fsm_stall == 1'd0) && (main_sw_bb69_cmp70 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb69_cmp70 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end_56;
LEGUP_F_main_BB_sw_bb80_59:
	if ((fsm_stall == 1'd0) && (main_sw_bb80_cmp81 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end83_60;
	else if ((fsm_stall == 1'd0) && (main_sw_bb80_cmp81 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_sw_bb_19:
		next_state = LEGUP_F_main_BB_sw_bb_20;
LEGUP_F_main_BB_sw_bb_20:
		next_state = LEGUP_F_main_BB_sw_bb_21;
LEGUP_F_main_BB_sw_bb_21:
		next_state = LEGUP_F_main_BB_sw_bb_22;
LEGUP_F_main_BB_sw_bb_22:
		next_state = LEGUP_F_main_BB_sw_bb_23;
LEGUP_F_main_BB_sw_bb_23:
		next_state = LEGUP_F_main_BB_sw_bb_24;
LEGUP_F_main_BB_sw_bb_24:
		next_state = LEGUP_F_main_BB_sw_bb_25;
LEGUP_F_main_BB_sw_bb_25:
		next_state = LEGUP_F_main_BB_sw_bb_26;
LEGUP_F_main_BB_sw_bb_26:
		next_state = LEGUP_F_main_BB_sw_bb_27;
LEGUP_F_main_BB_sw_bb_27:
		next_state = LEGUP_F_main_BB_sw_bb_28;
LEGUP_F_main_BB_sw_bb_28:
		next_state = LEGUP_F_main_BB_sw_bb_29;
LEGUP_F_main_BB_sw_bb_29:
		next_state = LEGUP_F_main_BB_sw_bb_30;
LEGUP_F_main_BB_sw_bb_30:
		next_state = LEGUP_F_main_BB_sw_bb_31;
LEGUP_F_main_BB_sw_bb_31:
		next_state = LEGUP_F_main_BB_sw_bb_32;
LEGUP_F_main_BB_sw_bb_32:
		next_state = LEGUP_F_main_BB_sw_bb_33;
LEGUP_F_main_BB_sw_bb_33:
		next_state = LEGUP_F_main_BB_sw_bb_34;
LEGUP_F_main_BB_sw_bb_34:
		next_state = LEGUP_F_main_BB_sw_bb_35;
LEGUP_F_main_BB_sw_bb_35:
		next_state = LEGUP_F_main_BB_sw_bb_36;
LEGUP_F_main_BB_sw_bb_36:
		next_state = LEGUP_F_main_BB_sw_bb_37;
LEGUP_F_main_BB_sw_bb_37:
		next_state = LEGUP_F_main_BB_sw_bb_38;
LEGUP_F_main_BB_sw_bb_38:
		next_state = LEGUP_F_main_BB_sw_bb_39;
LEGUP_F_main_BB_sw_bb_39:
		next_state = LEGUP_F_main_BB_sw_bb_40;
LEGUP_F_main_BB_sw_bb_40:
		next_state = LEGUP_F_main_BB_sw_bb_41;
LEGUP_F_main_BB_sw_bb_41:
		next_state = LEGUP_F_main_BB_sw_bb_42;
LEGUP_F_main_BB_sw_bb_42:
		next_state = LEGUP_F_main_BB_sw_bb_43;
LEGUP_F_main_BB_sw_bb_43:
		next_state = LEGUP_F_main_BB_sw_bb_44;
LEGUP_F_main_BB_sw_bb_44:
		next_state = LEGUP_F_main_BB_sw_bb_45;
LEGUP_F_main_BB_sw_bb_45:
		next_state = LEGUP_F_main_BB_sw_bb_46;
LEGUP_F_main_BB_sw_bb_46:
		next_state = LEGUP_F_main_BB_sw_bb_47;
LEGUP_F_main_BB_sw_bb_47:
		next_state = LEGUP_F_main_BB_sw_bb_48;
LEGUP_F_main_BB_sw_bb_48:
		next_state = LEGUP_F_main_BB_sw_bb_49;
LEGUP_F_main_BB_sw_bb_49:
		next_state = LEGUP_F_main_BB_sw_bb_50;
LEGUP_F_main_BB_sw_bb_50:
		next_state = LEGUP_F_main_BB_sw_bb_51;
LEGUP_F_main_BB_sw_bb_51:
		next_state = LEGUP_F_main_BB_sw_bb_52;
LEGUP_F_main_BB_sw_bb_52:
		next_state = LEGUP_F_main_BB_sw_bb_53;
LEGUP_F_main_BB_sw_bb_53:
		next_state = LEGUP_F_main_BB_sw_bb_54;
LEGUP_F_main_BB_sw_bb_54:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
default:
	next_state = cur_state;
endcase

end
assign fsm_stall = 1'd0;
assign main_entry_vla1490_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla1490_sub_reg <= main_entry_vla1490_sub;
	end
end
assign main_entry_vla489_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla489_sub_reg <= main_entry_vla489_sub;
	end
end
assign main_entry_arrayidx6 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx6_reg <= main_entry_arrayidx6;
	end
end
assign main_entry_arrayidx7 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx7_reg <= main_entry_arrayidx7;
	end
end
assign main_entry_arrayidx8 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx8_reg <= main_entry_arrayidx8;
	end
end
assign main_entry_arrayidx9 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx9_reg <= main_entry_arrayidx9;
	end
end
assign main_entry_arrayidx10 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx10_reg <= main_entry_arrayidx10;
	end
end
assign main_entry_arrayidx11 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx11_reg <= main_entry_arrayidx11;
	end
end
assign main_entry_arrayidx12 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx12_reg <= main_entry_arrayidx12;
	end
end
assign main_entry_arrayidx13 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx13_reg <= main_entry_arrayidx13;
	end
end
assign main_entry_arrayidx14 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx14_reg <= main_entry_arrayidx14;
	end
end
assign main_entry_arrayidx15 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx15_reg <= main_entry_arrayidx15;
	end
end
assign main_entry_arrayidx16 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx16_reg <= main_entry_arrayidx16;
	end
end
assign main_entry_arrayidx17 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx17_reg <= main_entry_arrayidx17;
	end
end
assign main_entry_arrayidx18 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx18_reg <= main_entry_arrayidx18;
	end
end
assign main_entry_arrayidx19 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx19_reg <= main_entry_arrayidx19;
	end
end
assign main_entry_arrayidx20 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx20_reg <= main_entry_arrayidx20;
	end
end
assign main_entry_arrayidx21 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx21_reg <= main_entry_arrayidx21;
	end
end
assign main_entry_arrayidx22 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx22_reg <= main_entry_arrayidx22;
	end
end
assign main_entry_arrayidx23 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx23_reg <= main_entry_arrayidx23;
	end
end
assign main_entry_arrayidx24 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx24_reg <= main_entry_arrayidx24;
	end
end
assign main_entry_arrayidx25 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx25_reg <= main_entry_arrayidx25;
	end
end
assign main_entry_arrayidx26 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx26_reg <= main_entry_arrayidx26;
	end
end
assign main_entry_arrayidx27 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx27_reg <= main_entry_arrayidx27;
	end
end
assign main_entry_arrayidx28 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx28_reg <= main_entry_arrayidx28;
	end
end
assign main_entry_arrayidx29 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx29_reg <= main_entry_arrayidx29;
	end
end
assign main_entry_arrayidx30 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx30_reg <= main_entry_arrayidx30;
	end
end
assign main_entry_arrayidx31 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx31_reg <= main_entry_arrayidx31;
	end
end
assign main_entry_arrayidx32 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx32_reg <= main_entry_arrayidx32;
	end
end
assign main_entry_arrayidx33 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx33_reg <= main_entry_arrayidx33;
	end
end
assign main_entry_arrayidx34 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx34_reg <= main_entry_arrayidx34;
	end
end
assign main_entry_arrayidx35 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx35_reg <= main_entry_arrayidx35;
	end
end
assign main_entry_arrayidx36 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx36_reg <= main_entry_arrayidx36;
	end
end
assign main_entry_arrayidx37 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx37_reg <= main_entry_arrayidx37;
	end
end
assign main_entry_arrayidx38 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx38_reg <= main_entry_arrayidx38;
	end
end
assign main_entry_arrayidx39 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx39_reg <= main_entry_arrayidx39;
	end
end
assign main_entry_arrayidx40 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx40_reg <= main_entry_arrayidx40;
	end
end
assign main_entry_arrayidx41 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx41_reg <= main_entry_arrayidx41;
	end
end
assign main_entry_arrayidx47 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_reg <= main_entry_arrayidx47;
	end
end
assign main_entry_arrayidx47_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_1_reg <= main_entry_arrayidx47_1;
	end
end
assign main_entry_arrayidx47_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_2_reg <= main_entry_arrayidx47_2;
	end
end
assign main_entry_arrayidx47_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_3_reg <= main_entry_arrayidx47_3;
	end
end
assign main_entry_arrayidx47_1519 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_1519_reg <= main_entry_arrayidx47_1519;
	end
end
assign main_entry_arrayidx47_1_1 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_1_1_reg <= main_entry_arrayidx47_1_1;
	end
end
assign main_entry_arrayidx47_2_1 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_2_1_reg <= main_entry_arrayidx47_2_1;
	end
end
assign main_entry_arrayidx47_3_1 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_3_1_reg <= main_entry_arrayidx47_3_1;
	end
end
assign main_entry_arrayidx47_2520 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_2520_reg <= main_entry_arrayidx47_2520;
	end
end
assign main_entry_arrayidx47_1_2 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_1_2_reg <= main_entry_arrayidx47_1_2;
	end
end
assign main_entry_arrayidx47_2_2 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_2_2_reg <= main_entry_arrayidx47_2_2;
	end
end
assign main_entry_arrayidx47_3_2 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_3_2_reg <= main_entry_arrayidx47_3_2;
	end
end
assign main_entry_arrayidx47_3521 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_3521_reg <= main_entry_arrayidx47_3521;
	end
end
assign main_entry_arrayidx47_1_3 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_1_3_reg <= main_entry_arrayidx47_1_3;
	end
end
assign main_entry_arrayidx47_2_3 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_2_3_reg <= main_entry_arrayidx47_2_3;
	end
end
assign main_entry_arrayidx47_3_3 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_3_3_reg <= main_entry_arrayidx47_3_3;
	end
end
assign main_entry_arrayidx54 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_reg <= main_entry_arrayidx54;
	end
end
assign main_entry_arrayidx55 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_reg <= main_entry_arrayidx55;
	end
end
assign main_entry_arrayidx54_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_1_reg <= main_entry_arrayidx54_1;
	end
end
assign main_entry_arrayidx55_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_1_reg <= main_entry_arrayidx55_1;
	end
end
assign main_entry_arrayidx54_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_2_reg <= main_entry_arrayidx54_2;
	end
end
assign main_entry_arrayidx55_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_2_reg <= main_entry_arrayidx55_2;
	end
end
assign main_entry_arrayidx54_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_3_reg <= main_entry_arrayidx54_3;
	end
end
assign main_entry_arrayidx55_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_3_reg <= main_entry_arrayidx55_3;
	end
end
assign main_entry_arrayidx54_4 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_4_reg <= main_entry_arrayidx54_4;
	end
end
assign main_entry_arrayidx55_4 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_4_reg <= main_entry_arrayidx55_4;
	end
end
assign main_entry_arrayidx54_5 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_5_reg <= main_entry_arrayidx54_5;
	end
end
assign main_entry_arrayidx55_5 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_5_reg <= main_entry_arrayidx55_5;
	end
end
assign main_entry_arrayidx54_6 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_6_reg <= main_entry_arrayidx54_6;
	end
end
assign main_entry_arrayidx55_6 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_6_reg <= main_entry_arrayidx55_6;
	end
end
assign main_entry_arrayidx54_7 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_7_reg <= main_entry_arrayidx54_7;
	end
end
assign main_entry_arrayidx55_7 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_7_reg <= main_entry_arrayidx55_7;
	end
end
assign main_entry_arrayidx54_8 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_8_reg <= main_entry_arrayidx54_8;
	end
end
assign main_entry_arrayidx55_8 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_8_reg <= main_entry_arrayidx55_8;
	end
end
assign main_entry_arrayidx54_9 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_9_reg <= main_entry_arrayidx54_9;
	end
end
assign main_entry_arrayidx55_9 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_9_reg <= main_entry_arrayidx55_9;
	end
end
assign main_entry_arrayidx54_10 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_10_reg <= main_entry_arrayidx54_10;
	end
end
assign main_entry_arrayidx55_10 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_10_reg <= main_entry_arrayidx55_10;
	end
end
assign main_entry_arrayidx54_11 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_11_reg <= main_entry_arrayidx54_11;
	end
end
assign main_entry_arrayidx55_11 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_11_reg <= main_entry_arrayidx55_11;
	end
end
assign main_entry_arrayidx54_12 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_12_reg <= main_entry_arrayidx54_12;
	end
end
assign main_entry_arrayidx55_12 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_12_reg <= main_entry_arrayidx55_12;
	end
end
assign main_entry_arrayidx54_13 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_13_reg <= main_entry_arrayidx54_13;
	end
end
assign main_entry_arrayidx55_13 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_13_reg <= main_entry_arrayidx55_13;
	end
end
assign main_entry_arrayidx54_14 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_14_reg <= main_entry_arrayidx54_14;
	end
end
assign main_entry_arrayidx55_14 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_14_reg <= main_entry_arrayidx55_14;
	end
end
assign main_entry_arrayidx54_15 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_15_reg <= main_entry_arrayidx54_15;
	end
end
assign main_entry_arrayidx55_15 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_15_reg <= main_entry_arrayidx55_15;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_state_0 = main_NodeBlock9_backedge_state_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_i_0 = main_NodeBlock9_backedge_i_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_j_0 = main_NodeBlock9_backedge_j_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_a_0 = main_NodeBlock9_backedge_a_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_b_0 = main_NodeBlock9_backedge_b_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_X_0 = main_NodeBlock9_backedge_pos_a_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_Y_0 = main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_X_0 = main_NodeBlock9_backedge_pos_b_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_Y_0 = main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_mesh_0 = main_NodeBlock9_backedge_sum_mesh_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_1hop_0 = main_NodeBlock9_backedge_sum_1hop_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0 = 32'd1993114092;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_seed_0 = main_NodeBlock9_backedge_seed_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
end
always @(*) begin
		main_NodeBlock9_Pivot10 = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock9_Pivot10_op1_temp}));
end
always @(*) begin
		main_NodeBlock7_Pivot8 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock7_Pivot8_op1_temp}));
end
always @(*) begin
		main_NodeBlock5_Pivot6 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock5_Pivot6_op1_temp}));
end
always @(*) begin
		main_LeafBlock3_SwitchLeaf4 = (main_NodeBlock9_state_0_reg == 32'd5);
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end_1_reg};
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end192_496};
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd5;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then199_inc200;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then245_inc250_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd19;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_i_0_be = main_if_end265_inc291_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_end192_inc171_1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_else251_inc233;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = 32'd15;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_if_end_16_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_a_0_be = main_if_end265_44_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_if_end_17_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_b_0_be = main_if_end265_45_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end_18;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end192_pos_a_X_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end_19;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end192_pos_a_Y_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end_20;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end232_xi_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = -32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end_21;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end232_xj_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_if_end265_newCurOp_add282_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_if_end265_newCurOp_add290;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_sw_bb_add64_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end170_seed_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end201_add204_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end201_add204_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_9) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_sw_bb_54) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb69_55) & (fsm_stall == 1'd0)) & (main_sw_bb69_cmp70 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_58) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb80_59) & (fsm_stall == 1'd0)) & (main_sw_bb80_cmp81 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end192_285) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then199_287) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then245_334) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else251_335) & (fsm_stall == 1'd0)) & (main_if_else251_cmp252 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb262_337) & (fsm_stall == 1'd0)) & (main_sw_bb262_cmp263 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end265_374) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
end
always @(*) begin
		main_NodeBlock1_Pivot2 = ($signed(main_NodeBlock9_state_0_reg) < $signed({29'd0,main_NodeBlock1_Pivot2_op1_temp}));
end
always @(*) begin
		main_NodeBlock_Pivot = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock_Pivot_op1_temp}));
end
always @(*) begin
		main_LeafBlock_SwitchLeaf = (main_NodeBlock9_state_0_reg == 32'd0);
end
always @(*) begin
		main_for_cond292_preheader_0 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_1 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_for_cond292_preheader_2 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_3 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_for_cond292_preheader_4 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_5 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_for_cond292_preheader_6 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_7 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_for_cond292_preheader_8 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_9 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_for_cond292_preheader_10 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_11 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_for_cond292_preheader_12 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_13 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_for_cond292_preheader_14 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_for_cond292_preheader_15 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_sw_bb_sub_i = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_sw_bb_xor2_i = (main_sw_bb_sub_i ^ 32'd1);
end
always @(*) begin
	main_sw_bb_rem = main_signed_modulus_32_0;
end
always @(*) begin
		main_sw_bb_bit_select5 = main_sw_bb_rem_width_extended[29:0];
end
always @(*) begin
		main_sw_bb_xor2_i16 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_sw_bb_xor2_i16_reg <= main_sw_bb_xor2_i16;
	end
end
always @(*) begin
	main_sw_bb_rem62 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_52)) begin
		main_sw_bb_rem62_reg <= main_sw_bb_rem62;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else114_195)) begin
		main_sw_bb_rem62_reg <= main_if_else114_rem118;
	end
end
always @(*) begin
		main_sw_bb_add64 = (main_NodeBlock9_seed_0_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_sw_bb_add64_reg <= main_sw_bb_add64;
	end
end
always @(*) begin
		main_sw_bb_bit_concat6 = {main_sw_bb_bit_select5[29:0], main_sw_bb_bit_concat6_bit_select_operand_2[1:0]};
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_51)) begin
		main_sw_bb_bit_concat6_reg <= main_sw_bb_bit_concat6;
	end
end
always @(*) begin
		main_sw_bb_arrayidx67_sum = (main_sw_bb_bit_concat6_reg + $signed({{28{main_sw_bb_rem62[3]}},main_sw_bb_rem62}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_52)) begin
		main_sw_bb_arrayidx67_sum_reg <= main_sw_bb_arrayidx67_sum;
	end
end
always @(*) begin
		main_sw_bb_arrayidx68 = (1'd0 + (4 * main_sw_bb_arrayidx67_sum_reg));
end
always @(*) begin
		main_sw_bb69_cmp70 = (main_NodeBlock9_i_0_reg == 32'd19);
end
always @(*) begin
		main_if_end_arrayidx71 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_16 = main_entry_vla489_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_57)) begin
		main_if_end_16_reg <= main_if_end_16;
	end
end
always @(*) begin
		main_if_end_arrayidx72 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_17 = main_entry_vla1490_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_57)) begin
		main_if_end_17_reg <= main_if_end_17;
	end
end
always @(*) begin
		main_if_end_arrayidx73 = (1'd0 + (4 * main_if_end_16));
end
always @(*) begin
		main_if_end_18 = main_entry_vla2491_out_a;
end
always @(*) begin
		main_if_end_arrayidx74 = (1'd0 + (4 * main_if_end_16));
end
always @(*) begin
		main_if_end_19 = main_entry_vla3492_out_a;
end
always @(*) begin
		main_if_end_arrayidx75 = (1'd0 + (4 * main_if_end_17));
end
always @(*) begin
		main_if_end_20 = main_entry_vla2491_out_b;
end
always @(*) begin
		main_if_end_arrayidx76 = (1'd0 + (4 * main_if_end_17));
end
always @(*) begin
		main_if_end_21 = main_entry_vla3492_out_b;
end
always @(*) begin
		main_if_end_cmp77 = (main_NodeBlock9_i_0_reg == 32'd0);
end
always @(*) begin
		main_if_end_1 = (main_if_end_cmp77 ? 32'd3 : 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_56)) begin
		main_if_end_1_reg <= main_if_end_1;
	end
end
always @(*) begin
		main_sw_bb80_cmp81 = (main_NodeBlock9_pos_a_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end83_sub_i14 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end83_xor2_i15 = (main_if_end83_sub_i14 ^ 32'd1);
end
always @(*) begin
	main_if_end83_rem85 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end83_rem85_reg = main_if_end265_rem283_reg;
end
always @(*) begin
		main_if_end83_add86 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end83_60)) begin
		main_if_end83_add86_reg <= main_if_end83_add86;
	end
end
always @(*) begin
		main_if_end83_cmp87 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end83_60)) begin
		main_if_end83_cmp87_reg <= main_if_end83_cmp87;
	end
end
always @(*) begin
		main_if_end83_cmp89 = ($signed(main_if_end83_rem85) == 32'd0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end83_92)) begin
		main_if_end83_cmp89_reg <= main_if_end83_cmp89;
	end
end
always @(*) begin
		main_if_then90_xor2_i13 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then90_rem92 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then90_arrayidx93 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then90_22 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then90_96)) begin
		main_if_then90_22_reg <= main_if_then90_22;
	end
end
always @(*) begin
		main_if_then90_add94 = (main_if_then90_22_reg + $signed({{28{main_if_then90_rem92[3]}},main_if_then90_rem92}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then90_126)) begin
		main_if_then90_add94_reg <= main_if_then90_add94;
	end
end
always @(*) begin
		main_if_then90_xor2_i12 = (main_if_end83_add86_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		main_if_then90_xor2_i12_reg <= main_if_then90_xor2_i12;
	end
end
always @(*) begin
	main_if_then90_rem97 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then90_arrayidx98 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then90_23 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then90_96)) begin
		main_if_then90_23_reg <= main_if_then90_23;
	end
end
always @(*) begin
		main_if_then90_add99 = (main_if_then90_23_reg + $signed({{28{main_if_then90_rem97[3]}},main_if_then90_rem97}));
end
always @(*) begin
		main_if_then90_add100 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		main_if_then90_add100_reg <= main_if_then90_add100;
	end
end
always @(*) begin
		main_if_else101_cmp102 = ($signed(main_if_end83_rem85_reg) == 32'd1);
end
always @(*) begin
		main_if_then103_xor2_i10 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then103_rem105 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then103_arrayidx106 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then103_24 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then103_131)) begin
		main_if_then103_24_reg <= main_if_then103_24;
	end
end
always @(*) begin
		main_if_then103_add107 = (main_if_then103_24_reg + $signed({{28{main_if_then103_rem105[3]}},main_if_then103_rem105}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then103_161)) begin
		main_if_then103_add107_reg <= main_if_then103_add107;
	end
end
always @(*) begin
		main_if_then103_xor2_i9 = (main_if_end83_add86_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		main_if_then103_xor2_i9_reg <= main_if_then103_xor2_i9;
	end
end
always @(*) begin
	main_if_then103_rem110 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then103_arrayidx111 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then103_25 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then103_131)) begin
		main_if_then103_25_reg <= main_if_then103_25;
	end
end
always @(*) begin
		main_if_then103_add112 = (main_if_then103_25_reg + $signed({{28{main_if_then103_rem110[3]}},main_if_then103_rem110}));
end
always @(*) begin
		main_if_then103_add113 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		main_if_then103_add113_reg <= main_if_then103_add113;
	end
end
always @(*) begin
		main_if_else114_cmp115 = ($signed(main_if_end83_rem85_reg) == 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else114_163)) begin
		main_if_else114_cmp115_reg <= main_if_else114_cmp115;
	end
end
always @(*) begin
		main_if_else114_xor2_i7 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_else114_rem118 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_else114_rem118_reg = main_sw_bb_rem62_reg;
end
always @(*) begin
		main_if_then116_arrayidx119 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then116_26 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then116_add120 = (main_if_then116_26 + $signed({{28{main_if_else114_rem118_reg[3]}},main_if_else114_rem118_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_198)) begin
		main_if_then116_add120_reg <= main_if_then116_add120;
	end
end
always @(*) begin
		main_if_then116_xor2_i6 = (main_if_end83_add86_reg ^ 32'd1);
end
always @(*) begin
	main_if_then116_rem123 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then116_arrayidx124 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then116_27 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_198)) begin
		main_if_then116_27_reg <= main_if_then116_27;
	end
end
always @(*) begin
		main_if_then116_add125 = (main_if_then116_27_reg + $signed({{28{main_if_then116_rem123[3]}},main_if_then116_rem123}));
end
always @(*) begin
		main_if_then116_add126 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		main_if_then116_add126_reg <= main_if_then116_add126;
	end
end
always @(*) begin
		main_if_else127_arrayidx130 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else127_28 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else127_add131 = (main_if_else127_28 + $signed({{28{main_if_else114_rem118_reg[3]}},main_if_else114_rem118_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else127_231)) begin
		main_if_else127_add131_reg <= main_if_else127_add131;
	end
end
always @(*) begin
		main_if_else127_xor2_i4 = (main_if_end83_add86_reg ^ 32'd1);
end
always @(*) begin
	main_if_else127_rem134 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_else127_arrayidx135 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else127_29 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else127_231)) begin
		main_if_else127_29_reg <= main_if_else127_29;
	end
end
always @(*) begin
		main_if_else127_add136 = (main_if_else127_29_reg + $signed({{28{main_if_else127_rem134[3]}},main_if_else127_rem134}));
end
always @(*) begin
		main_if_else127_add137 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		main_if_else127_add137_reg <= main_if_else127_add137;
	end
end
always @(*) begin
		main_if_then143_arrayidx144 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then143_30 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then143_add145 = (main_if_then143_30 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then143_arrayidx146 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then143_31 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then143_add147 = (main_if_then143_31 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_NodeBlock16_Pivot17 = ($signed($signed({{28{main_if_end83_rem85_reg[3]}},main_if_end83_rem85_reg})) < $signed({28'd0,main_NodeBlock16_Pivot17_op1_temp}));
end
always @(*) begin
		main_LeafBlock14_SwitchLeaf15 = ($signed(main_if_end83_rem85_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock12_SwitchLeaf13 = ($signed(main_if_end83_rem85_reg) == 32'd1);
end
always @(*) begin
		main_if_then150_arrayidx151 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then150_32 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then150_add152 = (main_if_then150_32 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then150_arrayidx153 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then150_33 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then150_add154 = (main_if_then150_33 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_then157_arrayidx158 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then157_34 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then157_add159 = (main_if_then157_34 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then157_arrayidx160 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then157_35 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then157_add161 = (main_if_then157_35 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_else162_arrayidx163 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else162_36 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else162_add164 = (main_if_else162_36 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_else162_arrayidx165 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else162_37 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_else162_add166 = (main_if_else162_37 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then90_127) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0 = main_if_then90_add94_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then103_162) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0 = main_if_then103_add107_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then116_228) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0 = main_if_then116_add120_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else127_261) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0 = main_if_else127_add131_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then143_265) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0 = main_if_then143_add145;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then150_271) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0 = main_if_then150_add152;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then157_274) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0 = main_if_then157_add159;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else162_277) & (fsm_stall == 1'd0))) */ begin
		main_if_end170_xi_0 = main_if_else162_add164;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then90_127) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then103_162) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then116_228) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else127_261) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then143_265) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then150_271) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then157_274) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else162_277) & (fsm_stall == 1'd0))) begin
		main_if_end170_xi_0_reg <= main_if_end170_xi_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then90_127) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0 = main_if_then90_add99;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then103_162) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0 = main_if_then103_add112;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then116_228) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0 = main_if_then116_add125;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else127_261) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0 = main_if_else127_add136;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then143_265) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0 = main_if_then143_add147;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then150_271) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0 = main_if_then150_add154;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then157_274) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0 = main_if_then157_add161;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else162_277) & (fsm_stall == 1'd0))) */ begin
		main_if_end170_xj_0 = main_if_else162_add166;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then90_127) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then103_162) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then116_228) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else127_261) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then143_265) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then150_271) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then157_274) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else162_277) & (fsm_stall == 1'd0))) begin
		main_if_end170_xj_0_reg <= main_if_end170_xj_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then90_127) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1 = main_if_then90_add100_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then103_162) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1 = main_if_then103_add113_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then116_228) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1 = main_if_then116_add126_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else127_261) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1 = main_if_else127_add137_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then143_265) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1 = main_if_end83_add86_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then150_271) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1 = main_if_end83_add86_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then157_274) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1 = main_if_end83_add86_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else162_277) & (fsm_stall == 1'd0))) */ begin
		main_if_end170_seed_1 = main_if_end83_add86_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then90_127) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then103_162) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then116_228) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else127_261) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then143_265) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then150_271) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then157_274) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else162_277) & (fsm_stall == 1'd0))) begin
		main_if_end170_seed_1_reg <= main_if_end170_seed_1;
	end
end
always @(*) begin
		main_if_end170_bit_select3 = main_if_end170_xi_0_reg[29:0];
end
always @(*) begin
		main_if_end170_inc171 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end170_278)) begin
		main_if_end170_inc171_reg <= main_if_end170_inc171;
	end
end
always @(*) begin
		main_if_end170_bit_concat4 = {main_if_end170_bit_select3[29:0], main_if_end170_bit_concat4_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end170_arrayidx172_sum = (main_if_end170_bit_concat4 + main_if_end170_xj_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end170_278)) begin
		main_if_end170_arrayidx172_sum_reg <= main_if_end170_arrayidx172_sum;
	end
end
always @(*) begin
		main_if_end170_arrayidx173 = (1'd0 + (4 * main_if_end170_arrayidx172_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end170_279)) begin
		main_if_end170_arrayidx173_reg <= main_if_end170_arrayidx173;
	end
end
always @(*) begin
		main_if_end170_38 = main_entry_vla4493_out_b;
end
always @(*) begin
		main_if_end170_cmp174 = (main_if_end170_38 == $signed(-32'd1));
end
always @(*) begin
		main_if_end170_39 = (main_if_end170_xi_0_reg < 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end170_278)) begin
		main_if_end170_39_reg <= main_if_end170_39;
	end
end
always @(*) begin
		main_if_end170_or_cond = (main_if_end170_cmp174 & main_if_end170_39_reg);
end
always @(*) begin
		main_if_end170_40 = (main_if_end170_xj_0_reg < 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end170_278)) begin
		main_if_end170_40_reg <= main_if_end170_40;
	end
end
always @(*) begin
		main_if_end170_or_cond495 = (main_if_end170_or_cond & main_if_end170_40_reg);
end
always @(*) begin
		main_if_then182_arrayidx185 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_then182_arrayidx186 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_else187_cmp188 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else187_cmp188_op1_temp}));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then182_282) & (fsm_stall == 1'd0))) begin
		main_if_end192_pos_a_X_1 = main_if_end170_xi_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else187_283) & (fsm_stall == 1'd0)) & (main_if_else187_cmp188 == 1'd0))) */ begin
		main_if_end192_pos_a_X_1 = -32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then182_282) & (fsm_stall == 1'd0))) begin
		main_if_end192_pos_a_X_1_reg <= main_if_end192_pos_a_X_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else187_283) & (fsm_stall == 1'd0)) & (main_if_else187_cmp188 == 1'd0))) begin
		main_if_end192_pos_a_X_1_reg <= main_if_end192_pos_a_X_1;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then182_282) & (fsm_stall == 1'd0))) begin
		main_if_end192_pos_a_Y_1 = main_if_end170_xj_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else187_283) & (fsm_stall == 1'd0)) & (main_if_else187_cmp188 == 1'd0))) */ begin
		main_if_end192_pos_a_Y_1 = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then182_282) & (fsm_stall == 1'd0))) begin
		main_if_end192_pos_a_Y_1_reg <= main_if_end192_pos_a_Y_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else187_283) & (fsm_stall == 1'd0)) & (main_if_else187_cmp188 == 1'd0))) begin
		main_if_end192_pos_a_Y_1_reg <= main_if_end192_pos_a_Y_1;
	end
end
always @(*) begin
		main_if_end192_cmp193 = (main_if_end192_pos_a_X_1_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end192_496 = (main_if_end192_cmp193 ? 32'd2 : 32'd3);
end
always @(*) begin
		main_if_end192_inc171_1 = (main_if_end192_cmp193 ? main_if_end170_inc171_reg : 32'd0);
end
always @(*) begin
		main_sw_bb197_cmp198 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_then199_inc200 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(*) begin
		main_if_end201_sub_i1 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end201_xor2_i2 = (main_if_end201_sub_i1 ^ 32'd1);
end
always @(*) begin
	main_if_end201_rem203 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end201_rem203_reg = main_if_end265_rem283_reg;
end
always @(*) begin
		main_if_end201_add204 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end201_288)) begin
		main_if_end201_add204_reg <= main_if_end201_add204;
	end
end
always @(*) begin
		main_if_end201_Pivot26 = ($signed($signed({{28{main_if_end201_rem203[3]}},main_if_end201_rem203})) < $signed({29'd0,main_if_end201_Pivot26_op1_temp}));
end
always @(*) begin
		main_NodeBlock23_Pivot24 = ($signed($signed({{28{main_if_end201_rem203_reg[3]}},main_if_end201_rem203_reg})) < $signed({28'd0,main_NodeBlock23_Pivot24_op1_temp}));
end
always @(*) begin
		main_LeafBlock21_SwitchLeaf22 = ($signed(main_if_end201_rem203_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock19_SwitchLeaf20 = ($signed(main_if_end201_rem203_reg) == 32'd0);
end
always @(*) begin
		main_if_then206_arrayidx207 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then206_arrayidx209 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then213_arrayidx214 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then213_arrayidx216 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then220_arrayidx221 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then220_arrayidx223 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else225_arrayidx226 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else225_arrayidx228 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then206_324) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn_in = main_if_then206_arrayidx207;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then213_325) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn_in = main_if_then213_arrayidx214;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then220_326) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn_in = main_if_then220_arrayidx221;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else225_327) & (fsm_stall == 1'd0))) */ begin
		main_if_end232_pn_in = main_if_else225_arrayidx226;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then206_324) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn_in_reg <= main_if_end232_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then213_325) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn_in_reg <= main_if_end232_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then220_326) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn_in_reg <= main_if_end232_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else225_327) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn_in_reg <= main_if_end232_pn_in;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then206_324) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn494_in = main_if_then206_arrayidx209;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then213_325) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn494_in = main_if_then213_arrayidx216;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then220_326) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn494_in = main_if_then220_arrayidx223;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else225_327) & (fsm_stall == 1'd0))) */ begin
		main_if_end232_pn494_in = main_if_else225_arrayidx228;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then206_324) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn494_in_reg <= main_if_end232_pn494_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then213_325) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn494_in_reg <= main_if_end232_pn494_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then220_326) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn494_in_reg <= main_if_end232_pn494_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else225_327) & (fsm_stall == 1'd0))) begin
		main_if_end232_pn494_in_reg <= main_if_end232_pn494_in;
	end
end
always @(*) begin
		main_if_end232_pn494 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_end232_pn = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_end232_xj_1 = (main_if_end232_pn494 + main_NodeBlock9_pos_a_Y_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end232_330)) begin
		main_if_end232_xj_1_reg <= main_if_end232_xj_1;
	end
end
always @(*) begin
		main_if_end232_xi_1 = (main_if_end232_pn + main_NodeBlock9_pos_a_X_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end232_330)) begin
		main_if_end232_xi_1_reg <= main_if_end232_xi_1;
	end
end
always @(*) begin
		main_if_end232_bit_select2 = main_if_end232_xi_1[29:0];
end
always @(*) begin
		main_if_end232_bit_concat = {main_if_end232_bit_select2[29:0], main_if_end232_bit_concat_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end232_arrayidx234_sum = (main_if_end232_bit_concat + main_if_end232_xj_1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end232_330)) begin
		main_if_end232_arrayidx234_sum_reg <= main_if_end232_arrayidx234_sum;
	end
end
always @(*) begin
		main_if_end232_arrayidx235 = (1'd0 + (4 * main_if_end232_arrayidx234_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end232_331)) begin
		main_if_end232_arrayidx235_reg <= main_if_end232_arrayidx235;
	end
end
always @(*) begin
		main_if_end232_41 = main_entry_vla4493_out_a;
end
always @(*) begin
		main_if_end232_cmp236 = (main_if_end232_41 == $signed(-32'd1));
end
always @(*) begin
		main_if_end232_42 = (main_if_end232_xi_1 < 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end232_330)) begin
		main_if_end232_42_reg <= main_if_end232_42;
	end
end
always @(*) begin
		main_if_end232_or_cond497 = (main_if_end232_cmp236 & main_if_end232_42_reg);
end
always @(*) begin
		main_if_end232_43 = (main_if_end232_xj_1 < 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end232_330)) begin
		main_if_end232_43_reg <= main_if_end232_43;
	end
end
always @(*) begin
		main_if_end232_or_cond498 = (main_if_end232_or_cond497 & main_if_end232_43_reg);
end
always @(*) begin
		main_if_then245_arrayidx248 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then245_arrayidx249 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then245_inc250 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_if_then245_inc250_reg <= main_if_then245_inc250;
	end
end
always @(*) begin
		main_if_else251_inc233 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(*) begin
		main_if_else251_cmp252 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else251_cmp252_op1_temp}));
end
always @(*) begin
		main_sw_bb262_cmp263 = (main_NodeBlock9_i_0_reg == 32'd19);
end
always @(*) begin
		main_if_end265_arrayidx266 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end265_44 = main_entry_vla489_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_339)) begin
		main_if_end265_44_reg <= main_if_end265_44;
	end
end
always @(*) begin
		main_if_end265_arrayidx267 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end265_45 = main_entry_vla1490_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_339)) begin
		main_if_end265_45_reg <= main_if_end265_45;
	end
end
always @(*) begin
		main_if_end265_arrayidx268 = (1'd0 + (4 * main_if_end265_44));
end
always @(*) begin
		main_if_end265_46 = main_entry_vla2491_out_a;
end
always @(*) begin
		main_if_end265_arrayidx269 = (1'd0 + (4 * main_if_end265_45));
end
always @(*) begin
		main_if_end265_47 = main_entry_vla2491_out_b;
end
always @(*) begin
		main_if_end265_sub = (main_if_end265_46 - main_if_end265_47);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_340)) begin
		main_if_end265_sub_reg <= main_if_end265_sub;
	end
end
always @(*) begin
		main_if_end265_bit_select1 = main_if_end265_sub[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_340)) begin
		main_if_end265_bit_select1_reg <= main_if_end265_bit_select1;
	end
end
always @(*) begin
		main_if_end265_mul = (32'd0 - main_if_end265_sub);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_340)) begin
		main_if_end265_mul_reg <= main_if_end265_mul;
	end
end
always @(*) begin
		main_if_end265_mul_sub = (main_if_end265_bit_select1_reg ? main_if_end265_mul_reg : main_if_end265_sub_reg);
end
always @(*) begin
		main_if_end265_arrayidx273 = (1'd0 + (4 * main_if_end265_44));
end
always @(*) begin
		main_if_end265_48 = main_entry_vla3492_out_a;
end
always @(*) begin
		main_if_end265_arrayidx274 = (1'd0 + (4 * main_if_end265_45));
end
always @(*) begin
		main_if_end265_49 = main_entry_vla3492_out_b;
end
always @(*) begin
		main_if_end265_sub275 = (main_if_end265_48 - main_if_end265_49);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_340)) begin
		main_if_end265_sub275_reg <= main_if_end265_sub275;
	end
end
always @(*) begin
		main_if_end265_bit_select = main_if_end265_sub275[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_340)) begin
		main_if_end265_bit_select_reg <= main_if_end265_bit_select;
	end
end
always @(*) begin
		main_if_end265_mul278 = (32'd0 - main_if_end265_sub275);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_340)) begin
		main_if_end265_mul278_reg <= main_if_end265_mul278;
	end
end
always @(*) begin
		main_if_end265_diff_pos_y_0 = (main_if_end265_bit_select_reg ? main_if_end265_mul278_reg : main_if_end265_sub275_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_341)) begin
		main_if_end265_diff_pos_y_0_reg <= main_if_end265_diff_pos_y_0;
	end
end
always @(*) begin
		main_if_end265_add280 = (main_NodeBlock9_sum_mesh_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_338)) begin
		main_if_end265_add280_reg <= main_if_end265_add280;
	end
end
always @(*) begin
		main_if_end265_newEarly_add282 = (main_if_end265_mul_sub + main_if_end265_diff_pos_y_0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_341)) begin
		main_if_end265_newEarly_add282_reg <= main_if_end265_newEarly_add282;
	end
end
always @(*) begin
		main_if_end265_newCurOp_add282 = (main_if_end265_add280_reg + main_if_end265_newEarly_add282_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_342)) begin
		main_if_end265_newCurOp_add282_reg <= main_if_end265_newCurOp_add282;
	end
end
always @(*) begin
	main_if_end265_div = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end265_rem283 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_373)) begin
		main_if_end265_rem283_reg <= main_if_end265_rem283;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end265_374)) begin
		main_if_end265_rem283_reg <= main_if_end265_rem286;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_51)) begin
		main_if_end265_rem283_reg <= main_sw_bb_rem;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end83_92)) begin
		main_if_end265_rem283_reg <= main_if_end83_rem85;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then90_126)) begin
		main_if_end265_rem283_reg <= main_if_then90_rem92;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then90_127)) begin
		main_if_end265_rem283_reg <= main_if_then90_rem97;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_161)) begin
		main_if_end265_rem283_reg <= main_if_then103_rem105;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_162)) begin
		main_if_end265_rem283_reg <= main_if_then103_rem110;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_228)) begin
		main_if_end265_rem283_reg <= main_if_then116_rem123;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else127_261)) begin
		main_if_end265_rem283_reg <= main_if_else127_rem134;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end201_320)) begin
		main_if_end265_rem283_reg <= main_if_end201_rem203;
	end
end
always @(*) begin
	main_if_end265_div285 = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end265_rem286 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_end265_add287 = (main_NodeBlock9_sum_1hop_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_338)) begin
		main_if_end265_add287_reg <= main_if_end265_add287;
	end
end
always @(*) begin
		main_if_end265_newEarly_add288 = ($signed({{1{main_if_end265_div[30]}},main_if_end265_div}) + $signed({{28{main_if_end265_rem283[3]}},main_if_end265_rem283}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_373)) begin
		main_if_end265_newEarly_add288_reg <= main_if_end265_newEarly_add288;
	end
end
always @(*) begin
		main_if_end265_newEarly_sub289 = (main_if_end265_add287_reg + $signed({{1{main_if_end265_div285[30]}},main_if_end265_div285}));
end
always @(*) begin
		main_if_end265_newEarly_add290 = (main_if_end265_newEarly_add288_reg + $signed({{28{main_if_end265_rem286[3]}},main_if_end265_rem286}));
end
always @(*) begin
		main_if_end265_newCurOp_add290 = (main_if_end265_newEarly_sub289 + main_if_end265_newEarly_add290);
end
always @(*) begin
		main_if_end265_inc291 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_338)) begin
		main_if_end265_inc291_reg <= main_if_end265_inc291;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond292_preheader_18) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then189_284) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_then253_336) & (fsm_stall == 1'd0))) */ begin
		main_cleanup_retval_0 = 32'd0;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond292_preheader_18) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then189_284) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then253_336) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
end
always @(*) begin
	main_entry_vla489_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla489_address_a = (main_entry_vla489_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx20_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx24_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx28_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx32_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx36_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla489_address_a = (main_entry_arrayidx40_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end265_338)) begin
		main_entry_vla489_address_a = (main_if_end265_arrayidx266 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla489_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla489_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla489_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla489_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla489_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla489_in_a = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla489_in_a = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla489_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla489_in_a = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla489_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla489_in_a = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla489_in_a = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla489_in_a = 32'd11;
	end
end
always @(*) begin
	main_entry_vla489_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx22_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx26_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx30_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx34_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla489_address_b = (main_entry_arrayidx38_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_56)) begin
		main_entry_vla489_address_b = (main_if_end_arrayidx71 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla489_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla489_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla489_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla489_in_b = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla489_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla489_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla489_in_b = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla489_in_b = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla489_in_b = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla489_in_b = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla489_in_b = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla489_in_b = 32'd13;
	end
end
always @(*) begin
	main_entry_vla1490_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1490_address_a = (main_entry_vla1490_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx21_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx25_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx29_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx33_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx37_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1490_address_a = (main_entry_arrayidx41_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end265_338)) begin
		main_entry_vla1490_address_a = (main_if_end265_arrayidx267 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1490_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1490_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1490_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1490_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1490_in_a = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1490_in_a = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1490_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1490_in_a = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1490_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1490_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1490_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1490_in_a = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla1490_in_a = 32'd9;
	end
end
always @(*) begin
	main_entry_vla1490_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx19_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx23_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx27_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx31_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx35_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1490_address_b = (main_entry_arrayidx39_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_56)) begin
		main_entry_vla1490_address_b = (main_if_end_arrayidx72 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1490_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1490_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1490_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1490_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1490_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1490_in_b = 32'd8;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1490_in_b = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1490_in_b = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1490_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1490_in_b = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1490_in_b = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla1490_in_b = 32'd11;
	end
end
always @(*) begin
	main_entry_vla2491_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla2491_address_a = (main_entry_arrayidx54_14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_57)) begin
		main_entry_vla2491_address_a = (main_if_end_arrayidx73 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla2491_address_a = (main_if_then182_arrayidx185 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end265_339)) begin
		main_entry_vla2491_address_a = (main_if_end265_arrayidx268 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2491_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla2491_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2491_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla2491_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla2491_in_a = main_if_end170_xi_0_reg;
	end
end
always @(*) begin
	main_entry_vla2491_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_51)) begin
		main_entry_vla2491_address_b = (main_entry_arrayidx54_15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_57)) begin
		main_entry_vla2491_address_b = (main_if_end_arrayidx75 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla2491_address_b = (main_if_then245_arrayidx248 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end265_339)) begin
		main_entry_vla2491_address_b = (main_if_end265_arrayidx269 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2491_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_51)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla2491_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2491_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla2491_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla2491_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla2491_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla2491_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla2491_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla2491_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla2491_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_51)) begin
		main_entry_vla2491_in_b = {{28{main_sw_bb_rem[3]}},main_sw_bb_rem};
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla2491_in_b = main_if_end232_xi_1_reg;
	end
end
always @(*) begin
	main_entry_vla3492_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla3492_address_a = (main_entry_arrayidx55_14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_57)) begin
		main_entry_vla3492_address_a = (main_if_end_arrayidx74 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla3492_address_a = (main_if_then182_arrayidx186 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end265_339)) begin
		main_entry_vla3492_address_a = (main_if_end265_arrayidx273 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3492_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla3492_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3492_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla3492_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla3492_in_a = main_if_end170_xj_0_reg;
	end
end
always @(*) begin
	main_entry_vla3492_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_52)) begin
		main_entry_vla3492_address_b = (main_entry_arrayidx55_15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_57)) begin
		main_entry_vla3492_address_b = (main_if_end_arrayidx76 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla3492_address_b = (main_if_then245_arrayidx249 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end265_339)) begin
		main_entry_vla3492_address_b = (main_if_end265_arrayidx274 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3492_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_52)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla3492_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3492_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla3492_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla3492_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla3492_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla3492_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla3492_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla3492_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla3492_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_52)) begin
		main_entry_vla3492_in_b = {{28{main_sw_bb_rem62[3]}},main_sw_bb_rem62};
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla3492_in_b = main_if_end232_xj_1_reg;
	end
end
always @(*) begin
	main_entry_vla4493_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_10)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_11)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_12)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_1519_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_13)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_14)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2520_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_15)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_16)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_3521_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_17)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_1519_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2520_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_3521_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4493_address_a = (main_entry_arrayidx47_2_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_53)) begin
		main_entry_vla4493_address_a = (main_sw_bb_arrayidx68 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end232_331)) begin
		main_entry_vla4493_address_a = (main_if_end232_arrayidx235 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla4493_address_a = (main_if_end232_arrayidx235_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4493_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_53)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla4493_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4493_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4493_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_53)) begin
		main_entry_vla4493_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then245_333)) begin
		main_entry_vla4493_in_a = main_NodeBlock9_b_0_reg;
	end
end
always @(*) begin
	main_entry_vla4493_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_10)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_11)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_12)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_13)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_14)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_15)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_16)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond292_preheader_17)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_1_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4493_address_b = (main_entry_arrayidx47_3_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end170_279)) begin
		main_entry_vla4493_address_b = (main_if_end170_arrayidx173 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla4493_address_b = (main_if_end170_arrayidx173_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4493_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla4493_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4493_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4493_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then182_281)) begin
		main_entry_vla4493_in_b = main_NodeBlock9_a_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_341)) begin
		main_signed_divide_32_0_op0 = main_if_end265_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end265_342)) */ begin
		main_signed_divide_32_0_op0 = main_if_end265_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end265_341)) begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end265_342)) */ begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_divide_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_divide_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_divide_32_0_inst_clken = divide_main_if_end265_div_en;
end
always @(*) begin
	main_signed_divide_32_0_inst_numer = main_signed_divide_32_0_op0;
end
always @(*) begin
	main_signed_divide_32_0_inst_denom = main_signed_divide_32_0_op1;
end
always @(*) begin
	divide_main_if_end265_div_temp_out = main_signed_divide_32_0_inst_quotient;
end
always @(*) begin
	divide_main_if_end265_div_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end265_div_out = divide_main_if_end265_div_temp_out;
end
always @(*) begin
	main_signed_divide_32_0 = divide_main_if_end265_div_out;
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_signed_modulus_32_0_op0 = main_sw_bb_xor2_i;
	end
	else if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_signed_modulus_32_0_op0 = main_sw_bb_xor2_i16_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end83_60)) begin
		main_signed_modulus_32_0_op0 = main_if_end83_xor2_i15;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		main_signed_modulus_32_0_op0 = main_if_then90_xor2_i13;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then90_95)) begin
		main_signed_modulus_32_0_op0 = main_if_then90_xor2_i12_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		main_signed_modulus_32_0_op0 = main_if_then103_xor2_i10;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then103_130)) begin
		main_signed_modulus_32_0_op0 = main_if_then103_xor2_i9_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else114_163)) begin
		main_signed_modulus_32_0_op0 = main_if_else114_xor2_i7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		main_signed_modulus_32_0_op0 = main_if_then116_xor2_i6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		main_signed_modulus_32_0_op0 = main_if_else127_xor2_i4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end201_288)) begin
		main_signed_modulus_32_0_op0 = main_if_end201_xor2_i2;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end265_341)) begin
		main_signed_modulus_32_0_op0 = main_if_end265_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end265_342)) */ begin
		main_signed_modulus_32_0_op0 = main_if_end265_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end83_60)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then90_95)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then103_130)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else114_163)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end201_288)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end265_341)) begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end265_342)) */ begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_modulus_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_modulus_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_modulus_32_0_inst_clken = divide_main_if_end265_rem283_en;
end
always @(*) begin
	main_signed_modulus_32_0_inst_numer = main_signed_modulus_32_0_op0;
end
always @(*) begin
	main_signed_modulus_32_0_inst_denom = main_signed_modulus_32_0_op1;
end
always @(*) begin
	divide_main_if_end265_rem283_temp_out = main_signed_modulus_32_0_inst_remain;
end
always @(*) begin
	divide_main_if_end265_rem283_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end265_rem283_out = divide_main_if_end265_rem283_temp_out;
end
always @(*) begin
	main_signed_modulus_32_0 = divide_main_if_end265_rem283_out;
end
assign main_NodeBlock9_Pivot10_op1_temp = 32'd3;
assign main_NodeBlock7_Pivot8_op1_temp = 32'd4;
assign main_NodeBlock5_Pivot6_op1_temp = 32'd5;
assign main_NodeBlock1_Pivot2_op1_temp = 32'd1;
assign main_NodeBlock_Pivot_op1_temp = 32'd2;
always @(*) begin
	main_sw_bb_rem_width_extended = {{26{main_sw_bb_rem[3]}},main_sw_bb_rem};
end
assign main_sw_bb_bit_concat6_bit_select_operand_2 = 2'd0;
assign main_NodeBlock16_Pivot17_op1_temp = 32'd2;
assign main_if_end170_bit_concat4_bit_select_operand_2 = 2'd0;
assign main_if_else187_cmp188_op1_temp = 32'd60;
assign main_if_end201_Pivot26_op1_temp = 32'd1;
assign main_NodeBlock23_Pivot24_op1_temp = 32'd2;
assign main_if_end232_bit_concat_bit_select_operand_2 = 2'd0;
assign main_if_else251_cmp252_op1_temp = 32'd60;
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		finish <= 1'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_375)) begin
		finish <= (fsm_stall == 1'd0);
	end
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		return_val <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_375)) begin
		return_val <= main_cleanup_retval_0_reg;
	end
end
assign memory_controller_1_write_enable_a = 1'd0;
assign memory_controller_1_in_a = 64'd0;
always @(*) begin
	memory_controller_1_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then143_263)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then150_269)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then157_272)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else162_275)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end232_328)) begin
		memory_controller_1_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_1_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		memory_controller_1_address_a = main_if_then90_arrayidx93;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		memory_controller_1_address_a = main_if_then103_arrayidx106;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		memory_controller_1_address_a = main_if_then116_arrayidx119;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		memory_controller_1_address_a = main_if_else127_arrayidx130;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then143_263)) begin
		memory_controller_1_address_a = main_if_then143_arrayidx144;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then150_269)) begin
		memory_controller_1_address_a = main_if_then150_arrayidx151;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then157_272)) begin
		memory_controller_1_address_a = main_if_then157_arrayidx158;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else162_275)) begin
		memory_controller_1_address_a = main_if_else162_arrayidx163;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end232_328)) begin
		memory_controller_1_address_a = main_if_end232_pn_in_reg;
	end
end
always @(*) begin
	memory_controller_1_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then143_263)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then150_269)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then157_272)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else162_275)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end232_328)) begin
		memory_controller_1_size_a = 2'd2;
	end
end
assign memory_controller_1_write_enable_b = 1'd0;
assign memory_controller_1_in_b = 64'd0;
assign memory_controller_1_enable_b = 1'd0;
assign memory_controller_1_address_b = 0;
assign memory_controller_1_size_b = 2'd0;
assign memory_controller_0_write_enable_a = 1'd0;
assign memory_controller_0_in_a = 64'd0;
always @(*) begin
	memory_controller_0_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then143_263)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then150_269)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then157_272)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else162_275)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end232_328)) begin
		memory_controller_0_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_0_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		memory_controller_0_address_a = main_if_then90_arrayidx98;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		memory_controller_0_address_a = main_if_then103_arrayidx111;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		memory_controller_0_address_a = main_if_then116_arrayidx124;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		memory_controller_0_address_a = main_if_else127_arrayidx135;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then143_263)) begin
		memory_controller_0_address_a = main_if_then143_arrayidx146;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then150_269)) begin
		memory_controller_0_address_a = main_if_then150_arrayidx153;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then157_272)) begin
		memory_controller_0_address_a = main_if_then157_arrayidx160;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else162_275)) begin
		memory_controller_0_address_a = main_if_else162_arrayidx165;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end232_328)) begin
		memory_controller_0_address_a = main_if_end232_pn494_in_reg;
	end
end
always @(*) begin
	memory_controller_0_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then90_94)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then103_129)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_196)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else127_229)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then143_263)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then150_269)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then157_272)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else162_275)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end232_328)) begin
		memory_controller_0_size_a = 2'd2;
	end
end
assign memory_controller_0_write_enable_b = 1'd0;
assign memory_controller_0_in_b = 64'd0;
assign memory_controller_0_enable_b = 1'd0;
assign memory_controller_0_address_b = 0;
assign memory_controller_0_size_b = 2'd0;

endmodule
module ram_dual_port
(
	clk,
	clken,
	address_a,
	address_b,
	wren_a,
	data_a,
	byteena_a,
	wren_b,
	data_b,
	byteena_b,
	q_b,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
wire [(width_b-1):0] q_b_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
input  wren_b;
input [(width_b-1):0] data_b;
input [width_be_b-1:0] byteena_b;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
	.address_b (address_b),
    .addressstall_b (1'd0),
    .rden_b (clken),
    .q_b (q_b),
    .wren_a (wren_a),
    .data_a (data_a),
    .wren_b (wren_b),
    .data_b (data_b),
    .byteena_b (byteena_b),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.width_byteena_b = width_be_b,
    altsyncram_component.operation_mode = "BIDIR_DUAL_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_b = "BYPASS",
    altsyncram_component.clock_enable_output_b = "BYPASS",
    altsyncram_component.outdata_aclr_b = "NONE",
    altsyncram_component.outdata_reg_b = output_registered,
    altsyncram_component.numwords_b = numwords_b,
    altsyncram_component.widthad_b = widthad_b,
    altsyncram_component.width_b = width_b,
    altsyncram_component.address_reg_b = "CLOCK0",
    altsyncram_component.byteena_reg_b = "CLOCK0",
    altsyncram_component.indata_reg_b = "CLOCK0",
    altsyncram_component.wrcontrol_wraddress_reg_b = "CLOCK0",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module rom_dual_port
(
	clk,
	clken,
	address_a,
	q_a,
	address_b,
	q_b
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = {`MEM_INIT_DIR, "UNUSED.mif"};
parameter  latency = 1;

input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
reg [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
reg [(width_b-1):0] q_b_wire;

(* ram_init_file = init_file *) reg [width_a-1:0] ram [numwords_a-1:0];

integer i;
/* synthesis translate_off */
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == {`MEM_INIT_DIR, "UNUSED.mif"})
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

localparam input_latency = ((latency - 1) >> 1);
localparam output_latency = (latency - 1) - input_latency;
integer j;

reg [(widthad_a-1):0] address_a_reg[input_latency:0];
reg [(widthad_b-1):0] address_b_reg[input_latency:0];

always @(*)
begin
  address_a_reg[0] = address_a;
  address_b_reg[0] = address_b;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < input_latency; j=j+1)
   begin
       address_a_reg[j+1] <= address_a_reg[j];
       address_b_reg[j+1] <= address_b_reg[j];
   end
end

always @ (posedge clk)
if (clken)
begin
    q_a_wire <= ram[address_a_reg[input_latency]];
end

always @ (posedge clk)
if (clken)
begin
    q_b_wire <= ram[address_b_reg[input_latency]];
end


reg [(width_a-1):0] q_a_reg[output_latency:0];

always @(*)
begin
   q_a_reg[0] <= q_a_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
   end
end

assign q_a = q_a_reg[output_latency];
reg [(width_b-1):0] q_b_reg[output_latency:0];

always @(*)
begin
   q_b_reg[0] <= q_b_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_b = q_b_reg[output_latency];

endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);




initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;
@(negedge clk);
start <= 0;
end

always@(posedge clk) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end


endmodule
