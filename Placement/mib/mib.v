// ----------------------------------------------------------------------------
// LegUp High-Level Synthesis Tool Version 7.5 (http://legupcomputing.com)
// Copyright (c) 2015-2019 LegUp Computing Inc. All Rights Reserved.
// For technical issues, please contact: support@legupcomputing.com
// For general inquiries, please contact: info@legupcomputing.com
// Date: Fri May  8 16:02:00 2020
// ----------------------------------------------------------------------------
`define MEMORY_CONTROLLER_ADDR_SIZE 32
`define MEMORY_CONTROLLER_DATA_SIZE 64
// Number of RAM elements: 12
`define MEMORY_CONTROLLER_TAG_SIZE 9
// This directory contains the memory initialization files generated by LegUp.
// This relative path is used by ModelSim and FPGA synthesis tool.
`define MEM_INIT_DIR "../mem_init/"
// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX1 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcX1_a {`TAG_g_main_opcX1, 23'd0}
// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
`define TAG_g_main_opcX2 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcX2_a {`TAG_g_main_opcX2, 23'd0}
// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
`define TAG_g_main_opcX3 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcX3_a {`TAG_g_main_opcX3, 23'd0}
// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY0 `MEMORY_CONTROLLER_TAG_SIZE'd2
`define TAG_g_main_opcY0_a {`TAG_g_main_opcY0, 23'd0}
// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY1 `MEMORY_CONTROLLER_TAG_SIZE'd3
`define TAG_g_main_opcY1_a {`TAG_g_main_opcY1, 23'd0}
// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY2 `MEMORY_CONTROLLER_TAG_SIZE'd4
`define TAG_g_main_opcY2_a {`TAG_g_main_opcY2, 23'd0}
// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
`define TAG_g_main_opcY3 `MEMORY_CONTROLLER_TAG_SIZE'd5
`define TAG_g_main_opcY3_a {`TAG_g_main_opcY3, 23'd0}

`timescale 1 ns / 1 ns
module top
(
	clk,
	reset,
	start,
	finish,
	return_val
);

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
reg  main_inst_clk;
reg  main_inst_reset;
reg  main_inst_start;
wire  main_inst_finish;
wire [31:0] main_inst_return_val;
wire  main_inst_memory_controller_1_write_enable_a;
wire [63:0] main_inst_memory_controller_1_in_a;
wire  main_inst_memory_controller_1_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_a;
wire [1:0] main_inst_memory_controller_1_size_a;
reg [63:0] main_inst_memory_controller_1_out_a;
wire  main_inst_memory_controller_1_write_enable_b;
wire [63:0] main_inst_memory_controller_1_in_b;
wire  main_inst_memory_controller_1_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_1_address_b;
wire [1:0] main_inst_memory_controller_1_size_b;
reg [63:0] main_inst_memory_controller_1_out_b;
wire  main_inst_memory_controller_0_write_enable_a;
wire [63:0] main_inst_memory_controller_0_in_a;
wire  main_inst_memory_controller_0_enable_a;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_a;
wire [1:0] main_inst_memory_controller_0_size_a;
reg [63:0] main_inst_memory_controller_0_out_a;
wire  main_inst_memory_controller_0_write_enable_b;
wire [63:0] main_inst_memory_controller_0_in_b;
wire  main_inst_memory_controller_0_enable_b;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_inst_memory_controller_0_address_b;
wire [1:0] main_inst_memory_controller_0_size_b;
reg [63:0] main_inst_memory_controller_0_out_b;
reg  main_inst_finish_reg;
reg [31:0] main_inst_return_val_reg;
reg  memory_controller_1_inst_clk;
wire  memory_controller_1_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_a;
reg  memory_controller_1_inst_memory_controller_enable_a;
reg [1:0] memory_controller_1_inst_memory_controller_size_a;
reg  memory_controller_1_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_1_inst_memory_controller_in_a;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_inst_memory_controller_address_b;
reg  memory_controller_1_inst_memory_controller_enable_b;
reg [1:0] memory_controller_1_inst_memory_controller_size_b;
reg  memory_controller_1_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_1_inst_memory_controller_in_b;
wire [63:0] memory_controller_1_inst_memory_controller_out_reg_b;
reg  memory_controller_0_inst_clk;
wire  memory_controller_0_inst_memory_controller_waitrequest;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_a;
reg  memory_controller_0_inst_memory_controller_enable_a;
reg [1:0] memory_controller_0_inst_memory_controller_size_a;
reg  memory_controller_0_inst_memory_controller_write_enable_a;
reg [63:0] memory_controller_0_inst_memory_controller_in_a;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_a;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_inst_memory_controller_address_b;
reg  memory_controller_0_inst_memory_controller_enable_b;
reg [1:0] memory_controller_0_inst_memory_controller_size_b;
reg  memory_controller_0_inst_memory_controller_write_enable_b;
reg [63:0] memory_controller_0_inst_memory_controller_in_b;
wire [63:0] memory_controller_0_inst_memory_controller_out_reg_b;


main main_inst (
	.clk (main_inst_clk),
	.reset (main_inst_reset),
	.start (main_inst_start),
	.finish (main_inst_finish),
	.return_val (main_inst_return_val),
	.memory_controller_1_write_enable_a (main_inst_memory_controller_1_write_enable_a),
	.memory_controller_1_in_a (main_inst_memory_controller_1_in_a),
	.memory_controller_1_enable_a (main_inst_memory_controller_1_enable_a),
	.memory_controller_1_address_a (main_inst_memory_controller_1_address_a),
	.memory_controller_1_size_a (main_inst_memory_controller_1_size_a),
	.memory_controller_1_out_a (main_inst_memory_controller_1_out_a),
	.memory_controller_1_write_enable_b (main_inst_memory_controller_1_write_enable_b),
	.memory_controller_1_in_b (main_inst_memory_controller_1_in_b),
	.memory_controller_1_enable_b (main_inst_memory_controller_1_enable_b),
	.memory_controller_1_address_b (main_inst_memory_controller_1_address_b),
	.memory_controller_1_size_b (main_inst_memory_controller_1_size_b),
	.memory_controller_1_out_b (main_inst_memory_controller_1_out_b),
	.memory_controller_0_write_enable_a (main_inst_memory_controller_0_write_enable_a),
	.memory_controller_0_in_a (main_inst_memory_controller_0_in_a),
	.memory_controller_0_enable_a (main_inst_memory_controller_0_enable_a),
	.memory_controller_0_address_a (main_inst_memory_controller_0_address_a),
	.memory_controller_0_size_a (main_inst_memory_controller_0_size_a),
	.memory_controller_0_out_a (main_inst_memory_controller_0_out_a),
	.memory_controller_0_write_enable_b (main_inst_memory_controller_0_write_enable_b),
	.memory_controller_0_in_b (main_inst_memory_controller_0_in_b),
	.memory_controller_0_enable_b (main_inst_memory_controller_0_enable_b),
	.memory_controller_0_address_b (main_inst_memory_controller_0_address_b),
	.memory_controller_0_size_b (main_inst_memory_controller_0_size_b),
	.memory_controller_0_out_b (main_inst_memory_controller_0_out_b)
);



memory_controller_1 memory_controller_1_inst (
	.clk (memory_controller_1_inst_clk),
	.memory_controller_waitrequest (memory_controller_1_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_1_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_1_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_1_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_1_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_1_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_1_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_1_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_1_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_1_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_1_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_1_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_1_inst_memory_controller_out_reg_b)
);



memory_controller_0 memory_controller_0_inst (
	.clk (memory_controller_0_inst_clk),
	.memory_controller_waitrequest (memory_controller_0_inst_memory_controller_waitrequest),
	.memory_controller_address_a (memory_controller_0_inst_memory_controller_address_a),
	.memory_controller_enable_a (memory_controller_0_inst_memory_controller_enable_a),
	.memory_controller_size_a (memory_controller_0_inst_memory_controller_size_a),
	.memory_controller_write_enable_a (memory_controller_0_inst_memory_controller_write_enable_a),
	.memory_controller_in_a (memory_controller_0_inst_memory_controller_in_a),
	.memory_controller_out_reg_a (memory_controller_0_inst_memory_controller_out_reg_a),
	.memory_controller_address_b (memory_controller_0_inst_memory_controller_address_b),
	.memory_controller_enable_b (memory_controller_0_inst_memory_controller_enable_b),
	.memory_controller_size_b (memory_controller_0_inst_memory_controller_size_b),
	.memory_controller_write_enable_b (memory_controller_0_inst_memory_controller_write_enable_b),
	.memory_controller_in_b (memory_controller_0_inst_memory_controller_in_b),
	.memory_controller_out_reg_b (memory_controller_0_inst_memory_controller_out_reg_b)
);



always @(*) begin
	main_inst_clk = clk;
end
always @(*) begin
	main_inst_reset = reset;
end
always @(*) begin
	main_inst_start = start;
end
always @(*) begin
	main_inst_memory_controller_1_out_a = memory_controller_1_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_1_out_b = memory_controller_1_inst_memory_controller_out_reg_b;
end
always @(*) begin
	main_inst_memory_controller_0_out_a = memory_controller_0_inst_memory_controller_out_reg_a;
end
always @(*) begin
	main_inst_memory_controller_0_out_b = memory_controller_0_inst_memory_controller_out_reg_b;
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_finish_reg <= 1'd0;
	end
	if (main_inst_finish) begin
		main_inst_finish_reg <= 1'd1;
	end
end
always @(posedge clk) begin
	if ((reset | main_inst_start)) begin
		main_inst_return_val_reg <= 0;
	end
	if (main_inst_finish) begin
		main_inst_return_val_reg <= main_inst_return_val;
	end
end
always @(*) begin
	memory_controller_1_inst_clk = clk;
end
assign memory_controller_1_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_1_inst_memory_controller_address_a = main_inst_memory_controller_1_address_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_a = main_inst_memory_controller_1_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_a = main_inst_memory_controller_1_size_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_a = main_inst_memory_controller_1_write_enable_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_a = main_inst_memory_controller_1_in_a;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_address_b = main_inst_memory_controller_1_address_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_enable_b = main_inst_memory_controller_1_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_size_b = main_inst_memory_controller_1_size_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_write_enable_b = main_inst_memory_controller_1_write_enable_b;
end
always @(*) begin
	memory_controller_1_inst_memory_controller_in_b = main_inst_memory_controller_1_in_b;
end
always @(*) begin
	memory_controller_0_inst_clk = clk;
end
assign memory_controller_0_inst_memory_controller_waitrequest = 1'd0;
always @(*) begin
	memory_controller_0_inst_memory_controller_address_a = main_inst_memory_controller_0_address_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_a = main_inst_memory_controller_0_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_a = main_inst_memory_controller_0_size_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_a = main_inst_memory_controller_0_write_enable_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_a = main_inst_memory_controller_0_in_a;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_address_b = main_inst_memory_controller_0_address_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_enable_b = main_inst_memory_controller_0_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_size_b = main_inst_memory_controller_0_size_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_write_enable_b = main_inst_memory_controller_0_write_enable_b;
end
always @(*) begin
	memory_controller_0_inst_memory_controller_in_b = main_inst_memory_controller_0_in_b;
end
always @(*) begin
	finish = main_inst_finish;
end
always @(*) begin
	return_val = main_inst_return_val;
end

endmodule
`timescale 1 ns / 1 ns
module memory_controller_0
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcY0_address_a;
reg [5:0] main_opcY0_address_b;
reg main_opcY0_write_enable_a;
reg main_opcY0_write_enable_b;
reg [31:0] main_opcY0_in_a;
reg [31:0] main_opcY0_in_b;
wire [31:0] main_opcY0_out_a;
wire [31:0] main_opcY0_out_b;

// @main.opcY0 = private unnamed_addr constant [62 x i32] [i32 0, i32 1, i32 0, i32 -1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY0 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY0_address_a ),
	.q_a( main_opcY0_out_a ),
	.address_b( main_opcY0_address_b ),
	.q_b( main_opcY0_out_b )
);
defparam main_opcY0.width_a = 32;
defparam main_opcY0.widthad_a = 6;
defparam main_opcY0.numwords_a = 62;
defparam main_opcY0.width_b = 32;
defparam main_opcY0.widthad_b = 6;
defparam main_opcY0.numwords_b = 62;
defparam main_opcY0.latency = ram_latency;
defparam main_opcY0.init_file = {`MEM_INIT_DIR, "main_opcY0.mif"};

reg [5:0] main_opcY1_address_a;
reg [5:0] main_opcY1_address_b;
reg main_opcY1_write_enable_a;
reg main_opcY1_write_enable_b;
reg [31:0] main_opcY1_in_a;
reg [31:0] main_opcY1_in_b;
wire [31:0] main_opcY1_out_a;
wire [31:0] main_opcY1_out_b;

// @main.opcY1 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY1_address_a ),
	.q_a( main_opcY1_out_a ),
	.address_b( main_opcY1_address_b ),
	.q_b( main_opcY1_out_b )
);
defparam main_opcY1.width_a = 32;
defparam main_opcY1.widthad_a = 6;
defparam main_opcY1.numwords_a = 62;
defparam main_opcY1.width_b = 32;
defparam main_opcY1.widthad_b = 6;
defparam main_opcY1.numwords_b = 62;
defparam main_opcY1.latency = ram_latency;
defparam main_opcY1.init_file = {`MEM_INIT_DIR, "main_opcY1.mif"};

reg [5:0] main_opcY2_address_a;
reg [5:0] main_opcY2_address_b;
reg main_opcY2_write_enable_a;
reg main_opcY2_write_enable_b;
reg [31:0] main_opcY2_in_a;
reg [31:0] main_opcY2_in_b;
wire [31:0] main_opcY2_out_a;
wire [31:0] main_opcY2_out_b;

// @main.opcY2 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY2_address_a ),
	.q_a( main_opcY2_out_a ),
	.address_b( main_opcY2_address_b ),
	.q_b( main_opcY2_out_b )
);
defparam main_opcY2.width_a = 32;
defparam main_opcY2.widthad_a = 6;
defparam main_opcY2.numwords_a = 62;
defparam main_opcY2.width_b = 32;
defparam main_opcY2.widthad_b = 6;
defparam main_opcY2.numwords_b = 62;
defparam main_opcY2.latency = ram_latency;
defparam main_opcY2.init_file = {`MEM_INIT_DIR, "main_opcY2.mif"};

reg [5:0] main_opcY3_address_a;
reg [5:0] main_opcY3_address_b;
reg main_opcY3_write_enable_a;
reg main_opcY3_write_enable_b;
reg [31:0] main_opcY3_in_a;
reg [31:0] main_opcY3_in_b;
wire [31:0] main_opcY3_out_a;
wire [31:0] main_opcY3_out_b;

// @main.opcY3 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 1, i32 1, i32 1, i32 -1, i32 -1, i32 2, i32 0, i32 -2, i32 0, i32 2, i32 2, i32 -2, i32 -2, i32 1, i32 1, i32 -...
rom_dual_port main_opcY3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcY3_address_a ),
	.q_a( main_opcY3_out_a ),
	.address_b( main_opcY3_address_b ),
	.q_b( main_opcY3_out_b )
);
defparam main_opcY3.width_a = 32;
defparam main_opcY3.widthad_a = 6;
defparam main_opcY3.numwords_a = 62;
defparam main_opcY3.width_b = 32;
defparam main_opcY3.widthad_b = 6;
defparam main_opcY3.numwords_b = 62;
defparam main_opcY3.latency = ram_latency;
defparam main_opcY3.init_file = {`MEM_INIT_DIR, "main_opcY3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcY0_a;
assign select_main_opcY0_a = (tag_a == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_a;
wire [31:0] memory_controller_main_opcY0_out_a;
assign memory_controller_main_opcY0_out_a = {32{ select_main_opcY0_reg_a[ram_latency]}} & main_opcY0_out_a;

wire select_main_opcY1_a;
assign select_main_opcY1_a = (tag_a == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_a;
wire [31:0] memory_controller_main_opcY1_out_a;
assign memory_controller_main_opcY1_out_a = {32{ select_main_opcY1_reg_a[ram_latency]}} & main_opcY1_out_a;

wire select_main_opcY2_a;
assign select_main_opcY2_a = (tag_a == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_a;
wire [31:0] memory_controller_main_opcY2_out_a;
assign memory_controller_main_opcY2_out_a = {32{ select_main_opcY2_reg_a[ram_latency]}} & main_opcY2_out_a;

wire select_main_opcY3_a;
assign select_main_opcY3_a = (tag_a == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_a;
wire [31:0] memory_controller_main_opcY3_out_a;
assign memory_controller_main_opcY3_out_a = {32{ select_main_opcY3_reg_a[ram_latency]}} & main_opcY3_out_a;

always @(*)
begin
main_opcY0_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY0_a}};
main_opcY0_write_enable_a = memory_controller_write_enable_a & select_main_opcY0_a;
main_opcY0_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY1_a}};
main_opcY1_write_enable_a = memory_controller_write_enable_a & select_main_opcY1_a;
main_opcY1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY2_a}};
main_opcY2_write_enable_a = memory_controller_write_enable_a & select_main_opcY2_a;
main_opcY2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcY3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcY3_a}};
main_opcY3_write_enable_a = memory_controller_write_enable_a & select_main_opcY3_a;
main_opcY3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcY0_reg_a[ram_latency]}} | {2{select_main_opcY1_reg_a[ram_latency]}} | {2{select_main_opcY2_reg_a[ram_latency]}} | {2{select_main_opcY3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcY0_out_a | memory_controller_main_opcY1_out_a | memory_controller_main_opcY2_out_a | memory_controller_main_opcY3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_a[j+1] <= select_main_opcY0_reg_a[j];
select_main_opcY1_reg_a[j+1] <= select_main_opcY1_reg_a[j];
select_main_opcY2_reg_a[j+1] <= select_main_opcY2_reg_a[j];
select_main_opcY3_reg_a[j+1] <= select_main_opcY3_reg_a[j];
end
always @(*)
begin
select_main_opcY0_reg_a[0] <= select_main_opcY0_a;
select_main_opcY1_reg_a[0] <= select_main_opcY1_a;
select_main_opcY2_reg_a[0] <= select_main_opcY2_a;
select_main_opcY3_reg_a[0] <= select_main_opcY3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcY0_b;
assign select_main_opcY0_b = (tag_b == `TAG_g_main_opcY0);
reg [ram_latency:0] select_main_opcY0_reg_b;
wire [31:0] memory_controller_main_opcY0_out_b;
assign memory_controller_main_opcY0_out_b = {32{ select_main_opcY0_reg_b[ram_latency]}} & main_opcY0_out_b;

wire select_main_opcY1_b;
assign select_main_opcY1_b = (tag_b == `TAG_g_main_opcY1);
reg [ram_latency:0] select_main_opcY1_reg_b;
wire [31:0] memory_controller_main_opcY1_out_b;
assign memory_controller_main_opcY1_out_b = {32{ select_main_opcY1_reg_b[ram_latency]}} & main_opcY1_out_b;

wire select_main_opcY2_b;
assign select_main_opcY2_b = (tag_b == `TAG_g_main_opcY2);
reg [ram_latency:0] select_main_opcY2_reg_b;
wire [31:0] memory_controller_main_opcY2_out_b;
assign memory_controller_main_opcY2_out_b = {32{ select_main_opcY2_reg_b[ram_latency]}} & main_opcY2_out_b;

wire select_main_opcY3_b;
assign select_main_opcY3_b = (tag_b == `TAG_g_main_opcY3);
reg [ram_latency:0] select_main_opcY3_reg_b;
wire [31:0] memory_controller_main_opcY3_out_b;
assign memory_controller_main_opcY3_out_b = {32{ select_main_opcY3_reg_b[ram_latency]}} & main_opcY3_out_b;

always @(*)
begin
main_opcY0_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY0_b}};
main_opcY0_write_enable_b = memory_controller_write_enable_b & select_main_opcY0_b;
main_opcY0_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY1_b}};
main_opcY1_write_enable_b = memory_controller_write_enable_b & select_main_opcY1_b;
main_opcY1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY2_b}};
main_opcY2_write_enable_b = memory_controller_write_enable_b & select_main_opcY2_b;
main_opcY2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcY3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcY3_b}};
main_opcY3_write_enable_b = memory_controller_write_enable_b & select_main_opcY3_b;
main_opcY3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcY0_reg_b[ram_latency]}} | {2{select_main_opcY1_reg_b[ram_latency]}} | {2{select_main_opcY2_reg_b[ram_latency]}} | {2{select_main_opcY3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcY0_out_b | memory_controller_main_opcY1_out_b | memory_controller_main_opcY2_out_b | memory_controller_main_opcY3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcY0_reg_b[j+1] <= select_main_opcY0_reg_b[j];
select_main_opcY1_reg_b[j+1] <= select_main_opcY1_reg_b[j];
select_main_opcY2_reg_b[j+1] <= select_main_opcY2_reg_b[j];
select_main_opcY3_reg_b[j+1] <= select_main_opcY3_reg_b[j];
end
always @(*)
begin
select_main_opcY0_reg_b[0] <= select_main_opcY0_b;
select_main_opcY1_reg_b[0] <= select_main_opcY1_b;
select_main_opcY2_reg_b[0] <= select_main_opcY2_b;
select_main_opcY3_reg_b[0] <= select_main_opcY3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module memory_controller_1
(
	clk,
	memory_controller_address_a,
	memory_controller_address_b,
	memory_controller_enable_a,
	memory_controller_enable_b,
	memory_controller_write_enable_a,
	memory_controller_write_enable_b,
	memory_controller_in_a,
	memory_controller_in_b,
	memory_controller_size_a,
	memory_controller_size_b,
	memory_controller_waitrequest,
	memory_controller_out_reg_a,
	memory_controller_out_reg_b
);

parameter latency = 2;

parameter ram_latency = latency-1;

integer j;

input clk;
input memory_controller_waitrequest;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_a;
input memory_controller_enable_a;
input memory_controller_write_enable_a;
input [64-1:0] memory_controller_in_a;
input [1:0] memory_controller_size_a;
output reg [64-1:0] memory_controller_out_reg_a;
reg [64-1:0] memory_controller_out_prev_a;
reg [64-1:0] memory_controller_out_a;

reg memory_controller_enable_reg_a;
input [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_address_b;
input memory_controller_enable_b;
input memory_controller_write_enable_b;
input [64-1:0] memory_controller_in_b;
input [1:0] memory_controller_size_b;
output reg [64-1:0] memory_controller_out_reg_b;
reg [64-1:0] memory_controller_out_prev_b;
reg [64-1:0] memory_controller_out_b;

reg memory_controller_enable_reg_b;

reg [5:0] main_opcX1_address_a;
reg [5:0] main_opcX1_address_b;
reg main_opcX1_write_enable_a;
reg main_opcX1_write_enable_b;
reg [31:0] main_opcX1_in_a;
reg [31:0] main_opcX1_in_b;
wire [31:0] main_opcX1_out_a;
wire [31:0] main_opcX1_out_b;

// @main.opcX1 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 0, i32 1, i32 0, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX1 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX1_address_a ),
	.q_a( main_opcX1_out_a ),
	.address_b( main_opcX1_address_b ),
	.q_b( main_opcX1_out_b )
);
defparam main_opcX1.width_a = 32;
defparam main_opcX1.widthad_a = 6;
defparam main_opcX1.numwords_a = 62;
defparam main_opcX1.width_b = 32;
defparam main_opcX1.widthad_b = 6;
defparam main_opcX1.numwords_b = 62;
defparam main_opcX1.latency = ram_latency;
defparam main_opcX1.init_file = {`MEM_INIT_DIR, "main_opcX1.mif"};

reg [5:0] main_opcX2_address_a;
reg [5:0] main_opcX2_address_b;
reg main_opcX2_write_enable_a;
reg main_opcX2_write_enable_b;
reg [31:0] main_opcX2_in_a;
reg [31:0] main_opcX2_in_b;
wire [31:0] main_opcX2_out_a;
wire [31:0] main_opcX2_out_b;

// @main.opcX2 = private unnamed_addr constant [62 x i32] [i32 0, i32 0, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32 ...
rom_dual_port main_opcX2 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX2_address_a ),
	.q_a( main_opcX2_out_a ),
	.address_b( main_opcX2_address_b ),
	.q_b( main_opcX2_out_b )
);
defparam main_opcX2.width_a = 32;
defparam main_opcX2.widthad_a = 6;
defparam main_opcX2.numwords_a = 62;
defparam main_opcX2.width_b = 32;
defparam main_opcX2.widthad_b = 6;
defparam main_opcX2.numwords_b = 62;
defparam main_opcX2.latency = ram_latency;
defparam main_opcX2.init_file = {`MEM_INIT_DIR, "main_opcX2.mif"};

reg [5:0] main_opcX3_address_a;
reg [5:0] main_opcX3_address_b;
reg main_opcX3_write_enable_a;
reg main_opcX3_write_enable_b;
reg [31:0] main_opcX3_in_a;
reg [31:0] main_opcX3_in_b;
wire [31:0] main_opcX3_out_a;
wire [31:0] main_opcX3_out_b;

// @main.opcX3 = private unnamed_addr constant [62 x i32] [i32 0, i32 -1, i32 1, i32 0, i32 -1, i32 -1, i32 1, i32 1, i32 -1, i32 0, i32 2, i32 0, i32 -2, i32 -1, i32 1, i32 1, i32 -1, i32 -2, i32 2, i32...
rom_dual_port main_opcX3 (
	.clk( clk ),
	.clken( !memory_controller_waitrequest ),
	.address_a( main_opcX3_address_a ),
	.q_a( main_opcX3_out_a ),
	.address_b( main_opcX3_address_b ),
	.q_b( main_opcX3_out_b )
);
defparam main_opcX3.width_a = 32;
defparam main_opcX3.widthad_a = 6;
defparam main_opcX3.numwords_a = 62;
defparam main_opcX3.width_b = 32;
defparam main_opcX3.widthad_b = 6;
defparam main_opcX3.numwords_b = 62;
defparam main_opcX3.latency = ram_latency;
defparam main_opcX3.init_file = {`MEM_INIT_DIR, "main_opcX3.mif"};
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_a;
assign tag_a = memory_controller_address_a[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_a;
reg [1:0] prevSize_a;
reg [2:0] prevSize_a_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_a <= memory_controller_address_a[2:0];
	prevSize_a <= memory_controller_size_a;
end
wire [`MEMORY_CONTROLLER_TAG_SIZE-1:0] tag_b;
assign tag_b = memory_controller_address_b[`MEMORY_CONTROLLER_ADDR_SIZE-1:`MEMORY_CONTROLLER_ADDR_SIZE-`MEMORY_CONTROLLER_TAG_SIZE];
reg [2:0] prevAddr_b;
reg [1:0] prevSize_b;
reg [2:0] prevSize_b_and;

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
	prevAddr_b <= memory_controller_address_b[2:0];
	prevSize_b <= memory_controller_size_b;
end

reg [2:0] select_not_struct_a;

wire select_main_opcX1_a;
assign select_main_opcX1_a = (tag_a == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_a;
wire [31:0] memory_controller_main_opcX1_out_a;
assign memory_controller_main_opcX1_out_a = {32{ select_main_opcX1_reg_a[ram_latency]}} & main_opcX1_out_a;

wire select_main_opcX2_a;
assign select_main_opcX2_a = (tag_a == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_a;
wire [31:0] memory_controller_main_opcX2_out_a;
assign memory_controller_main_opcX2_out_a = {32{ select_main_opcX2_reg_a[ram_latency]}} & main_opcX2_out_a;

wire select_main_opcX3_a;
assign select_main_opcX3_a = (tag_a == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_a;
wire [31:0] memory_controller_main_opcX3_out_a;
assign memory_controller_main_opcX3_out_a = {32{ select_main_opcX3_reg_a[ram_latency]}} & main_opcX3_out_a;

always @(*)
begin
main_opcX1_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX1_a}};
main_opcX1_write_enable_a = memory_controller_write_enable_a & select_main_opcX1_a;
main_opcX1_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX2_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX2_a}};
main_opcX2_write_enable_a = memory_controller_write_enable_a & select_main_opcX2_a;
main_opcX2_in_a [32-1:0] = memory_controller_in_a[32-1:0];

main_opcX3_address_a = memory_controller_address_a [6-1+2:2] & {6{select_main_opcX3_a}};
main_opcX3_write_enable_a = memory_controller_write_enable_a & select_main_opcX3_a;
main_opcX3_in_a [32-1:0] = memory_controller_in_a[32-1:0];

end
always @(*)
begin
select_not_struct_a [2:0] = 3'b0 | {2{select_main_opcX1_reg_a[ram_latency]}} | {2{select_main_opcX2_reg_a[ram_latency]}} | {2{select_main_opcX3_reg_a[ram_latency]}};
memory_controller_out_prev_a = memory_controller_out_reg_a & { 64{!memory_controller_enable_reg_a}};
memory_controller_out_a = 1'b0 | memory_controller_out_prev_a | memory_controller_main_opcX1_out_a | memory_controller_main_opcX2_out_a | memory_controller_main_opcX3_out_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_a <= memory_controller_out_a;
memory_controller_enable_reg_a <= memory_controller_enable_a;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_a[j+1] <= select_main_opcX1_reg_a[j];
select_main_opcX2_reg_a[j+1] <= select_main_opcX2_reg_a[j];
select_main_opcX3_reg_a[j+1] <= select_main_opcX3_reg_a[j];
end
always @(*)
begin
select_main_opcX1_reg_a[0] <= select_main_opcX1_a;
select_main_opcX2_reg_a[0] <= select_main_opcX2_a;
select_main_opcX3_reg_a[0] <= select_main_opcX3_a;
end

reg [2:0] select_not_struct_b;

wire select_main_opcX1_b;
assign select_main_opcX1_b = (tag_b == `TAG_g_main_opcX1);
reg [ram_latency:0] select_main_opcX1_reg_b;
wire [31:0] memory_controller_main_opcX1_out_b;
assign memory_controller_main_opcX1_out_b = {32{ select_main_opcX1_reg_b[ram_latency]}} & main_opcX1_out_b;

wire select_main_opcX2_b;
assign select_main_opcX2_b = (tag_b == `TAG_g_main_opcX2);
reg [ram_latency:0] select_main_opcX2_reg_b;
wire [31:0] memory_controller_main_opcX2_out_b;
assign memory_controller_main_opcX2_out_b = {32{ select_main_opcX2_reg_b[ram_latency]}} & main_opcX2_out_b;

wire select_main_opcX3_b;
assign select_main_opcX3_b = (tag_b == `TAG_g_main_opcX3);
reg [ram_latency:0] select_main_opcX3_reg_b;
wire [31:0] memory_controller_main_opcX3_out_b;
assign memory_controller_main_opcX3_out_b = {32{ select_main_opcX3_reg_b[ram_latency]}} & main_opcX3_out_b;

always @(*)
begin
main_opcX1_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX1_b}};
main_opcX1_write_enable_b = memory_controller_write_enable_b & select_main_opcX1_b;
main_opcX1_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX2_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX2_b}};
main_opcX2_write_enable_b = memory_controller_write_enable_b & select_main_opcX2_b;
main_opcX2_in_b [32-1:0] = memory_controller_in_b[32-1:0];

main_opcX3_address_b = memory_controller_address_b [6-1+2:2] & {6{select_main_opcX3_b}};
main_opcX3_write_enable_b = memory_controller_write_enable_b & select_main_opcX3_b;
main_opcX3_in_b [32-1:0] = memory_controller_in_b[32-1:0];

end
always @(*)
begin
select_not_struct_b [2:0] = 3'b0 | {2{select_main_opcX1_reg_b[ram_latency]}} | {2{select_main_opcX2_reg_b[ram_latency]}} | {2{select_main_opcX3_reg_b[ram_latency]}};
memory_controller_out_prev_b = memory_controller_out_reg_b & { 64{!memory_controller_enable_reg_b}};
memory_controller_out_b = 1'b0 | memory_controller_out_prev_b | memory_controller_main_opcX1_out_b | memory_controller_main_opcX2_out_b | memory_controller_main_opcX3_out_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
begin
memory_controller_out_reg_b <= memory_controller_out_b;
memory_controller_enable_reg_b <= memory_controller_enable_b;
end

always @(posedge clk)
if (!memory_controller_waitrequest)
for (j = 0; j < ram_latency; j=j+1)
begin
select_main_opcX1_reg_b[j+1] <= select_main_opcX1_reg_b[j];
select_main_opcX2_reg_b[j+1] <= select_main_opcX2_reg_b[j];
select_main_opcX3_reg_b[j+1] <= select_main_opcX3_reg_b[j];
end
always @(*)
begin
select_main_opcX1_reg_b[0] <= select_main_opcX1_b;
select_main_opcX2_reg_b[0] <= select_main_opcX2_b;
select_main_opcX3_reg_b[0] <= select_main_opcX3_b;
end

endmodule 

`timescale 1 ns / 1 ns
module main
(
	clk,
	reset,
	start,
	finish,
	return_val,
	memory_controller_1_write_enable_a,
	memory_controller_1_in_a,
	memory_controller_1_enable_a,
	memory_controller_1_address_a,
	memory_controller_1_size_a,
	memory_controller_1_out_a,
	memory_controller_1_write_enable_b,
	memory_controller_1_in_b,
	memory_controller_1_enable_b,
	memory_controller_1_address_b,
	memory_controller_1_size_b,
	memory_controller_1_out_b,
	memory_controller_0_write_enable_a,
	memory_controller_0_in_a,
	memory_controller_0_enable_a,
	memory_controller_0_address_a,
	memory_controller_0_size_a,
	memory_controller_0_out_a,
	memory_controller_0_write_enable_b,
	memory_controller_0_in_b,
	memory_controller_0_enable_b,
	memory_controller_0_address_b,
	memory_controller_0_size_b,
	memory_controller_0_out_b
);

parameter [8:0] LEGUP_0 = 9'd0;
parameter [8:0] LEGUP_F_main_BB_entry_1 = 9'd1;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_2 = 9'd2;
parameter [8:0] LEGUP_F_main_BB_NodeBlock7_3 = 9'd3;
parameter [8:0] LEGUP_F_main_BB_NodeBlock5_4 = 9'd4;
parameter [8:0] LEGUP_F_main_BB_LeafBlock3_5 = 9'd5;
parameter [8:0] LEGUP_F_main_BB_NodeBlock9_backedge_6 = 9'd6;
parameter [8:0] LEGUP_F_main_BB_for_cond321_preheader_preheader_7 = 9'd7;
parameter [8:0] LEGUP_F_main_BB_NodeBlock1_8 = 9'd8;
parameter [8:0] LEGUP_F_main_BB_NodeBlock_9 = 9'd9;
parameter [8:0] LEGUP_F_main_BB_LeafBlock_10 = 9'd10;
parameter [8:0] LEGUP_F_main_BB_sw_bb_11 = 9'd11;
parameter [8:0] LEGUP_F_main_BB_sw_bb_12 = 9'd12;
parameter [8:0] LEGUP_F_main_BB_sw_bb_13 = 9'd13;
parameter [8:0] LEGUP_F_main_BB_sw_bb_14 = 9'd14;
parameter [8:0] LEGUP_F_main_BB_sw_bb_15 = 9'd15;
parameter [8:0] LEGUP_F_main_BB_sw_bb_16 = 9'd16;
parameter [8:0] LEGUP_F_main_BB_sw_bb_17 = 9'd17;
parameter [8:0] LEGUP_F_main_BB_sw_bb_18 = 9'd18;
parameter [8:0] LEGUP_F_main_BB_sw_bb_19 = 9'd19;
parameter [8:0] LEGUP_F_main_BB_sw_bb_20 = 9'd20;
parameter [8:0] LEGUP_F_main_BB_sw_bb_21 = 9'd21;
parameter [8:0] LEGUP_F_main_BB_sw_bb_22 = 9'd22;
parameter [8:0] LEGUP_F_main_BB_sw_bb_23 = 9'd23;
parameter [8:0] LEGUP_F_main_BB_sw_bb_24 = 9'd24;
parameter [8:0] LEGUP_F_main_BB_sw_bb_25 = 9'd25;
parameter [8:0] LEGUP_F_main_BB_sw_bb_26 = 9'd26;
parameter [8:0] LEGUP_F_main_BB_sw_bb_27 = 9'd27;
parameter [8:0] LEGUP_F_main_BB_sw_bb_28 = 9'd28;
parameter [8:0] LEGUP_F_main_BB_sw_bb_29 = 9'd29;
parameter [8:0] LEGUP_F_main_BB_for_body79_30 = 9'd30;
parameter [8:0] LEGUP_F_main_BB_for_body79_31 = 9'd31;
parameter [8:0] LEGUP_F_main_BB_for_end84_32 = 9'd32;
parameter [8:0] LEGUP_F_main_BB_for_end84_33 = 9'd33;
parameter [8:0] LEGUP_F_main_BB_for_end84_34 = 9'd34;
parameter [8:0] LEGUP_F_main_BB_for_end84_35 = 9'd35;
parameter [8:0] LEGUP_F_main_BB_for_end84_36 = 9'd36;
parameter [8:0] LEGUP_F_main_BB_for_end84_37 = 9'd37;
parameter [8:0] LEGUP_F_main_BB_for_end84_38 = 9'd38;
parameter [8:0] LEGUP_F_main_BB_for_end84_39 = 9'd39;
parameter [8:0] LEGUP_F_main_BB_for_end84_40 = 9'd40;
parameter [8:0] LEGUP_F_main_BB_for_end84_41 = 9'd41;
parameter [8:0] LEGUP_F_main_BB_for_end84_42 = 9'd42;
parameter [8:0] LEGUP_F_main_BB_for_end84_43 = 9'd43;
parameter [8:0] LEGUP_F_main_BB_for_end84_44 = 9'd44;
parameter [8:0] LEGUP_F_main_BB_for_end84_45 = 9'd45;
parameter [8:0] LEGUP_F_main_BB_for_end84_46 = 9'd46;
parameter [8:0] LEGUP_F_main_BB_for_end84_47 = 9'd47;
parameter [8:0] LEGUP_F_main_BB_for_end84_48 = 9'd48;
parameter [8:0] LEGUP_F_main_BB_for_end84_49 = 9'd49;
parameter [8:0] LEGUP_F_main_BB_for_end84_50 = 9'd50;
parameter [8:0] LEGUP_F_main_BB_for_end84_51 = 9'd51;
parameter [8:0] LEGUP_F_main_BB_for_end84_52 = 9'd52;
parameter [8:0] LEGUP_F_main_BB_for_end84_53 = 9'd53;
parameter [8:0] LEGUP_F_main_BB_for_end84_54 = 9'd54;
parameter [8:0] LEGUP_F_main_BB_for_end84_55 = 9'd55;
parameter [8:0] LEGUP_F_main_BB_for_end84_56 = 9'd56;
parameter [8:0] LEGUP_F_main_BB_for_end84_57 = 9'd57;
parameter [8:0] LEGUP_F_main_BB_for_end84_58 = 9'd58;
parameter [8:0] LEGUP_F_main_BB_for_end84_59 = 9'd59;
parameter [8:0] LEGUP_F_main_BB_for_end84_60 = 9'd60;
parameter [8:0] LEGUP_F_main_BB_for_end84_61 = 9'd61;
parameter [8:0] LEGUP_F_main_BB_for_end84_62 = 9'd62;
parameter [8:0] LEGUP_F_main_BB_for_end84_63 = 9'd63;
parameter [8:0] LEGUP_F_main_BB_for_end84_64 = 9'd64;
parameter [8:0] LEGUP_F_main_BB_for_end84_65 = 9'd65;
parameter [8:0] LEGUP_F_main_BB_for_end84_66 = 9'd66;
parameter [8:0] LEGUP_F_main_BB_for_end84_67 = 9'd67;
parameter [8:0] LEGUP_F_main_BB_sw_bb95_68 = 9'd68;
parameter [8:0] LEGUP_F_main_BB_if_end_69 = 9'd69;
parameter [8:0] LEGUP_F_main_BB_if_end_70 = 9'd70;
parameter [8:0] LEGUP_F_main_BB_if_end_71 = 9'd71;
parameter [8:0] LEGUP_F_main_BB_sw_bb106_72 = 9'd72;
parameter [8:0] LEGUP_F_main_BB_if_end109_73 = 9'd73;
parameter [8:0] LEGUP_F_main_BB_if_end109_74 = 9'd74;
parameter [8:0] LEGUP_F_main_BB_if_end109_75 = 9'd75;
parameter [8:0] LEGUP_F_main_BB_if_end109_76 = 9'd76;
parameter [8:0] LEGUP_F_main_BB_if_end109_77 = 9'd77;
parameter [8:0] LEGUP_F_main_BB_if_end109_78 = 9'd78;
parameter [8:0] LEGUP_F_main_BB_if_end109_79 = 9'd79;
parameter [8:0] LEGUP_F_main_BB_if_end109_80 = 9'd80;
parameter [8:0] LEGUP_F_main_BB_if_end109_81 = 9'd81;
parameter [8:0] LEGUP_F_main_BB_if_end109_82 = 9'd82;
parameter [8:0] LEGUP_F_main_BB_if_end109_83 = 9'd83;
parameter [8:0] LEGUP_F_main_BB_if_end109_84 = 9'd84;
parameter [8:0] LEGUP_F_main_BB_if_end109_85 = 9'd85;
parameter [8:0] LEGUP_F_main_BB_if_end109_86 = 9'd86;
parameter [8:0] LEGUP_F_main_BB_if_end109_87 = 9'd87;
parameter [8:0] LEGUP_F_main_BB_if_end109_88 = 9'd88;
parameter [8:0] LEGUP_F_main_BB_if_end109_89 = 9'd89;
parameter [8:0] LEGUP_F_main_BB_if_end109_90 = 9'd90;
parameter [8:0] LEGUP_F_main_BB_if_end109_91 = 9'd91;
parameter [8:0] LEGUP_F_main_BB_if_end109_92 = 9'd92;
parameter [8:0] LEGUP_F_main_BB_if_end109_93 = 9'd93;
parameter [8:0] LEGUP_F_main_BB_if_end109_94 = 9'd94;
parameter [8:0] LEGUP_F_main_BB_if_end109_95 = 9'd95;
parameter [8:0] LEGUP_F_main_BB_if_end109_96 = 9'd96;
parameter [8:0] LEGUP_F_main_BB_if_end109_97 = 9'd97;
parameter [8:0] LEGUP_F_main_BB_if_end109_98 = 9'd98;
parameter [8:0] LEGUP_F_main_BB_if_end109_99 = 9'd99;
parameter [8:0] LEGUP_F_main_BB_if_end109_100 = 9'd100;
parameter [8:0] LEGUP_F_main_BB_if_end109_101 = 9'd101;
parameter [8:0] LEGUP_F_main_BB_if_end109_102 = 9'd102;
parameter [8:0] LEGUP_F_main_BB_if_end109_103 = 9'd103;
parameter [8:0] LEGUP_F_main_BB_if_end109_104 = 9'd104;
parameter [8:0] LEGUP_F_main_BB_if_end109_105 = 9'd105;
parameter [8:0] LEGUP_F_main_BB_if_then114_106 = 9'd106;
parameter [8:0] LEGUP_F_main_BB_if_then116_107 = 9'd107;
parameter [8:0] LEGUP_F_main_BB_if_then116_108 = 9'd108;
parameter [8:0] LEGUP_F_main_BB_if_then116_109 = 9'd109;
parameter [8:0] LEGUP_F_main_BB_if_then116_110 = 9'd110;
parameter [8:0] LEGUP_F_main_BB_if_then116_111 = 9'd111;
parameter [8:0] LEGUP_F_main_BB_if_then116_112 = 9'd112;
parameter [8:0] LEGUP_F_main_BB_if_then116_113 = 9'd113;
parameter [8:0] LEGUP_F_main_BB_if_then116_114 = 9'd114;
parameter [8:0] LEGUP_F_main_BB_if_then116_115 = 9'd115;
parameter [8:0] LEGUP_F_main_BB_if_then116_116 = 9'd116;
parameter [8:0] LEGUP_F_main_BB_if_then116_117 = 9'd117;
parameter [8:0] LEGUP_F_main_BB_if_then116_118 = 9'd118;
parameter [8:0] LEGUP_F_main_BB_if_then116_119 = 9'd119;
parameter [8:0] LEGUP_F_main_BB_if_then116_120 = 9'd120;
parameter [8:0] LEGUP_F_main_BB_if_then116_121 = 9'd121;
parameter [8:0] LEGUP_F_main_BB_if_then116_122 = 9'd122;
parameter [8:0] LEGUP_F_main_BB_if_then116_123 = 9'd123;
parameter [8:0] LEGUP_F_main_BB_if_then116_124 = 9'd124;
parameter [8:0] LEGUP_F_main_BB_if_then116_125 = 9'd125;
parameter [8:0] LEGUP_F_main_BB_if_then116_126 = 9'd126;
parameter [8:0] LEGUP_F_main_BB_if_then116_127 = 9'd127;
parameter [8:0] LEGUP_F_main_BB_if_then116_128 = 9'd128;
parameter [8:0] LEGUP_F_main_BB_if_then116_129 = 9'd129;
parameter [8:0] LEGUP_F_main_BB_if_then116_130 = 9'd130;
parameter [8:0] LEGUP_F_main_BB_if_then116_131 = 9'd131;
parameter [8:0] LEGUP_F_main_BB_if_then116_132 = 9'd132;
parameter [8:0] LEGUP_F_main_BB_if_then116_133 = 9'd133;
parameter [8:0] LEGUP_F_main_BB_if_then116_134 = 9'd134;
parameter [8:0] LEGUP_F_main_BB_if_then116_135 = 9'd135;
parameter [8:0] LEGUP_F_main_BB_if_then116_136 = 9'd136;
parameter [8:0] LEGUP_F_main_BB_if_then116_137 = 9'd137;
parameter [8:0] LEGUP_F_main_BB_if_then116_138 = 9'd138;
parameter [8:0] LEGUP_F_main_BB_if_then116_139 = 9'd139;
parameter [8:0] LEGUP_F_main_BB_if_then116_140 = 9'd140;
parameter [8:0] LEGUP_F_main_BB_if_else127_141 = 9'd141;
parameter [8:0] LEGUP_F_main_BB_if_then129_142 = 9'd142;
parameter [8:0] LEGUP_F_main_BB_if_then129_143 = 9'd143;
parameter [8:0] LEGUP_F_main_BB_if_then129_144 = 9'd144;
parameter [8:0] LEGUP_F_main_BB_if_then129_145 = 9'd145;
parameter [8:0] LEGUP_F_main_BB_if_then129_146 = 9'd146;
parameter [8:0] LEGUP_F_main_BB_if_then129_147 = 9'd147;
parameter [8:0] LEGUP_F_main_BB_if_then129_148 = 9'd148;
parameter [8:0] LEGUP_F_main_BB_if_then129_149 = 9'd149;
parameter [8:0] LEGUP_F_main_BB_if_then129_150 = 9'd150;
parameter [8:0] LEGUP_F_main_BB_if_then129_151 = 9'd151;
parameter [8:0] LEGUP_F_main_BB_if_then129_152 = 9'd152;
parameter [8:0] LEGUP_F_main_BB_if_then129_153 = 9'd153;
parameter [8:0] LEGUP_F_main_BB_if_then129_154 = 9'd154;
parameter [8:0] LEGUP_F_main_BB_if_then129_155 = 9'd155;
parameter [8:0] LEGUP_F_main_BB_if_then129_156 = 9'd156;
parameter [8:0] LEGUP_F_main_BB_if_then129_157 = 9'd157;
parameter [8:0] LEGUP_F_main_BB_if_then129_158 = 9'd158;
parameter [8:0] LEGUP_F_main_BB_if_then129_159 = 9'd159;
parameter [8:0] LEGUP_F_main_BB_if_then129_160 = 9'd160;
parameter [8:0] LEGUP_F_main_BB_if_then129_161 = 9'd161;
parameter [8:0] LEGUP_F_main_BB_if_then129_162 = 9'd162;
parameter [8:0] LEGUP_F_main_BB_if_then129_163 = 9'd163;
parameter [8:0] LEGUP_F_main_BB_if_then129_164 = 9'd164;
parameter [8:0] LEGUP_F_main_BB_if_then129_165 = 9'd165;
parameter [8:0] LEGUP_F_main_BB_if_then129_166 = 9'd166;
parameter [8:0] LEGUP_F_main_BB_if_then129_167 = 9'd167;
parameter [8:0] LEGUP_F_main_BB_if_then129_168 = 9'd168;
parameter [8:0] LEGUP_F_main_BB_if_then129_169 = 9'd169;
parameter [8:0] LEGUP_F_main_BB_if_then129_170 = 9'd170;
parameter [8:0] LEGUP_F_main_BB_if_then129_171 = 9'd171;
parameter [8:0] LEGUP_F_main_BB_if_then129_172 = 9'd172;
parameter [8:0] LEGUP_F_main_BB_if_then129_173 = 9'd173;
parameter [8:0] LEGUP_F_main_BB_if_then129_174 = 9'd174;
parameter [8:0] LEGUP_F_main_BB_if_then129_175 = 9'd175;
parameter [8:0] LEGUP_F_main_BB_if_else140_176 = 9'd176;
parameter [8:0] LEGUP_F_main_BB_if_else140_177 = 9'd177;
parameter [8:0] LEGUP_F_main_BB_if_else140_178 = 9'd178;
parameter [8:0] LEGUP_F_main_BB_if_else140_179 = 9'd179;
parameter [8:0] LEGUP_F_main_BB_if_else140_180 = 9'd180;
parameter [8:0] LEGUP_F_main_BB_if_else140_181 = 9'd181;
parameter [8:0] LEGUP_F_main_BB_if_else140_182 = 9'd182;
parameter [8:0] LEGUP_F_main_BB_if_else140_183 = 9'd183;
parameter [8:0] LEGUP_F_main_BB_if_else140_184 = 9'd184;
parameter [8:0] LEGUP_F_main_BB_if_else140_185 = 9'd185;
parameter [8:0] LEGUP_F_main_BB_if_else140_186 = 9'd186;
parameter [8:0] LEGUP_F_main_BB_if_else140_187 = 9'd187;
parameter [8:0] LEGUP_F_main_BB_if_else140_188 = 9'd188;
parameter [8:0] LEGUP_F_main_BB_if_else140_189 = 9'd189;
parameter [8:0] LEGUP_F_main_BB_if_else140_190 = 9'd190;
parameter [8:0] LEGUP_F_main_BB_if_else140_191 = 9'd191;
parameter [8:0] LEGUP_F_main_BB_if_else140_192 = 9'd192;
parameter [8:0] LEGUP_F_main_BB_if_else140_193 = 9'd193;
parameter [8:0] LEGUP_F_main_BB_if_else140_194 = 9'd194;
parameter [8:0] LEGUP_F_main_BB_if_else140_195 = 9'd195;
parameter [8:0] LEGUP_F_main_BB_if_else140_196 = 9'd196;
parameter [8:0] LEGUP_F_main_BB_if_else140_197 = 9'd197;
parameter [8:0] LEGUP_F_main_BB_if_else140_198 = 9'd198;
parameter [8:0] LEGUP_F_main_BB_if_else140_199 = 9'd199;
parameter [8:0] LEGUP_F_main_BB_if_else140_200 = 9'd200;
parameter [8:0] LEGUP_F_main_BB_if_else140_201 = 9'd201;
parameter [8:0] LEGUP_F_main_BB_if_else140_202 = 9'd202;
parameter [8:0] LEGUP_F_main_BB_if_else140_203 = 9'd203;
parameter [8:0] LEGUP_F_main_BB_if_else140_204 = 9'd204;
parameter [8:0] LEGUP_F_main_BB_if_else140_205 = 9'd205;
parameter [8:0] LEGUP_F_main_BB_if_else140_206 = 9'd206;
parameter [8:0] LEGUP_F_main_BB_if_else140_207 = 9'd207;
parameter [8:0] LEGUP_F_main_BB_if_else140_208 = 9'd208;
parameter [8:0] LEGUP_F_main_BB_if_then142_209 = 9'd209;
parameter [8:0] LEGUP_F_main_BB_if_then142_210 = 9'd210;
parameter [8:0] LEGUP_F_main_BB_if_then142_211 = 9'd211;
parameter [8:0] LEGUP_F_main_BB_if_then142_212 = 9'd212;
parameter [8:0] LEGUP_F_main_BB_if_then142_213 = 9'd213;
parameter [8:0] LEGUP_F_main_BB_if_then142_214 = 9'd214;
parameter [8:0] LEGUP_F_main_BB_if_then142_215 = 9'd215;
parameter [8:0] LEGUP_F_main_BB_if_then142_216 = 9'd216;
parameter [8:0] LEGUP_F_main_BB_if_then142_217 = 9'd217;
parameter [8:0] LEGUP_F_main_BB_if_then142_218 = 9'd218;
parameter [8:0] LEGUP_F_main_BB_if_then142_219 = 9'd219;
parameter [8:0] LEGUP_F_main_BB_if_then142_220 = 9'd220;
parameter [8:0] LEGUP_F_main_BB_if_then142_221 = 9'd221;
parameter [8:0] LEGUP_F_main_BB_if_then142_222 = 9'd222;
parameter [8:0] LEGUP_F_main_BB_if_then142_223 = 9'd223;
parameter [8:0] LEGUP_F_main_BB_if_then142_224 = 9'd224;
parameter [8:0] LEGUP_F_main_BB_if_then142_225 = 9'd225;
parameter [8:0] LEGUP_F_main_BB_if_then142_226 = 9'd226;
parameter [8:0] LEGUP_F_main_BB_if_then142_227 = 9'd227;
parameter [8:0] LEGUP_F_main_BB_if_then142_228 = 9'd228;
parameter [8:0] LEGUP_F_main_BB_if_then142_229 = 9'd229;
parameter [8:0] LEGUP_F_main_BB_if_then142_230 = 9'd230;
parameter [8:0] LEGUP_F_main_BB_if_then142_231 = 9'd231;
parameter [8:0] LEGUP_F_main_BB_if_then142_232 = 9'd232;
parameter [8:0] LEGUP_F_main_BB_if_then142_233 = 9'd233;
parameter [8:0] LEGUP_F_main_BB_if_then142_234 = 9'd234;
parameter [8:0] LEGUP_F_main_BB_if_then142_235 = 9'd235;
parameter [8:0] LEGUP_F_main_BB_if_then142_236 = 9'd236;
parameter [8:0] LEGUP_F_main_BB_if_then142_237 = 9'd237;
parameter [8:0] LEGUP_F_main_BB_if_then142_238 = 9'd238;
parameter [8:0] LEGUP_F_main_BB_if_then142_239 = 9'd239;
parameter [8:0] LEGUP_F_main_BB_if_then142_240 = 9'd240;
parameter [8:0] LEGUP_F_main_BB_if_then142_241 = 9'd241;
parameter [8:0] LEGUP_F_main_BB_if_else153_242 = 9'd242;
parameter [8:0] LEGUP_F_main_BB_if_else153_243 = 9'd243;
parameter [8:0] LEGUP_F_main_BB_if_else153_244 = 9'd244;
parameter [8:0] LEGUP_F_main_BB_if_else153_245 = 9'd245;
parameter [8:0] LEGUP_F_main_BB_if_else153_246 = 9'd246;
parameter [8:0] LEGUP_F_main_BB_if_else153_247 = 9'd247;
parameter [8:0] LEGUP_F_main_BB_if_else153_248 = 9'd248;
parameter [8:0] LEGUP_F_main_BB_if_else153_249 = 9'd249;
parameter [8:0] LEGUP_F_main_BB_if_else153_250 = 9'd250;
parameter [8:0] LEGUP_F_main_BB_if_else153_251 = 9'd251;
parameter [8:0] LEGUP_F_main_BB_if_else153_252 = 9'd252;
parameter [8:0] LEGUP_F_main_BB_if_else153_253 = 9'd253;
parameter [8:0] LEGUP_F_main_BB_if_else153_254 = 9'd254;
parameter [8:0] LEGUP_F_main_BB_if_else153_255 = 9'd255;
parameter [8:0] LEGUP_F_main_BB_if_else153_256 = 9'd256;
parameter [8:0] LEGUP_F_main_BB_if_else153_257 = 9'd257;
parameter [8:0] LEGUP_F_main_BB_if_else153_258 = 9'd258;
parameter [8:0] LEGUP_F_main_BB_if_else153_259 = 9'd259;
parameter [8:0] LEGUP_F_main_BB_if_else153_260 = 9'd260;
parameter [8:0] LEGUP_F_main_BB_if_else153_261 = 9'd261;
parameter [8:0] LEGUP_F_main_BB_if_else153_262 = 9'd262;
parameter [8:0] LEGUP_F_main_BB_if_else153_263 = 9'd263;
parameter [8:0] LEGUP_F_main_BB_if_else153_264 = 9'd264;
parameter [8:0] LEGUP_F_main_BB_if_else153_265 = 9'd265;
parameter [8:0] LEGUP_F_main_BB_if_else153_266 = 9'd266;
parameter [8:0] LEGUP_F_main_BB_if_else153_267 = 9'd267;
parameter [8:0] LEGUP_F_main_BB_if_else153_268 = 9'd268;
parameter [8:0] LEGUP_F_main_BB_if_else153_269 = 9'd269;
parameter [8:0] LEGUP_F_main_BB_if_else153_270 = 9'd270;
parameter [8:0] LEGUP_F_main_BB_if_else153_271 = 9'd271;
parameter [8:0] LEGUP_F_main_BB_if_else153_272 = 9'd272;
parameter [8:0] LEGUP_F_main_BB_if_else153_273 = 9'd273;
parameter [8:0] LEGUP_F_main_BB_if_else153_274 = 9'd274;
parameter [8:0] LEGUP_F_main_BB_if_else167_275 = 9'd275;
parameter [8:0] LEGUP_F_main_BB_if_then169_276 = 9'd276;
parameter [8:0] LEGUP_F_main_BB_if_then169_277 = 9'd277;
parameter [8:0] LEGUP_F_main_BB_if_then169_278 = 9'd278;
parameter [8:0] LEGUP_F_main_BB_NodeBlock16_279 = 9'd279;
parameter [8:0] LEGUP_F_main_BB_LeafBlock14_280 = 9'd280;
parameter [8:0] LEGUP_F_main_BB_LeafBlock12_281 = 9'd281;
parameter [8:0] LEGUP_F_main_BB_if_then176_282 = 9'd282;
parameter [8:0] LEGUP_F_main_BB_if_then176_283 = 9'd283;
parameter [8:0] LEGUP_F_main_BB_if_then176_284 = 9'd284;
parameter [8:0] LEGUP_F_main_BB_if_then183_285 = 9'd285;
parameter [8:0] LEGUP_F_main_BB_if_then183_286 = 9'd286;
parameter [8:0] LEGUP_F_main_BB_if_then183_287 = 9'd287;
parameter [8:0] LEGUP_F_main_BB_if_else188_288 = 9'd288;
parameter [8:0] LEGUP_F_main_BB_if_else188_289 = 9'd289;
parameter [8:0] LEGUP_F_main_BB_if_else188_290 = 9'd290;
parameter [8:0] LEGUP_F_main_BB_if_end196_291 = 9'd291;
parameter [8:0] LEGUP_F_main_BB_if_end196_292 = 9'd292;
parameter [8:0] LEGUP_F_main_BB_if_end196_293 = 9'd293;
parameter [8:0] LEGUP_F_main_BB_if_then208_294 = 9'd294;
parameter [8:0] LEGUP_F_main_BB_if_then208_295 = 9'd295;
parameter [8:0] LEGUP_F_main_BB_if_else213_296 = 9'd296;
parameter [8:0] LEGUP_F_main_BB_if_then215_297 = 9'd297;
parameter [8:0] LEGUP_F_main_BB_if_end218_298 = 9'd298;
parameter [8:0] LEGUP_F_main_BB_sw_bb223_299 = 9'd299;
parameter [8:0] LEGUP_F_main_BB_if_then225_300 = 9'd300;
parameter [8:0] LEGUP_F_main_BB_if_end227_301 = 9'd301;
parameter [8:0] LEGUP_F_main_BB_if_end227_302 = 9'd302;
parameter [8:0] LEGUP_F_main_BB_if_end227_303 = 9'd303;
parameter [8:0] LEGUP_F_main_BB_if_end227_304 = 9'd304;
parameter [8:0] LEGUP_F_main_BB_if_end227_305 = 9'd305;
parameter [8:0] LEGUP_F_main_BB_if_end227_306 = 9'd306;
parameter [8:0] LEGUP_F_main_BB_if_end227_307 = 9'd307;
parameter [8:0] LEGUP_F_main_BB_if_end227_308 = 9'd308;
parameter [8:0] LEGUP_F_main_BB_if_end227_309 = 9'd309;
parameter [8:0] LEGUP_F_main_BB_if_end227_310 = 9'd310;
parameter [8:0] LEGUP_F_main_BB_if_end227_311 = 9'd311;
parameter [8:0] LEGUP_F_main_BB_if_end227_312 = 9'd312;
parameter [8:0] LEGUP_F_main_BB_if_end227_313 = 9'd313;
parameter [8:0] LEGUP_F_main_BB_if_end227_314 = 9'd314;
parameter [8:0] LEGUP_F_main_BB_if_end227_315 = 9'd315;
parameter [8:0] LEGUP_F_main_BB_if_end227_316 = 9'd316;
parameter [8:0] LEGUP_F_main_BB_if_end227_317 = 9'd317;
parameter [8:0] LEGUP_F_main_BB_if_end227_318 = 9'd318;
parameter [8:0] LEGUP_F_main_BB_if_end227_319 = 9'd319;
parameter [8:0] LEGUP_F_main_BB_if_end227_320 = 9'd320;
parameter [8:0] LEGUP_F_main_BB_if_end227_321 = 9'd321;
parameter [8:0] LEGUP_F_main_BB_if_end227_322 = 9'd322;
parameter [8:0] LEGUP_F_main_BB_if_end227_323 = 9'd323;
parameter [8:0] LEGUP_F_main_BB_if_end227_324 = 9'd324;
parameter [8:0] LEGUP_F_main_BB_if_end227_325 = 9'd325;
parameter [8:0] LEGUP_F_main_BB_if_end227_326 = 9'd326;
parameter [8:0] LEGUP_F_main_BB_if_end227_327 = 9'd327;
parameter [8:0] LEGUP_F_main_BB_if_end227_328 = 9'd328;
parameter [8:0] LEGUP_F_main_BB_if_end227_329 = 9'd329;
parameter [8:0] LEGUP_F_main_BB_if_end227_330 = 9'd330;
parameter [8:0] LEGUP_F_main_BB_if_end227_331 = 9'd331;
parameter [8:0] LEGUP_F_main_BB_if_end227_332 = 9'd332;
parameter [8:0] LEGUP_F_main_BB_if_end227_333 = 9'd333;
parameter [8:0] LEGUP_F_main_BB_NodeBlock23_334 = 9'd334;
parameter [8:0] LEGUP_F_main_BB_LeafBlock21_335 = 9'd335;
parameter [8:0] LEGUP_F_main_BB_LeafBlock19_336 = 9'd336;
parameter [8:0] LEGUP_F_main_BB_if_then232_337 = 9'd337;
parameter [8:0] LEGUP_F_main_BB_if_then239_338 = 9'd338;
parameter [8:0] LEGUP_F_main_BB_if_then246_339 = 9'd339;
parameter [8:0] LEGUP_F_main_BB_if_else251_340 = 9'd340;
parameter [8:0] LEGUP_F_main_BB_if_end258_341 = 9'd341;
parameter [8:0] LEGUP_F_main_BB_if_end258_342 = 9'd342;
parameter [8:0] LEGUP_F_main_BB_if_end258_343 = 9'd343;
parameter [8:0] LEGUP_F_main_BB_if_end258_344 = 9'd344;
parameter [8:0] LEGUP_F_main_BB_if_end258_345 = 9'd345;
parameter [8:0] LEGUP_F_main_BB_if_end258_346 = 9'd346;
parameter [8:0] LEGUP_F_main_BB_if_then271_347 = 9'd347;
parameter [8:0] LEGUP_F_main_BB_if_then271_348 = 9'd348;
parameter [8:0] LEGUP_F_main_BB_if_else277_349 = 9'd349;
parameter [8:0] LEGUP_F_main_BB_if_then279_350 = 9'd350;
parameter [8:0] LEGUP_F_main_BB_sw_bb288_351 = 9'd351;
parameter [8:0] LEGUP_F_main_BB_if_end291_352 = 9'd352;
parameter [8:0] LEGUP_F_main_BB_if_end291_353 = 9'd353;
parameter [8:0] LEGUP_F_main_BB_if_end291_354 = 9'd354;
parameter [8:0] LEGUP_F_main_BB_if_end291_355 = 9'd355;
parameter [8:0] LEGUP_F_main_BB_if_end291_356 = 9'd356;
parameter [8:0] LEGUP_F_main_BB_if_end291_357 = 9'd357;
parameter [8:0] LEGUP_F_main_BB_if_end291_358 = 9'd358;
parameter [8:0] LEGUP_F_main_BB_if_end291_359 = 9'd359;
parameter [8:0] LEGUP_F_main_BB_if_end291_360 = 9'd360;
parameter [8:0] LEGUP_F_main_BB_if_end291_361 = 9'd361;
parameter [8:0] LEGUP_F_main_BB_if_end291_362 = 9'd362;
parameter [8:0] LEGUP_F_main_BB_if_end291_363 = 9'd363;
parameter [8:0] LEGUP_F_main_BB_if_end291_364 = 9'd364;
parameter [8:0] LEGUP_F_main_BB_if_end291_365 = 9'd365;
parameter [8:0] LEGUP_F_main_BB_if_end291_366 = 9'd366;
parameter [8:0] LEGUP_F_main_BB_if_end291_367 = 9'd367;
parameter [8:0] LEGUP_F_main_BB_if_end291_368 = 9'd368;
parameter [8:0] LEGUP_F_main_BB_if_end291_369 = 9'd369;
parameter [8:0] LEGUP_F_main_BB_if_end291_370 = 9'd370;
parameter [8:0] LEGUP_F_main_BB_if_end291_371 = 9'd371;
parameter [8:0] LEGUP_F_main_BB_if_end291_372 = 9'd372;
parameter [8:0] LEGUP_F_main_BB_if_end291_373 = 9'd373;
parameter [8:0] LEGUP_F_main_BB_if_end291_374 = 9'd374;
parameter [8:0] LEGUP_F_main_BB_if_end291_375 = 9'd375;
parameter [8:0] LEGUP_F_main_BB_if_end291_376 = 9'd376;
parameter [8:0] LEGUP_F_main_BB_if_end291_377 = 9'd377;
parameter [8:0] LEGUP_F_main_BB_if_end291_378 = 9'd378;
parameter [8:0] LEGUP_F_main_BB_if_end291_379 = 9'd379;
parameter [8:0] LEGUP_F_main_BB_if_end291_380 = 9'd380;
parameter [8:0] LEGUP_F_main_BB_if_end291_381 = 9'd381;
parameter [8:0] LEGUP_F_main_BB_if_end291_382 = 9'd382;
parameter [8:0] LEGUP_F_main_BB_if_end291_383 = 9'd383;
parameter [8:0] LEGUP_F_main_BB_if_end291_384 = 9'd384;
parameter [8:0] LEGUP_F_main_BB_if_end291_385 = 9'd385;
parameter [8:0] LEGUP_F_main_BB_if_end291_386 = 9'd386;
parameter [8:0] LEGUP_F_main_BB_if_end291_387 = 9'd387;
parameter [8:0] LEGUP_F_main_BB_if_end291_388 = 9'd388;
parameter [8:0] LEGUP_F_main_BB_for_cond321_preheader_389 = 9'd389;
parameter [8:0] LEGUP_F_main_BB_for_cond321_preheader_390 = 9'd390;
parameter [8:0] LEGUP_F_main_BB_for_cond321_preheader_391 = 9'd391;
parameter [8:0] LEGUP_F_main_BB_for_cond321_preheader_392 = 9'd392;
parameter [8:0] LEGUP_F_main_BB_for_cond321_preheader_393 = 9'd393;
parameter [8:0] LEGUP_F_main_BB_for_end333_394 = 9'd394;
parameter [8:0] LEGUP_F_main_BB_cleanup_395 = 9'd395;

input  clk;
input  reset;
input  start;
output reg  finish;
output reg [31:0] return_val;
output  memory_controller_1_write_enable_a;
output [63:0] memory_controller_1_in_a;
output reg  memory_controller_1_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_a;
output reg [1:0] memory_controller_1_size_a;
input [63:0] memory_controller_1_out_a;
output  memory_controller_1_write_enable_b;
output [63:0] memory_controller_1_in_b;
output  memory_controller_1_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_1_address_b;
output [1:0] memory_controller_1_size_b;
input [63:0] memory_controller_1_out_b;
output  memory_controller_0_write_enable_a;
output [63:0] memory_controller_0_in_a;
output reg  memory_controller_0_enable_a;
output reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_a;
output reg [1:0] memory_controller_0_size_a;
input [63:0] memory_controller_0_out_a;
output  memory_controller_0_write_enable_b;
output [63:0] memory_controller_0_in_b;
output  memory_controller_0_enable_b;
output [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] memory_controller_0_address_b;
output [1:0] memory_controller_0_size_b;
input [63:0] memory_controller_0_out_b;
reg [8:0] cur_state/* synthesis syn_encoding="onehot" */;
reg [8:0] next_state;
wire  fsm_stall;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1516_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla1516_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla515_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_vla515_sub_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx6_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx7_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx8_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx9_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx10_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx11_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx12_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx13_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx14_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx15_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx16_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx17_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx18_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx19_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx20_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx21_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx22_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx23_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx24_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx25_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx26_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx27_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx28_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx29_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx30_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx31_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx32_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx33_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx34_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx35_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx36_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx37_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx38_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx39_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx40_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx41_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx42_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx43_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx44_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx45_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx46_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx47_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx48_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx49_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx50_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx51_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx52_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx53_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx54_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx55_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx56_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx57_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx58_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx59_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx60_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx61_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx62_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx63_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx64_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx65_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx66_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx67_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1541;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1541_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_1;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_1_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2542;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2542_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_2_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3543;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3543_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_3_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4544;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4544_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_4_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5545;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5545_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_1_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_2_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_3_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_4_5_reg;
wire [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_entry_arrayidx73_5_5_reg;
reg [31:0] main_NodeBlock9_state_0;
reg [31:0] main_NodeBlock9_state_0_reg;
reg [31:0] main_NodeBlock9_i_0;
reg [31:0] main_NodeBlock9_i_0_reg;
reg [31:0] main_NodeBlock9_j_0;
reg [31:0] main_NodeBlock9_j_0_reg;
reg [31:0] main_NodeBlock9_a_0;
reg [31:0] main_NodeBlock9_a_0_reg;
reg [31:0] main_NodeBlock9_b_0;
reg [31:0] main_NodeBlock9_b_0_reg;
reg [31:0] main_NodeBlock9_pos_a_X_0;
reg [31:0] main_NodeBlock9_pos_a_X_0_reg;
reg [31:0] main_NodeBlock9_pos_a_Y_0;
reg [31:0] main_NodeBlock9_pos_a_Y_0_reg;
reg [31:0] main_NodeBlock9_pos_b_X_0;
reg [31:0] main_NodeBlock9_pos_b_X_0_reg;
reg [31:0] main_NodeBlock9_pos_b_Y_0;
reg [31:0] main_NodeBlock9_pos_b_Y_0_reg;
reg [31:0] main_NodeBlock9_sum_mesh_0;
reg [31:0] main_NodeBlock9_sum_mesh_0_reg;
reg [31:0] main_NodeBlock9_sum_1hop_0;
reg [31:0] main_NodeBlock9_sum_1hop_0_reg;
reg [31:0] main_NodeBlock9_seed_0;
reg [31:0] main_NodeBlock9_seed_0_reg;
reg  main_NodeBlock9_Pivot10;
reg  main_NodeBlock7_Pivot8;
reg  main_NodeBlock5_Pivot6;
reg  main_LeafBlock3_SwitchLeaf4;
reg [31:0] main_NodeBlock9_backedge_state_0_be;
reg [31:0] main_NodeBlock9_backedge_state_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_i_0_be;
reg [31:0] main_NodeBlock9_backedge_i_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_j_0_be;
reg [31:0] main_NodeBlock9_backedge_j_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_a_0_be;
reg [31:0] main_NodeBlock9_backedge_a_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_b_0_be;
reg [31:0] main_NodeBlock9_backedge_b_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_X_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be;
reg [31:0] main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_mesh_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be;
reg [31:0] main_NodeBlock9_backedge_sum_1hop_0_be_reg;
reg [31:0] main_NodeBlock9_backedge_seed_0_be;
reg [31:0] main_NodeBlock9_backedge_seed_0_be_reg;
reg  main_NodeBlock1_Pivot2;
reg  main_NodeBlock_Pivot;
reg  main_LeafBlock_SwitchLeaf;
reg [31:0] main_for_body79_i_2534;
reg [31:0] main_for_body79_i_2534_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body79_arrayidx80;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_body79_arrayidx81;
reg [31:0] main_for_body79_0;
reg [31:0] main_for_body79_0_reg;
reg  main_for_body79_exitcond;
reg  main_for_body79_exitcond_reg;
reg [31:0] main_for_end84_1;
reg [31:0] main_for_end84_1_reg;
reg [31:0] main_for_end84_sub_i;
reg [31:0] main_for_end84_xor2_i;
reg [3:0] main_for_end84_rem;
reg [30:0] main_for_end84_bit_select17;
reg [29:0] main_for_end84_bit_select15;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end84_arrayidx86;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end84_arrayidx86_reg;
reg [31:0] main_for_end84_xor2_i16;
reg [31:0] main_for_end84_xor2_i16_reg;
reg [3:0] main_for_end84_rem88;
reg [3:0] main_for_end84_rem88_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end84_arrayidx89;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end84_arrayidx89_reg;
reg [31:0] main_for_end84_add90;
reg [31:0] main_for_end84_add90_reg;
reg [31:0] main_for_end84_bit_concat18;
reg [31:0] main_for_end84_bit_concat16;
reg [31:0] main_for_end84_sr_add7;
reg [31:0] main_for_end84_sr_add7_reg;
reg [31:0] main_for_end84_arrayidx93_sum;
reg [31:0] main_for_end84_arrayidx93_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_end84_arrayidx94;
reg  main_sw_bb95_cmp96;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx97;
reg [31:0] main_if_end_2;
reg [31:0] main_if_end_2_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx98;
reg [31:0] main_if_end_3;
reg [31:0] main_if_end_3_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx99;
reg [31:0] main_if_end_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx100;
reg [31:0] main_if_end_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx101;
reg [31:0] main_if_end_6;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end_arrayidx102;
reg [31:0] main_if_end_7;
reg  main_if_end_cmp103;
reg [1:0] main_if_end_1;
reg [1:0] main_if_end_1_reg;
reg  main_sw_bb106_cmp107;
reg [31:0] main_if_end109_sub_i14;
reg [31:0] main_if_end109_xor2_i15;
reg [3:0] main_if_end109_rem111;
reg [3:0] main_if_end109_rem111_reg;
reg [31:0] main_if_end109_add112;
reg [31:0] main_if_end109_add112_reg;
reg  main_if_end109_cmp113;
reg  main_if_end109_cmp113_reg;
reg  main_if_end109_cmp115;
reg  main_if_end109_cmp115_reg;
reg [31:0] main_if_then116_xor2_i13;
reg [3:0] main_if_then116_rem118;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then116_arrayidx119;
reg [31:0] main_if_then116_8;
reg [31:0] main_if_then116_8_reg;
reg [31:0] main_if_then116_add120;
reg [31:0] main_if_then116_add120_reg;
reg [31:0] main_if_then116_xor2_i12;
reg [31:0] main_if_then116_xor2_i12_reg;
reg [3:0] main_if_then116_rem123;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then116_arrayidx124;
reg [31:0] main_if_then116_9;
reg [31:0] main_if_then116_9_reg;
reg [31:0] main_if_then116_add125;
reg [31:0] main_if_then116_add126;
reg [31:0] main_if_then116_add126_reg;
reg  main_if_else127_cmp128;
reg [31:0] main_if_then129_xor2_i10;
reg [3:0] main_if_then129_rem131;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then129_arrayidx132;
reg [31:0] main_if_then129_10;
reg [31:0] main_if_then129_10_reg;
reg [31:0] main_if_then129_add133;
reg [31:0] main_if_then129_add133_reg;
reg [31:0] main_if_then129_xor2_i9;
reg [31:0] main_if_then129_xor2_i9_reg;
reg [3:0] main_if_then129_rem136;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then129_arrayidx137;
reg [31:0] main_if_then129_11;
reg [31:0] main_if_then129_11_reg;
reg [31:0] main_if_then129_add138;
reg [31:0] main_if_then129_add139;
reg [31:0] main_if_then129_add139_reg;
reg  main_if_else140_cmp141;
reg  main_if_else140_cmp141_reg;
reg [31:0] main_if_else140_xor2_i7;
reg [3:0] main_if_else140_rem144;
reg [3:0] main_if_else140_rem144_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then142_arrayidx145;
reg [31:0] main_if_then142_12;
reg [31:0] main_if_then142_add146;
reg [31:0] main_if_then142_add146_reg;
reg [31:0] main_if_then142_xor2_i6;
reg [3:0] main_if_then142_rem149;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then142_arrayidx150;
reg [31:0] main_if_then142_13;
reg [31:0] main_if_then142_13_reg;
reg [31:0] main_if_then142_add151;
reg [31:0] main_if_then142_add152;
reg [31:0] main_if_then142_add152_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else153_arrayidx156;
reg [31:0] main_if_else153_14;
reg [31:0] main_if_else153_add157;
reg [31:0] main_if_else153_add157_reg;
reg [31:0] main_if_else153_xor2_i4;
reg [3:0] main_if_else153_rem160;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else153_arrayidx161;
reg [31:0] main_if_else153_15;
reg [31:0] main_if_else153_15_reg;
reg [31:0] main_if_else153_add162;
reg [31:0] main_if_else153_add163;
reg [31:0] main_if_else153_add163_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then169_arrayidx170;
reg [31:0] main_if_then169_16;
reg [31:0] main_if_then169_add171;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then169_arrayidx172;
reg [31:0] main_if_then169_17;
reg [31:0] main_if_then169_add173;
reg  main_NodeBlock16_Pivot17;
reg  main_LeafBlock14_SwitchLeaf15;
reg  main_LeafBlock12_SwitchLeaf13;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then176_arrayidx177;
reg [31:0] main_if_then176_18;
reg [31:0] main_if_then176_add178;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then176_arrayidx179;
reg [31:0] main_if_then176_19;
reg [31:0] main_if_then176_add180;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then183_arrayidx184;
reg [31:0] main_if_then183_20;
reg [31:0] main_if_then183_add185;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then183_arrayidx186;
reg [31:0] main_if_then183_21;
reg [31:0] main_if_then183_add187;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else188_arrayidx189;
reg [31:0] main_if_else188_22;
reg [31:0] main_if_else188_add190;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else188_arrayidx191;
reg [31:0] main_if_else188_23;
reg [31:0] main_if_else188_add192;
reg [31:0] main_if_end196_xi_0;
reg [31:0] main_if_end196_xi_0_reg;
reg [31:0] main_if_end196_xj_0;
reg [31:0] main_if_end196_xj_0_reg;
reg [31:0] main_if_end196_seed_1;
reg [31:0] main_if_end196_seed_1_reg;
reg [30:0] main_if_end196_bit_select13;
reg [29:0] main_if_end196_bit_select11;
reg [31:0] main_if_end196_inc197;
reg [31:0] main_if_end196_inc197_reg;
reg [31:0] main_if_end196_bit_concat14;
reg [31:0] main_if_end196_bit_concat12;
reg [31:0] main_if_end196_sr_add;
reg [31:0] main_if_end196_arrayidx198_sum;
reg [31:0] main_if_end196_arrayidx198_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end196_arrayidx199;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end196_arrayidx199_reg;
reg [31:0] main_if_end196_24;
reg  main_if_end196_cmp200;
reg  main_if_end196_25;
reg  main_if_end196_25_reg;
reg  main_if_end196_or_cond;
reg  main_if_end196_26;
reg  main_if_end196_26_reg;
reg  main_if_end196_or_cond521;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then208_arrayidx211;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then208_arrayidx212;
reg  main_if_else213_cmp214;
reg [31:0] main_if_end218_pos_a_X_1;
reg [31:0] main_if_end218_pos_a_X_1_reg;
reg [31:0] main_if_end218_pos_a_Y_1;
reg [31:0] main_if_end218_pos_a_Y_1_reg;
reg  main_if_end218_cmp219;
reg [1:0] main_if_end218_522;
reg [31:0] main_if_end218_inc197_1;
reg  main_sw_bb223_cmp224;
reg [31:0] main_if_then225_inc226;
reg [31:0] main_if_end227_sub_i1;
reg [31:0] main_if_end227_xor2_i2;
reg [3:0] main_if_end227_rem229;
reg [3:0] main_if_end227_rem229_reg;
reg [31:0] main_if_end227_add230;
reg [31:0] main_if_end227_add230_reg;
reg  main_if_end227_Pivot26;
reg  main_NodeBlock23_Pivot24;
reg  main_LeafBlock21_SwitchLeaf22;
reg  main_LeafBlock19_SwitchLeaf20;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then232_arrayidx233;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then232_arrayidx235;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then239_arrayidx240;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then239_arrayidx242;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then246_arrayidx247;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then246_arrayidx249;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else251_arrayidx252;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_else251_arrayidx254;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end258_pn_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end258_pn_in_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end258_pn520_in;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end258_pn520_in_reg;
reg [31:0] main_if_end258_pn520;
reg [31:0] main_if_end258_pn;
reg [31:0] main_if_end258_xj_1;
reg [31:0] main_if_end258_xj_1_reg;
reg [31:0] main_if_end258_xi_1;
reg [31:0] main_if_end258_xi_1_reg;
reg [30:0] main_if_end258_bit_select9;
reg [29:0] main_if_end258_bit_select7;
reg [31:0] main_if_end258_bit_concat10;
reg [31:0] main_if_end258_bit_concat8;
reg [31:0] main_if_end258_sr_add12;
reg [31:0] main_if_end258_sr_add12_reg;
reg [31:0] main_if_end258_arrayidx260_sum;
reg [31:0] main_if_end258_arrayidx260_sum_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end258_arrayidx261;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end258_arrayidx261_reg;
reg [31:0] main_if_end258_27;
reg  main_if_end258_cmp262;
reg  main_if_end258_28;
reg  main_if_end258_28_reg;
reg  main_if_end258_or_cond523;
reg  main_if_end258_29;
reg  main_if_end258_29_reg;
reg  main_if_end258_or_cond524;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then271_arrayidx274;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_then271_arrayidx275;
reg [31:0] main_if_then271_inc276;
reg [31:0] main_if_then271_inc276_reg;
reg [31:0] main_if_else277_inc259;
reg  main_if_else277_cmp278;
reg  main_sw_bb288_cmp289;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end291_arrayidx292;
reg [31:0] main_if_end291_30;
reg [31:0] main_if_end291_30_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end291_arrayidx293;
reg [31:0] main_if_end291_31;
reg [31:0] main_if_end291_31_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end291_arrayidx294;
reg [31:0] main_if_end291_32;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end291_arrayidx295;
reg [31:0] main_if_end291_33;
reg [31:0] main_if_end291_sub;
reg [31:0] main_if_end291_sub_reg;
reg  main_if_end291_bit_select6;
reg  main_if_end291_bit_select6_reg;
reg [31:0] main_if_end291_mul;
reg [31:0] main_if_end291_mul_reg;
reg [31:0] main_if_end291_mul_sub;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end291_arrayidx299;
reg [31:0] main_if_end291_34;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_if_end291_arrayidx300;
reg [31:0] main_if_end291_35;
reg [31:0] main_if_end291_sub301;
reg [31:0] main_if_end291_sub301_reg;
reg  main_if_end291_bit_select5;
reg  main_if_end291_bit_select5_reg;
reg [31:0] main_if_end291_mul304;
reg [31:0] main_if_end291_mul304_reg;
reg [31:0] main_if_end291_diff_pos_y_0;
reg [31:0] main_if_end291_diff_pos_y_0_reg;
reg [31:0] main_if_end291_add306;
reg [31:0] main_if_end291_add306_reg;
reg [31:0] main_if_end291_newEarly_add308;
reg [31:0] main_if_end291_newEarly_add308_reg;
reg [31:0] main_if_end291_newCurOp_add308;
reg [31:0] main_if_end291_newCurOp_add308_reg;
reg [30:0] main_if_end291_div;
reg [3:0] main_if_end291_rem309;
reg [3:0] main_if_end291_rem309_reg;
reg [30:0] main_if_end291_div311;
reg [3:0] main_if_end291_rem312;
reg [31:0] main_if_end291_add313;
reg [31:0] main_if_end291_add313_reg;
reg [31:0] main_if_end291_newEarly_add314;
reg [31:0] main_if_end291_newEarly_add314_reg;
reg [31:0] main_if_end291_newEarly_sub315;
reg [31:0] main_if_end291_newEarly_add316;
reg [31:0] main_if_end291_newCurOp_add316;
reg [31:0] main_if_end291_inc317;
reg [31:0] main_if_end291_inc317_reg;
reg [2:0] main_for_cond321_preheader_i_3531;
reg [2:0] main_for_cond321_preheader_i_3531_reg;
reg [30:0] main_for_cond321_preheader_bit_select3;
reg [29:0] main_for_cond321_preheader_bit_select1;
reg [31:0] main_for_cond321_preheader_bit_concat4;
reg [31:0] main_for_cond321_preheader_bit_concat2;
reg [31:0] main_for_cond321_preheader_sr_add15;
reg [31:0] main_for_cond321_preheader_sr_add15_reg;
reg [30:0] main_for_cond321_preheader_bit_select;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325;
reg [31:0] main_for_cond321_preheader_bit_concat;
reg [31:0] main_for_cond321_preheader_bit_concat_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_1;
reg [31:0] main_for_cond321_preheader_36;
reg [31:0] main_for_cond321_preheader_36_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_2;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_2_reg;
reg [31:0] main_for_cond321_preheader_37;
reg [31:0] main_for_cond321_preheader_37_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_3;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_3_reg;
reg [31:0] main_for_cond321_preheader_38;
reg [31:0] main_for_cond321_preheader_38_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_4;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_4_reg;
reg [31:0] main_for_cond321_preheader_39;
reg [31:0] main_for_cond321_preheader_39_reg;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_5;
reg [`MEMORY_CONTROLLER_ADDR_SIZE-1:0] main_for_cond321_preheader_arrayidx325_5_reg;
reg [31:0] main_for_cond321_preheader_40;
reg [31:0] main_for_cond321_preheader_41;
reg [31:0] main_for_cond321_preheader_42;
reg [31:0] main_for_cond321_preheader_43;
reg [31:0] main_for_cond321_preheader_44;
reg [31:0] main_for_cond321_preheader_45;
reg [3:0] main_for_cond321_preheader_46;
reg [3:0] main_for_cond321_preheader_46_reg;
reg  main_for_cond321_preheader_exitcond5;
reg  main_for_cond321_preheader_exitcond5_reg;
reg  main_cleanup_retval_0;
reg  main_cleanup_retval_0_reg;
reg [4:0] main_entry_vla515_address_a;
reg  main_entry_vla515_write_enable_a;
reg [31:0] main_entry_vla515_in_a;
wire [31:0] main_entry_vla515_out_a;
reg [4:0] main_entry_vla515_address_b;
reg  main_entry_vla515_write_enable_b;
reg [31:0] main_entry_vla515_in_b;
wire [31:0] main_entry_vla515_out_b;
reg [4:0] main_entry_vla1516_address_a;
reg  main_entry_vla1516_write_enable_a;
reg [31:0] main_entry_vla1516_in_a;
wire [31:0] main_entry_vla1516_out_a;
reg [4:0] main_entry_vla1516_address_b;
reg  main_entry_vla1516_write_enable_b;
reg [31:0] main_entry_vla1516_in_b;
wire [31:0] main_entry_vla1516_out_b;
reg [4:0] main_entry_vla2517_address_a;
reg  main_entry_vla2517_write_enable_a;
reg [31:0] main_entry_vla2517_in_a;
wire [31:0] main_entry_vla2517_out_a;
reg [4:0] main_entry_vla2517_address_b;
reg  main_entry_vla2517_write_enable_b;
reg [31:0] main_entry_vla2517_in_b;
wire [31:0] main_entry_vla2517_out_b;
reg [4:0] main_entry_vla3518_address_a;
reg  main_entry_vla3518_write_enable_a;
reg [31:0] main_entry_vla3518_in_a;
wire [31:0] main_entry_vla3518_out_a;
reg [4:0] main_entry_vla3518_address_b;
reg  main_entry_vla3518_write_enable_b;
reg [31:0] main_entry_vla3518_in_b;
wire [31:0] main_entry_vla3518_out_b;
reg [5:0] main_entry_vla4519_address_a;
reg  main_entry_vla4519_write_enable_a;
reg [31:0] main_entry_vla4519_in_a;
wire [31:0] main_entry_vla4519_out_a;
reg [5:0] main_entry_vla4519_address_b;
reg  main_entry_vla4519_write_enable_b;
reg [31:0] main_entry_vla4519_in_b;
wire [31:0] main_entry_vla4519_out_b;
reg [31:0] main_signed_divide_32_0_op0;
reg [3:0] main_signed_divide_32_0_op1;
reg  main_signed_divide_32_0_inst_clock;
reg  main_signed_divide_32_0_inst_aclr;
reg  main_signed_divide_32_0_inst_clken;
reg [31:0] main_signed_divide_32_0_inst_numer;
reg [3:0] main_signed_divide_32_0_inst_denom;
wire [31:0] main_signed_divide_32_0_inst_quotient;
wire [3:0] main_signed_divide_32_0_inst_remain;
reg [31:0] divide_main_if_end291_div_temp_out;
reg  divide_main_if_end291_div_en;
reg [30:0] divide_main_if_end291_div_out;
reg [30:0] main_signed_divide_32_0;
reg [31:0] main_signed_modulus_32_0_op0;
reg [4:0] main_signed_modulus_32_0_op1;
reg  main_signed_modulus_32_0_inst_clock;
reg  main_signed_modulus_32_0_inst_aclr;
reg  main_signed_modulus_32_0_inst_clken;
reg [31:0] main_signed_modulus_32_0_inst_numer;
reg [4:0] main_signed_modulus_32_0_inst_denom;
wire [31:0] main_signed_modulus_32_0_inst_quotient;
wire [4:0] main_signed_modulus_32_0_inst_remain;
reg [4:0] divide_main_if_end291_rem309_temp_out;
reg  divide_main_if_end291_rem309_en;
reg [3:0] divide_main_if_end291_rem309_out;
reg [3:0] main_signed_modulus_32_0;
wire [3:0] main_NodeBlock9_Pivot10_op1_temp;
wire [4:0] main_NodeBlock7_Pivot8_op1_temp;
wire [4:0] main_NodeBlock5_Pivot6_op1_temp;
wire [2:0] main_NodeBlock1_Pivot2_op1_temp;
wire [3:0] main_NodeBlock_Pivot_op1_temp;
reg [30:0] main_for_end84_rem_width_extended;
wire  main_for_end84_bit_concat18_bit_select_operand_2;
wire [1:0] main_for_end84_bit_concat16_bit_select_operand_2;
wire [3:0] main_NodeBlock16_Pivot17_op1_temp;
wire  main_if_end196_bit_concat14_bit_select_operand_2;
wire [1:0] main_if_end196_bit_concat12_bit_select_operand_2;
wire [7:0] main_if_else213_cmp214_op1_temp;
wire [2:0] main_if_end227_Pivot26_op1_temp;
wire [3:0] main_NodeBlock23_Pivot24_op1_temp;
wire  main_if_end258_bit_concat10_bit_select_operand_2;
wire [1:0] main_if_end258_bit_concat8_bit_select_operand_2;
wire [7:0] main_if_else277_cmp278_op1_temp;
reg [30:0] main_for_cond321_preheader_i_3531_reg_width_extended;
wire  main_for_cond321_preheader_bit_concat4_bit_select_operand_2;
wire [1:0] main_for_cond321_preheader_bit_concat2_bit_select_operand_2;
wire  main_for_cond321_preheader_bit_concat_bit_select_operand_2;

/*   %div = sdiv i32 %mul.sub, 2, !dbg !337, !MSB !155, !LSB !67, !extendFrom !175*/
lpm_divide main_signed_divide_32_0_inst (
	.clock (main_signed_divide_32_0_inst_clock),
	.aclr (main_signed_divide_32_0_inst_aclr),
	.clken (main_signed_divide_32_0_inst_clken),
	.numer (main_signed_divide_32_0_inst_numer),
	.denom (main_signed_divide_32_0_inst_denom),
	.quotient (main_signed_divide_32_0_inst_quotient),
	.remain (main_signed_divide_32_0_inst_remain)
);

defparam
	main_signed_divide_32_0_inst.lpm_widthn = 32,
	main_signed_divide_32_0_inst.lpm_widthd = 4,
	main_signed_divide_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_divide_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_divide_32_0_inst.lpm_pipeline = 32;

/*   %rem309 = srem i32 %mul.sub, 2, !dbg !337, !MSB !338, !LSB !67, !extendFrom !338*/
lpm_divide main_signed_modulus_32_0_inst (
	.clock (main_signed_modulus_32_0_inst_clock),
	.aclr (main_signed_modulus_32_0_inst_aclr),
	.clken (main_signed_modulus_32_0_inst_clken),
	.numer (main_signed_modulus_32_0_inst_numer),
	.denom (main_signed_modulus_32_0_inst_denom),
	.quotient (main_signed_modulus_32_0_inst_quotient),
	.remain (main_signed_modulus_32_0_inst_remain)
);

defparam
	main_signed_modulus_32_0_inst.lpm_widthn = 32,
	main_signed_modulus_32_0_inst.lpm_widthd = 5,
	main_signed_modulus_32_0_inst.lpm_drepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_nrepresentation = "SIGNED",
	main_signed_modulus_32_0_inst.lpm_hint = "LPM_REMAINDERPOSITIVE=FALSE",
	main_signed_modulus_32_0_inst.lpm_pipeline = 32;



//   %vla515 = alloca [32 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla515 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla515_address_a ),
	.wren_a( main_entry_vla515_write_enable_a ),
	.data_a( main_entry_vla515_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla515_out_a ),
	.address_b( main_entry_vla515_address_b ),
	.wren_b( main_entry_vla515_write_enable_b ),
	.data_b( main_entry_vla515_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla515_out_b )
);
defparam main_entry_vla515.width_a = 32;
defparam main_entry_vla515.widthad_a = 5;
defparam main_entry_vla515.width_be_a = 4;
defparam main_entry_vla515.numwords_a = 32;
defparam main_entry_vla515.width_b = 32;
defparam main_entry_vla515.widthad_b = 5;
defparam main_entry_vla515.width_be_b = 4;
defparam main_entry_vla515.numwords_b = 32;
defparam main_entry_vla515.latency = 1;


//   %vla1516 = alloca [32 x i32], align 4, !dbg !65, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla1516 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla1516_address_a ),
	.wren_a( main_entry_vla1516_write_enable_a ),
	.data_a( main_entry_vla1516_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla1516_out_a ),
	.address_b( main_entry_vla1516_address_b ),
	.wren_b( main_entry_vla1516_write_enable_b ),
	.data_b( main_entry_vla1516_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla1516_out_b )
);
defparam main_entry_vla1516.width_a = 32;
defparam main_entry_vla1516.widthad_a = 5;
defparam main_entry_vla1516.width_be_a = 4;
defparam main_entry_vla1516.numwords_a = 32;
defparam main_entry_vla1516.width_b = 32;
defparam main_entry_vla1516.widthad_b = 5;
defparam main_entry_vla1516.width_be_b = 4;
defparam main_entry_vla1516.numwords_b = 32;
defparam main_entry_vla1516.latency = 1;


//   %vla2517 = alloca [27 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla2517 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla2517_address_a ),
	.wren_a( main_entry_vla2517_write_enable_a ),
	.data_a( main_entry_vla2517_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla2517_out_a ),
	.address_b( main_entry_vla2517_address_b ),
	.wren_b( main_entry_vla2517_write_enable_b ),
	.data_b( main_entry_vla2517_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla2517_out_b )
);
defparam main_entry_vla2517.width_a = 32;
defparam main_entry_vla2517.widthad_a = 5;
defparam main_entry_vla2517.width_be_a = 4;
defparam main_entry_vla2517.numwords_a = 27;
defparam main_entry_vla2517.width_b = 32;
defparam main_entry_vla2517.widthad_b = 5;
defparam main_entry_vla2517.width_be_b = 4;
defparam main_entry_vla2517.numwords_b = 27;
defparam main_entry_vla2517.latency = 1;


//   %vla3518 = alloca [27 x i32], align 4, !dbg !68, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla3518 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla3518_address_a ),
	.wren_a( main_entry_vla3518_write_enable_a ),
	.data_a( main_entry_vla3518_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla3518_out_a ),
	.address_b( main_entry_vla3518_address_b ),
	.wren_b( main_entry_vla3518_write_enable_b ),
	.data_b( main_entry_vla3518_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla3518_out_b )
);
defparam main_entry_vla3518.width_a = 32;
defparam main_entry_vla3518.widthad_a = 5;
defparam main_entry_vla3518.width_be_a = 4;
defparam main_entry_vla3518.numwords_a = 27;
defparam main_entry_vla3518.width_b = 32;
defparam main_entry_vla3518.widthad_b = 5;
defparam main_entry_vla3518.width_be_b = 4;
defparam main_entry_vla3518.numwords_b = 27;
defparam main_entry_vla3518.latency = 1;


//   %vla4519 = alloca [36 x i32], align 4, !dbg !69, !MSB !66, !LSB !67, !extendFrom !66
ram_dual_port main_entry_vla4519 (
	.clk( clk ),
	.clken( !fsm_stall ),
	.address_a( main_entry_vla4519_address_a ),
	.wren_a( main_entry_vla4519_write_enable_a ),
	.data_a( main_entry_vla4519_in_a ),
	.byteena_a( {4{1'b1}} ),
	.q_a( main_entry_vla4519_out_a ),
	.address_b( main_entry_vla4519_address_b ),
	.wren_b( main_entry_vla4519_write_enable_b ),
	.data_b( main_entry_vla4519_in_b ),
	.byteena_b( {4{1'b1}} ),
	.q_b( main_entry_vla4519_out_b )
);
defparam main_entry_vla4519.width_a = 32;
defparam main_entry_vla4519.widthad_a = 6;
defparam main_entry_vla4519.width_be_a = 4;
defparam main_entry_vla4519.numwords_a = 36;
defparam main_entry_vla4519.width_b = 32;
defparam main_entry_vla4519.widthad_b = 6;
defparam main_entry_vla4519.width_be_b = 4;
defparam main_entry_vla4519.numwords_b = 36;
defparam main_entry_vla4519.latency = 1;

/* Unsynthesizable Statements */
/* synthesis translate_off */
always @(posedge clk)
	if (!fsm_stall) begin
	if ((cur_state == LEGUP_F_main_BB_if_then215_297)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_if_then279_350)) begin
		$write("No solution\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_391)) begin
		$write("%3d ", $signed(main_for_cond321_preheader_40));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond321_preheader_40) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_391)) begin
		$write("%3d ", $signed(main_for_cond321_preheader_41));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond321_preheader_41) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_392)) begin
		$write("%3d ", $signed(main_for_cond321_preheader_42));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond321_preheader_42) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_392)) begin
		$write("%3d ", $signed(main_for_cond321_preheader_43));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond321_preheader_43) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_393)) begin
		$write("%3d ", $signed(main_for_cond321_preheader_44));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond321_preheader_44) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_393)) begin
		$write("%3d ", $signed(main_for_cond321_preheader_45));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_for_cond321_preheader_45) === 1'bX) finish <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_393)) begin
		$write("\n");
	end
	if ((cur_state == LEGUP_F_main_BB_for_end333_394)) begin
		$write("\nEvaluation = %d\nEvaluation 1-hop = %d\n", $signed(main_NodeBlock9_sum_mesh_0_reg), $signed(main_NodeBlock9_sum_1hop_0_reg));
		// to fix quartus warning
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_mesh_0_reg) === 1'bX) finish <= 0;
		if (reset == 1'b0 && ^(main_NodeBlock9_sum_1hop_0_reg) === 1'bX) finish <= 0;
	end
end
/* synthesis translate_on */
always @(posedge clk) begin
if (reset == 1'b1)
	cur_state <= LEGUP_0;
else if (!fsm_stall)
	cur_state <= next_state;
end

always @(*)
begin
next_state = cur_state;
case(cur_state)  /* synthesis parallel_case */
LEGUP_0:
	if ((fsm_stall == 1'd0) && (start == 1'd1))
		next_state = LEGUP_F_main_BB_entry_1;
LEGUP_F_main_BB_LeafBlock12_281:
	if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then176_282;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock12_SwitchLeaf13 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else188_288;
LEGUP_F_main_BB_LeafBlock14_280:
	if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then183_285;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock14_SwitchLeaf15 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else188_288;
LEGUP_F_main_BB_LeafBlock19_336:
	if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then232_337;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock19_SwitchLeaf20 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else251_340;
LEGUP_F_main_BB_LeafBlock21_335:
	if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then246_339;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock21_SwitchLeaf22 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else251_340;
LEGUP_F_main_BB_LeafBlock3_5:
	if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd1))
		next_state = LEGUP_F_main_BB_for_cond321_preheader_preheader_7;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock3_SwitchLeaf4 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_LeafBlock_10:
	if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb_11;
	else if ((fsm_stall == 1'd0) && (main_LeafBlock_SwitchLeaf == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_NodeBlock16_279:
	if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock12_281;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock16_Pivot17 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock14_280;
LEGUP_F_main_BB_NodeBlock1_8:
	if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock_10;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock1_Pivot2 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock_9;
LEGUP_F_main_BB_NodeBlock23_334:
	if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then239_338;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock23_Pivot24 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock21_335;
LEGUP_F_main_BB_NodeBlock5_4:
	if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb288_351;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock5_Pivot6 == 1'd0))
		next_state = LEGUP_F_main_BB_LeafBlock3_5;
LEGUP_F_main_BB_NodeBlock7_3:
	if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb223_299;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock7_Pivot8 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock5_4;
LEGUP_F_main_BB_NodeBlock9_2:
	if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock1_8;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock9_Pivot10 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock7_3;
LEGUP_F_main_BB_NodeBlock9_backedge_6:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_NodeBlock_9:
	if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd1))
		next_state = LEGUP_F_main_BB_sw_bb95_68;
	else if ((fsm_stall == 1'd0) && (main_NodeBlock_Pivot == 1'd0))
		next_state = LEGUP_F_main_BB_sw_bb106_72;
LEGUP_F_main_BB_cleanup_395:
		next_state = LEGUP_0;
LEGUP_F_main_BB_entry_1:
		next_state = LEGUP_F_main_BB_NodeBlock9_2;
LEGUP_F_main_BB_for_body79_30:
		next_state = LEGUP_F_main_BB_for_body79_31;
LEGUP_F_main_BB_for_body79_31:
	if ((fsm_stall == 1'd0) && (main_for_body79_exitcond_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end84_32;
	else if ((fsm_stall == 1'd0) && (main_for_body79_exitcond_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_body79_30;
LEGUP_F_main_BB_for_cond321_preheader_389:
		next_state = LEGUP_F_main_BB_for_cond321_preheader_390;
LEGUP_F_main_BB_for_cond321_preheader_390:
		next_state = LEGUP_F_main_BB_for_cond321_preheader_391;
LEGUP_F_main_BB_for_cond321_preheader_391:
		next_state = LEGUP_F_main_BB_for_cond321_preheader_392;
LEGUP_F_main_BB_for_cond321_preheader_392:
		next_state = LEGUP_F_main_BB_for_cond321_preheader_393;
LEGUP_F_main_BB_for_cond321_preheader_393:
	if ((fsm_stall == 1'd0) && (main_for_cond321_preheader_exitcond5_reg == 1'd1))
		next_state = LEGUP_F_main_BB_for_end333_394;
	else if ((fsm_stall == 1'd0) && (main_for_cond321_preheader_exitcond5_reg == 1'd0))
		next_state = LEGUP_F_main_BB_for_cond321_preheader_389;
LEGUP_F_main_BB_for_cond321_preheader_preheader_7:
		next_state = LEGUP_F_main_BB_for_cond321_preheader_389;
LEGUP_F_main_BB_for_end333_394:
		next_state = LEGUP_F_main_BB_cleanup_395;
LEGUP_F_main_BB_for_end84_32:
		next_state = LEGUP_F_main_BB_for_end84_33;
LEGUP_F_main_BB_for_end84_33:
		next_state = LEGUP_F_main_BB_for_end84_34;
LEGUP_F_main_BB_for_end84_34:
		next_state = LEGUP_F_main_BB_for_end84_35;
LEGUP_F_main_BB_for_end84_35:
		next_state = LEGUP_F_main_BB_for_end84_36;
LEGUP_F_main_BB_for_end84_36:
		next_state = LEGUP_F_main_BB_for_end84_37;
LEGUP_F_main_BB_for_end84_37:
		next_state = LEGUP_F_main_BB_for_end84_38;
LEGUP_F_main_BB_for_end84_38:
		next_state = LEGUP_F_main_BB_for_end84_39;
LEGUP_F_main_BB_for_end84_39:
		next_state = LEGUP_F_main_BB_for_end84_40;
LEGUP_F_main_BB_for_end84_40:
		next_state = LEGUP_F_main_BB_for_end84_41;
LEGUP_F_main_BB_for_end84_41:
		next_state = LEGUP_F_main_BB_for_end84_42;
LEGUP_F_main_BB_for_end84_42:
		next_state = LEGUP_F_main_BB_for_end84_43;
LEGUP_F_main_BB_for_end84_43:
		next_state = LEGUP_F_main_BB_for_end84_44;
LEGUP_F_main_BB_for_end84_44:
		next_state = LEGUP_F_main_BB_for_end84_45;
LEGUP_F_main_BB_for_end84_45:
		next_state = LEGUP_F_main_BB_for_end84_46;
LEGUP_F_main_BB_for_end84_46:
		next_state = LEGUP_F_main_BB_for_end84_47;
LEGUP_F_main_BB_for_end84_47:
		next_state = LEGUP_F_main_BB_for_end84_48;
LEGUP_F_main_BB_for_end84_48:
		next_state = LEGUP_F_main_BB_for_end84_49;
LEGUP_F_main_BB_for_end84_49:
		next_state = LEGUP_F_main_BB_for_end84_50;
LEGUP_F_main_BB_for_end84_50:
		next_state = LEGUP_F_main_BB_for_end84_51;
LEGUP_F_main_BB_for_end84_51:
		next_state = LEGUP_F_main_BB_for_end84_52;
LEGUP_F_main_BB_for_end84_52:
		next_state = LEGUP_F_main_BB_for_end84_53;
LEGUP_F_main_BB_for_end84_53:
		next_state = LEGUP_F_main_BB_for_end84_54;
LEGUP_F_main_BB_for_end84_54:
		next_state = LEGUP_F_main_BB_for_end84_55;
LEGUP_F_main_BB_for_end84_55:
		next_state = LEGUP_F_main_BB_for_end84_56;
LEGUP_F_main_BB_for_end84_56:
		next_state = LEGUP_F_main_BB_for_end84_57;
LEGUP_F_main_BB_for_end84_57:
		next_state = LEGUP_F_main_BB_for_end84_58;
LEGUP_F_main_BB_for_end84_58:
		next_state = LEGUP_F_main_BB_for_end84_59;
LEGUP_F_main_BB_for_end84_59:
		next_state = LEGUP_F_main_BB_for_end84_60;
LEGUP_F_main_BB_for_end84_60:
		next_state = LEGUP_F_main_BB_for_end84_61;
LEGUP_F_main_BB_for_end84_61:
		next_state = LEGUP_F_main_BB_for_end84_62;
LEGUP_F_main_BB_for_end84_62:
		next_state = LEGUP_F_main_BB_for_end84_63;
LEGUP_F_main_BB_for_end84_63:
		next_state = LEGUP_F_main_BB_for_end84_64;
LEGUP_F_main_BB_for_end84_64:
		next_state = LEGUP_F_main_BB_for_end84_65;
LEGUP_F_main_BB_for_end84_65:
		next_state = LEGUP_F_main_BB_for_end84_66;
LEGUP_F_main_BB_for_end84_66:
		next_state = LEGUP_F_main_BB_for_end84_67;
LEGUP_F_main_BB_for_end84_67:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_else127_141:
	if ((fsm_stall == 1'd0) && (main_if_else127_cmp128 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then129_142;
	else if ((fsm_stall == 1'd0) && (main_if_else127_cmp128 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else140_176;
LEGUP_F_main_BB_if_else140_176:
		next_state = LEGUP_F_main_BB_if_else140_177;
LEGUP_F_main_BB_if_else140_177:
		next_state = LEGUP_F_main_BB_if_else140_178;
LEGUP_F_main_BB_if_else140_178:
		next_state = LEGUP_F_main_BB_if_else140_179;
LEGUP_F_main_BB_if_else140_179:
		next_state = LEGUP_F_main_BB_if_else140_180;
LEGUP_F_main_BB_if_else140_180:
		next_state = LEGUP_F_main_BB_if_else140_181;
LEGUP_F_main_BB_if_else140_181:
		next_state = LEGUP_F_main_BB_if_else140_182;
LEGUP_F_main_BB_if_else140_182:
		next_state = LEGUP_F_main_BB_if_else140_183;
LEGUP_F_main_BB_if_else140_183:
		next_state = LEGUP_F_main_BB_if_else140_184;
LEGUP_F_main_BB_if_else140_184:
		next_state = LEGUP_F_main_BB_if_else140_185;
LEGUP_F_main_BB_if_else140_185:
		next_state = LEGUP_F_main_BB_if_else140_186;
LEGUP_F_main_BB_if_else140_186:
		next_state = LEGUP_F_main_BB_if_else140_187;
LEGUP_F_main_BB_if_else140_187:
		next_state = LEGUP_F_main_BB_if_else140_188;
LEGUP_F_main_BB_if_else140_188:
		next_state = LEGUP_F_main_BB_if_else140_189;
LEGUP_F_main_BB_if_else140_189:
		next_state = LEGUP_F_main_BB_if_else140_190;
LEGUP_F_main_BB_if_else140_190:
		next_state = LEGUP_F_main_BB_if_else140_191;
LEGUP_F_main_BB_if_else140_191:
		next_state = LEGUP_F_main_BB_if_else140_192;
LEGUP_F_main_BB_if_else140_192:
		next_state = LEGUP_F_main_BB_if_else140_193;
LEGUP_F_main_BB_if_else140_193:
		next_state = LEGUP_F_main_BB_if_else140_194;
LEGUP_F_main_BB_if_else140_194:
		next_state = LEGUP_F_main_BB_if_else140_195;
LEGUP_F_main_BB_if_else140_195:
		next_state = LEGUP_F_main_BB_if_else140_196;
LEGUP_F_main_BB_if_else140_196:
		next_state = LEGUP_F_main_BB_if_else140_197;
LEGUP_F_main_BB_if_else140_197:
		next_state = LEGUP_F_main_BB_if_else140_198;
LEGUP_F_main_BB_if_else140_198:
		next_state = LEGUP_F_main_BB_if_else140_199;
LEGUP_F_main_BB_if_else140_199:
		next_state = LEGUP_F_main_BB_if_else140_200;
LEGUP_F_main_BB_if_else140_200:
		next_state = LEGUP_F_main_BB_if_else140_201;
LEGUP_F_main_BB_if_else140_201:
		next_state = LEGUP_F_main_BB_if_else140_202;
LEGUP_F_main_BB_if_else140_202:
		next_state = LEGUP_F_main_BB_if_else140_203;
LEGUP_F_main_BB_if_else140_203:
		next_state = LEGUP_F_main_BB_if_else140_204;
LEGUP_F_main_BB_if_else140_204:
		next_state = LEGUP_F_main_BB_if_else140_205;
LEGUP_F_main_BB_if_else140_205:
		next_state = LEGUP_F_main_BB_if_else140_206;
LEGUP_F_main_BB_if_else140_206:
		next_state = LEGUP_F_main_BB_if_else140_207;
LEGUP_F_main_BB_if_else140_207:
		next_state = LEGUP_F_main_BB_if_else140_208;
LEGUP_F_main_BB_if_else140_208:
	if ((fsm_stall == 1'd0) && (main_if_else140_cmp141_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then142_209;
	else if ((fsm_stall == 1'd0) && (main_if_else140_cmp141_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else153_242;
LEGUP_F_main_BB_if_else153_242:
		next_state = LEGUP_F_main_BB_if_else153_243;
LEGUP_F_main_BB_if_else153_243:
		next_state = LEGUP_F_main_BB_if_else153_244;
LEGUP_F_main_BB_if_else153_244:
		next_state = LEGUP_F_main_BB_if_else153_245;
LEGUP_F_main_BB_if_else153_245:
		next_state = LEGUP_F_main_BB_if_else153_246;
LEGUP_F_main_BB_if_else153_246:
		next_state = LEGUP_F_main_BB_if_else153_247;
LEGUP_F_main_BB_if_else153_247:
		next_state = LEGUP_F_main_BB_if_else153_248;
LEGUP_F_main_BB_if_else153_248:
		next_state = LEGUP_F_main_BB_if_else153_249;
LEGUP_F_main_BB_if_else153_249:
		next_state = LEGUP_F_main_BB_if_else153_250;
LEGUP_F_main_BB_if_else153_250:
		next_state = LEGUP_F_main_BB_if_else153_251;
LEGUP_F_main_BB_if_else153_251:
		next_state = LEGUP_F_main_BB_if_else153_252;
LEGUP_F_main_BB_if_else153_252:
		next_state = LEGUP_F_main_BB_if_else153_253;
LEGUP_F_main_BB_if_else153_253:
		next_state = LEGUP_F_main_BB_if_else153_254;
LEGUP_F_main_BB_if_else153_254:
		next_state = LEGUP_F_main_BB_if_else153_255;
LEGUP_F_main_BB_if_else153_255:
		next_state = LEGUP_F_main_BB_if_else153_256;
LEGUP_F_main_BB_if_else153_256:
		next_state = LEGUP_F_main_BB_if_else153_257;
LEGUP_F_main_BB_if_else153_257:
		next_state = LEGUP_F_main_BB_if_else153_258;
LEGUP_F_main_BB_if_else153_258:
		next_state = LEGUP_F_main_BB_if_else153_259;
LEGUP_F_main_BB_if_else153_259:
		next_state = LEGUP_F_main_BB_if_else153_260;
LEGUP_F_main_BB_if_else153_260:
		next_state = LEGUP_F_main_BB_if_else153_261;
LEGUP_F_main_BB_if_else153_261:
		next_state = LEGUP_F_main_BB_if_else153_262;
LEGUP_F_main_BB_if_else153_262:
		next_state = LEGUP_F_main_BB_if_else153_263;
LEGUP_F_main_BB_if_else153_263:
		next_state = LEGUP_F_main_BB_if_else153_264;
LEGUP_F_main_BB_if_else153_264:
		next_state = LEGUP_F_main_BB_if_else153_265;
LEGUP_F_main_BB_if_else153_265:
		next_state = LEGUP_F_main_BB_if_else153_266;
LEGUP_F_main_BB_if_else153_266:
		next_state = LEGUP_F_main_BB_if_else153_267;
LEGUP_F_main_BB_if_else153_267:
		next_state = LEGUP_F_main_BB_if_else153_268;
LEGUP_F_main_BB_if_else153_268:
		next_state = LEGUP_F_main_BB_if_else153_269;
LEGUP_F_main_BB_if_else153_269:
		next_state = LEGUP_F_main_BB_if_else153_270;
LEGUP_F_main_BB_if_else153_270:
		next_state = LEGUP_F_main_BB_if_else153_271;
LEGUP_F_main_BB_if_else153_271:
		next_state = LEGUP_F_main_BB_if_else153_272;
LEGUP_F_main_BB_if_else153_272:
		next_state = LEGUP_F_main_BB_if_else153_273;
LEGUP_F_main_BB_if_else153_273:
		next_state = LEGUP_F_main_BB_if_else153_274;
LEGUP_F_main_BB_if_else153_274:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_else167_275:
	if ((fsm_stall == 1'd0) && (main_if_end109_cmp115_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then169_276;
	else if ((fsm_stall == 1'd0) && (main_if_end109_cmp115_reg == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock16_279;
LEGUP_F_main_BB_if_else188_288:
		next_state = LEGUP_F_main_BB_if_else188_289;
LEGUP_F_main_BB_if_else188_289:
		next_state = LEGUP_F_main_BB_if_else188_290;
LEGUP_F_main_BB_if_else188_290:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_else213_296:
	if ((fsm_stall == 1'd0) && (main_if_else213_cmp214 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then215_297;
	else if ((fsm_stall == 1'd0) && (main_if_else213_cmp214 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end218_298;
LEGUP_F_main_BB_if_else251_340:
		next_state = LEGUP_F_main_BB_if_end258_341;
LEGUP_F_main_BB_if_else277_349:
	if ((fsm_stall == 1'd0) && (main_if_else277_cmp278 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then279_350;
	else if ((fsm_stall == 1'd0) && (main_if_else277_cmp278 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end109_100:
		next_state = LEGUP_F_main_BB_if_end109_101;
LEGUP_F_main_BB_if_end109_101:
		next_state = LEGUP_F_main_BB_if_end109_102;
LEGUP_F_main_BB_if_end109_102:
		next_state = LEGUP_F_main_BB_if_end109_103;
LEGUP_F_main_BB_if_end109_103:
		next_state = LEGUP_F_main_BB_if_end109_104;
LEGUP_F_main_BB_if_end109_104:
		next_state = LEGUP_F_main_BB_if_end109_105;
LEGUP_F_main_BB_if_end109_105:
	if ((fsm_stall == 1'd0) && (main_if_end109_cmp113_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then114_106;
	else if ((fsm_stall == 1'd0) && (main_if_end109_cmp113_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else167_275;
LEGUP_F_main_BB_if_end109_73:
		next_state = LEGUP_F_main_BB_if_end109_74;
LEGUP_F_main_BB_if_end109_74:
		next_state = LEGUP_F_main_BB_if_end109_75;
LEGUP_F_main_BB_if_end109_75:
		next_state = LEGUP_F_main_BB_if_end109_76;
LEGUP_F_main_BB_if_end109_76:
		next_state = LEGUP_F_main_BB_if_end109_77;
LEGUP_F_main_BB_if_end109_77:
		next_state = LEGUP_F_main_BB_if_end109_78;
LEGUP_F_main_BB_if_end109_78:
		next_state = LEGUP_F_main_BB_if_end109_79;
LEGUP_F_main_BB_if_end109_79:
		next_state = LEGUP_F_main_BB_if_end109_80;
LEGUP_F_main_BB_if_end109_80:
		next_state = LEGUP_F_main_BB_if_end109_81;
LEGUP_F_main_BB_if_end109_81:
		next_state = LEGUP_F_main_BB_if_end109_82;
LEGUP_F_main_BB_if_end109_82:
		next_state = LEGUP_F_main_BB_if_end109_83;
LEGUP_F_main_BB_if_end109_83:
		next_state = LEGUP_F_main_BB_if_end109_84;
LEGUP_F_main_BB_if_end109_84:
		next_state = LEGUP_F_main_BB_if_end109_85;
LEGUP_F_main_BB_if_end109_85:
		next_state = LEGUP_F_main_BB_if_end109_86;
LEGUP_F_main_BB_if_end109_86:
		next_state = LEGUP_F_main_BB_if_end109_87;
LEGUP_F_main_BB_if_end109_87:
		next_state = LEGUP_F_main_BB_if_end109_88;
LEGUP_F_main_BB_if_end109_88:
		next_state = LEGUP_F_main_BB_if_end109_89;
LEGUP_F_main_BB_if_end109_89:
		next_state = LEGUP_F_main_BB_if_end109_90;
LEGUP_F_main_BB_if_end109_90:
		next_state = LEGUP_F_main_BB_if_end109_91;
LEGUP_F_main_BB_if_end109_91:
		next_state = LEGUP_F_main_BB_if_end109_92;
LEGUP_F_main_BB_if_end109_92:
		next_state = LEGUP_F_main_BB_if_end109_93;
LEGUP_F_main_BB_if_end109_93:
		next_state = LEGUP_F_main_BB_if_end109_94;
LEGUP_F_main_BB_if_end109_94:
		next_state = LEGUP_F_main_BB_if_end109_95;
LEGUP_F_main_BB_if_end109_95:
		next_state = LEGUP_F_main_BB_if_end109_96;
LEGUP_F_main_BB_if_end109_96:
		next_state = LEGUP_F_main_BB_if_end109_97;
LEGUP_F_main_BB_if_end109_97:
		next_state = LEGUP_F_main_BB_if_end109_98;
LEGUP_F_main_BB_if_end109_98:
		next_state = LEGUP_F_main_BB_if_end109_99;
LEGUP_F_main_BB_if_end109_99:
		next_state = LEGUP_F_main_BB_if_end109_100;
LEGUP_F_main_BB_if_end196_291:
		next_state = LEGUP_F_main_BB_if_end196_292;
LEGUP_F_main_BB_if_end196_292:
		next_state = LEGUP_F_main_BB_if_end196_293;
LEGUP_F_main_BB_if_end196_293:
	if ((fsm_stall == 1'd0) && (main_if_end196_or_cond521 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then208_294;
	else if ((fsm_stall == 1'd0) && (main_if_end196_or_cond521 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else213_296;
LEGUP_F_main_BB_if_end218_298:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end227_301:
		next_state = LEGUP_F_main_BB_if_end227_302;
LEGUP_F_main_BB_if_end227_302:
		next_state = LEGUP_F_main_BB_if_end227_303;
LEGUP_F_main_BB_if_end227_303:
		next_state = LEGUP_F_main_BB_if_end227_304;
LEGUP_F_main_BB_if_end227_304:
		next_state = LEGUP_F_main_BB_if_end227_305;
LEGUP_F_main_BB_if_end227_305:
		next_state = LEGUP_F_main_BB_if_end227_306;
LEGUP_F_main_BB_if_end227_306:
		next_state = LEGUP_F_main_BB_if_end227_307;
LEGUP_F_main_BB_if_end227_307:
		next_state = LEGUP_F_main_BB_if_end227_308;
LEGUP_F_main_BB_if_end227_308:
		next_state = LEGUP_F_main_BB_if_end227_309;
LEGUP_F_main_BB_if_end227_309:
		next_state = LEGUP_F_main_BB_if_end227_310;
LEGUP_F_main_BB_if_end227_310:
		next_state = LEGUP_F_main_BB_if_end227_311;
LEGUP_F_main_BB_if_end227_311:
		next_state = LEGUP_F_main_BB_if_end227_312;
LEGUP_F_main_BB_if_end227_312:
		next_state = LEGUP_F_main_BB_if_end227_313;
LEGUP_F_main_BB_if_end227_313:
		next_state = LEGUP_F_main_BB_if_end227_314;
LEGUP_F_main_BB_if_end227_314:
		next_state = LEGUP_F_main_BB_if_end227_315;
LEGUP_F_main_BB_if_end227_315:
		next_state = LEGUP_F_main_BB_if_end227_316;
LEGUP_F_main_BB_if_end227_316:
		next_state = LEGUP_F_main_BB_if_end227_317;
LEGUP_F_main_BB_if_end227_317:
		next_state = LEGUP_F_main_BB_if_end227_318;
LEGUP_F_main_BB_if_end227_318:
		next_state = LEGUP_F_main_BB_if_end227_319;
LEGUP_F_main_BB_if_end227_319:
		next_state = LEGUP_F_main_BB_if_end227_320;
LEGUP_F_main_BB_if_end227_320:
		next_state = LEGUP_F_main_BB_if_end227_321;
LEGUP_F_main_BB_if_end227_321:
		next_state = LEGUP_F_main_BB_if_end227_322;
LEGUP_F_main_BB_if_end227_322:
		next_state = LEGUP_F_main_BB_if_end227_323;
LEGUP_F_main_BB_if_end227_323:
		next_state = LEGUP_F_main_BB_if_end227_324;
LEGUP_F_main_BB_if_end227_324:
		next_state = LEGUP_F_main_BB_if_end227_325;
LEGUP_F_main_BB_if_end227_325:
		next_state = LEGUP_F_main_BB_if_end227_326;
LEGUP_F_main_BB_if_end227_326:
		next_state = LEGUP_F_main_BB_if_end227_327;
LEGUP_F_main_BB_if_end227_327:
		next_state = LEGUP_F_main_BB_if_end227_328;
LEGUP_F_main_BB_if_end227_328:
		next_state = LEGUP_F_main_BB_if_end227_329;
LEGUP_F_main_BB_if_end227_329:
		next_state = LEGUP_F_main_BB_if_end227_330;
LEGUP_F_main_BB_if_end227_330:
		next_state = LEGUP_F_main_BB_if_end227_331;
LEGUP_F_main_BB_if_end227_331:
		next_state = LEGUP_F_main_BB_if_end227_332;
LEGUP_F_main_BB_if_end227_332:
		next_state = LEGUP_F_main_BB_if_end227_333;
LEGUP_F_main_BB_if_end227_333:
	if ((fsm_stall == 1'd0) && (main_if_end227_Pivot26 == 1'd1))
		next_state = LEGUP_F_main_BB_LeafBlock19_336;
	else if ((fsm_stall == 1'd0) && (main_if_end227_Pivot26 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock23_334;
LEGUP_F_main_BB_if_end258_341:
		next_state = LEGUP_F_main_BB_if_end258_342;
LEGUP_F_main_BB_if_end258_342:
		next_state = LEGUP_F_main_BB_if_end258_343;
LEGUP_F_main_BB_if_end258_343:
		next_state = LEGUP_F_main_BB_if_end258_344;
LEGUP_F_main_BB_if_end258_344:
		next_state = LEGUP_F_main_BB_if_end258_345;
LEGUP_F_main_BB_if_end258_345:
		next_state = LEGUP_F_main_BB_if_end258_346;
LEGUP_F_main_BB_if_end258_346:
	if ((fsm_stall == 1'd0) && (main_if_end258_or_cond524 == 1'd1))
		next_state = LEGUP_F_main_BB_if_then271_347;
	else if ((fsm_stall == 1'd0) && (main_if_end258_or_cond524 == 1'd0))
		next_state = LEGUP_F_main_BB_if_else277_349;
LEGUP_F_main_BB_if_end291_352:
		next_state = LEGUP_F_main_BB_if_end291_353;
LEGUP_F_main_BB_if_end291_353:
		next_state = LEGUP_F_main_BB_if_end291_354;
LEGUP_F_main_BB_if_end291_354:
		next_state = LEGUP_F_main_BB_if_end291_355;
LEGUP_F_main_BB_if_end291_355:
		next_state = LEGUP_F_main_BB_if_end291_356;
LEGUP_F_main_BB_if_end291_356:
		next_state = LEGUP_F_main_BB_if_end291_357;
LEGUP_F_main_BB_if_end291_357:
		next_state = LEGUP_F_main_BB_if_end291_358;
LEGUP_F_main_BB_if_end291_358:
		next_state = LEGUP_F_main_BB_if_end291_359;
LEGUP_F_main_BB_if_end291_359:
		next_state = LEGUP_F_main_BB_if_end291_360;
LEGUP_F_main_BB_if_end291_360:
		next_state = LEGUP_F_main_BB_if_end291_361;
LEGUP_F_main_BB_if_end291_361:
		next_state = LEGUP_F_main_BB_if_end291_362;
LEGUP_F_main_BB_if_end291_362:
		next_state = LEGUP_F_main_BB_if_end291_363;
LEGUP_F_main_BB_if_end291_363:
		next_state = LEGUP_F_main_BB_if_end291_364;
LEGUP_F_main_BB_if_end291_364:
		next_state = LEGUP_F_main_BB_if_end291_365;
LEGUP_F_main_BB_if_end291_365:
		next_state = LEGUP_F_main_BB_if_end291_366;
LEGUP_F_main_BB_if_end291_366:
		next_state = LEGUP_F_main_BB_if_end291_367;
LEGUP_F_main_BB_if_end291_367:
		next_state = LEGUP_F_main_BB_if_end291_368;
LEGUP_F_main_BB_if_end291_368:
		next_state = LEGUP_F_main_BB_if_end291_369;
LEGUP_F_main_BB_if_end291_369:
		next_state = LEGUP_F_main_BB_if_end291_370;
LEGUP_F_main_BB_if_end291_370:
		next_state = LEGUP_F_main_BB_if_end291_371;
LEGUP_F_main_BB_if_end291_371:
		next_state = LEGUP_F_main_BB_if_end291_372;
LEGUP_F_main_BB_if_end291_372:
		next_state = LEGUP_F_main_BB_if_end291_373;
LEGUP_F_main_BB_if_end291_373:
		next_state = LEGUP_F_main_BB_if_end291_374;
LEGUP_F_main_BB_if_end291_374:
		next_state = LEGUP_F_main_BB_if_end291_375;
LEGUP_F_main_BB_if_end291_375:
		next_state = LEGUP_F_main_BB_if_end291_376;
LEGUP_F_main_BB_if_end291_376:
		next_state = LEGUP_F_main_BB_if_end291_377;
LEGUP_F_main_BB_if_end291_377:
		next_state = LEGUP_F_main_BB_if_end291_378;
LEGUP_F_main_BB_if_end291_378:
		next_state = LEGUP_F_main_BB_if_end291_379;
LEGUP_F_main_BB_if_end291_379:
		next_state = LEGUP_F_main_BB_if_end291_380;
LEGUP_F_main_BB_if_end291_380:
		next_state = LEGUP_F_main_BB_if_end291_381;
LEGUP_F_main_BB_if_end291_381:
		next_state = LEGUP_F_main_BB_if_end291_382;
LEGUP_F_main_BB_if_end291_382:
		next_state = LEGUP_F_main_BB_if_end291_383;
LEGUP_F_main_BB_if_end291_383:
		next_state = LEGUP_F_main_BB_if_end291_384;
LEGUP_F_main_BB_if_end291_384:
		next_state = LEGUP_F_main_BB_if_end291_385;
LEGUP_F_main_BB_if_end291_385:
		next_state = LEGUP_F_main_BB_if_end291_386;
LEGUP_F_main_BB_if_end291_386:
		next_state = LEGUP_F_main_BB_if_end291_387;
LEGUP_F_main_BB_if_end291_387:
		next_state = LEGUP_F_main_BB_if_end291_388;
LEGUP_F_main_BB_if_end291_388:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_end_69:
		next_state = LEGUP_F_main_BB_if_end_70;
LEGUP_F_main_BB_if_end_70:
		next_state = LEGUP_F_main_BB_if_end_71;
LEGUP_F_main_BB_if_end_71:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then114_106:
	if ((fsm_stall == 1'd0) && (main_if_end109_cmp115_reg == 1'd1))
		next_state = LEGUP_F_main_BB_if_then116_107;
	else if ((fsm_stall == 1'd0) && (main_if_end109_cmp115_reg == 1'd0))
		next_state = LEGUP_F_main_BB_if_else127_141;
LEGUP_F_main_BB_if_then116_107:
		next_state = LEGUP_F_main_BB_if_then116_108;
LEGUP_F_main_BB_if_then116_108:
		next_state = LEGUP_F_main_BB_if_then116_109;
LEGUP_F_main_BB_if_then116_109:
		next_state = LEGUP_F_main_BB_if_then116_110;
LEGUP_F_main_BB_if_then116_110:
		next_state = LEGUP_F_main_BB_if_then116_111;
LEGUP_F_main_BB_if_then116_111:
		next_state = LEGUP_F_main_BB_if_then116_112;
LEGUP_F_main_BB_if_then116_112:
		next_state = LEGUP_F_main_BB_if_then116_113;
LEGUP_F_main_BB_if_then116_113:
		next_state = LEGUP_F_main_BB_if_then116_114;
LEGUP_F_main_BB_if_then116_114:
		next_state = LEGUP_F_main_BB_if_then116_115;
LEGUP_F_main_BB_if_then116_115:
		next_state = LEGUP_F_main_BB_if_then116_116;
LEGUP_F_main_BB_if_then116_116:
		next_state = LEGUP_F_main_BB_if_then116_117;
LEGUP_F_main_BB_if_then116_117:
		next_state = LEGUP_F_main_BB_if_then116_118;
LEGUP_F_main_BB_if_then116_118:
		next_state = LEGUP_F_main_BB_if_then116_119;
LEGUP_F_main_BB_if_then116_119:
		next_state = LEGUP_F_main_BB_if_then116_120;
LEGUP_F_main_BB_if_then116_120:
		next_state = LEGUP_F_main_BB_if_then116_121;
LEGUP_F_main_BB_if_then116_121:
		next_state = LEGUP_F_main_BB_if_then116_122;
LEGUP_F_main_BB_if_then116_122:
		next_state = LEGUP_F_main_BB_if_then116_123;
LEGUP_F_main_BB_if_then116_123:
		next_state = LEGUP_F_main_BB_if_then116_124;
LEGUP_F_main_BB_if_then116_124:
		next_state = LEGUP_F_main_BB_if_then116_125;
LEGUP_F_main_BB_if_then116_125:
		next_state = LEGUP_F_main_BB_if_then116_126;
LEGUP_F_main_BB_if_then116_126:
		next_state = LEGUP_F_main_BB_if_then116_127;
LEGUP_F_main_BB_if_then116_127:
		next_state = LEGUP_F_main_BB_if_then116_128;
LEGUP_F_main_BB_if_then116_128:
		next_state = LEGUP_F_main_BB_if_then116_129;
LEGUP_F_main_BB_if_then116_129:
		next_state = LEGUP_F_main_BB_if_then116_130;
LEGUP_F_main_BB_if_then116_130:
		next_state = LEGUP_F_main_BB_if_then116_131;
LEGUP_F_main_BB_if_then116_131:
		next_state = LEGUP_F_main_BB_if_then116_132;
LEGUP_F_main_BB_if_then116_132:
		next_state = LEGUP_F_main_BB_if_then116_133;
LEGUP_F_main_BB_if_then116_133:
		next_state = LEGUP_F_main_BB_if_then116_134;
LEGUP_F_main_BB_if_then116_134:
		next_state = LEGUP_F_main_BB_if_then116_135;
LEGUP_F_main_BB_if_then116_135:
		next_state = LEGUP_F_main_BB_if_then116_136;
LEGUP_F_main_BB_if_then116_136:
		next_state = LEGUP_F_main_BB_if_then116_137;
LEGUP_F_main_BB_if_then116_137:
		next_state = LEGUP_F_main_BB_if_then116_138;
LEGUP_F_main_BB_if_then116_138:
		next_state = LEGUP_F_main_BB_if_then116_139;
LEGUP_F_main_BB_if_then116_139:
		next_state = LEGUP_F_main_BB_if_then116_140;
LEGUP_F_main_BB_if_then116_140:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_then129_142:
		next_state = LEGUP_F_main_BB_if_then129_143;
LEGUP_F_main_BB_if_then129_143:
		next_state = LEGUP_F_main_BB_if_then129_144;
LEGUP_F_main_BB_if_then129_144:
		next_state = LEGUP_F_main_BB_if_then129_145;
LEGUP_F_main_BB_if_then129_145:
		next_state = LEGUP_F_main_BB_if_then129_146;
LEGUP_F_main_BB_if_then129_146:
		next_state = LEGUP_F_main_BB_if_then129_147;
LEGUP_F_main_BB_if_then129_147:
		next_state = LEGUP_F_main_BB_if_then129_148;
LEGUP_F_main_BB_if_then129_148:
		next_state = LEGUP_F_main_BB_if_then129_149;
LEGUP_F_main_BB_if_then129_149:
		next_state = LEGUP_F_main_BB_if_then129_150;
LEGUP_F_main_BB_if_then129_150:
		next_state = LEGUP_F_main_BB_if_then129_151;
LEGUP_F_main_BB_if_then129_151:
		next_state = LEGUP_F_main_BB_if_then129_152;
LEGUP_F_main_BB_if_then129_152:
		next_state = LEGUP_F_main_BB_if_then129_153;
LEGUP_F_main_BB_if_then129_153:
		next_state = LEGUP_F_main_BB_if_then129_154;
LEGUP_F_main_BB_if_then129_154:
		next_state = LEGUP_F_main_BB_if_then129_155;
LEGUP_F_main_BB_if_then129_155:
		next_state = LEGUP_F_main_BB_if_then129_156;
LEGUP_F_main_BB_if_then129_156:
		next_state = LEGUP_F_main_BB_if_then129_157;
LEGUP_F_main_BB_if_then129_157:
		next_state = LEGUP_F_main_BB_if_then129_158;
LEGUP_F_main_BB_if_then129_158:
		next_state = LEGUP_F_main_BB_if_then129_159;
LEGUP_F_main_BB_if_then129_159:
		next_state = LEGUP_F_main_BB_if_then129_160;
LEGUP_F_main_BB_if_then129_160:
		next_state = LEGUP_F_main_BB_if_then129_161;
LEGUP_F_main_BB_if_then129_161:
		next_state = LEGUP_F_main_BB_if_then129_162;
LEGUP_F_main_BB_if_then129_162:
		next_state = LEGUP_F_main_BB_if_then129_163;
LEGUP_F_main_BB_if_then129_163:
		next_state = LEGUP_F_main_BB_if_then129_164;
LEGUP_F_main_BB_if_then129_164:
		next_state = LEGUP_F_main_BB_if_then129_165;
LEGUP_F_main_BB_if_then129_165:
		next_state = LEGUP_F_main_BB_if_then129_166;
LEGUP_F_main_BB_if_then129_166:
		next_state = LEGUP_F_main_BB_if_then129_167;
LEGUP_F_main_BB_if_then129_167:
		next_state = LEGUP_F_main_BB_if_then129_168;
LEGUP_F_main_BB_if_then129_168:
		next_state = LEGUP_F_main_BB_if_then129_169;
LEGUP_F_main_BB_if_then129_169:
		next_state = LEGUP_F_main_BB_if_then129_170;
LEGUP_F_main_BB_if_then129_170:
		next_state = LEGUP_F_main_BB_if_then129_171;
LEGUP_F_main_BB_if_then129_171:
		next_state = LEGUP_F_main_BB_if_then129_172;
LEGUP_F_main_BB_if_then129_172:
		next_state = LEGUP_F_main_BB_if_then129_173;
LEGUP_F_main_BB_if_then129_173:
		next_state = LEGUP_F_main_BB_if_then129_174;
LEGUP_F_main_BB_if_then129_174:
		next_state = LEGUP_F_main_BB_if_then129_175;
LEGUP_F_main_BB_if_then129_175:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_then142_209:
		next_state = LEGUP_F_main_BB_if_then142_210;
LEGUP_F_main_BB_if_then142_210:
		next_state = LEGUP_F_main_BB_if_then142_211;
LEGUP_F_main_BB_if_then142_211:
		next_state = LEGUP_F_main_BB_if_then142_212;
LEGUP_F_main_BB_if_then142_212:
		next_state = LEGUP_F_main_BB_if_then142_213;
LEGUP_F_main_BB_if_then142_213:
		next_state = LEGUP_F_main_BB_if_then142_214;
LEGUP_F_main_BB_if_then142_214:
		next_state = LEGUP_F_main_BB_if_then142_215;
LEGUP_F_main_BB_if_then142_215:
		next_state = LEGUP_F_main_BB_if_then142_216;
LEGUP_F_main_BB_if_then142_216:
		next_state = LEGUP_F_main_BB_if_then142_217;
LEGUP_F_main_BB_if_then142_217:
		next_state = LEGUP_F_main_BB_if_then142_218;
LEGUP_F_main_BB_if_then142_218:
		next_state = LEGUP_F_main_BB_if_then142_219;
LEGUP_F_main_BB_if_then142_219:
		next_state = LEGUP_F_main_BB_if_then142_220;
LEGUP_F_main_BB_if_then142_220:
		next_state = LEGUP_F_main_BB_if_then142_221;
LEGUP_F_main_BB_if_then142_221:
		next_state = LEGUP_F_main_BB_if_then142_222;
LEGUP_F_main_BB_if_then142_222:
		next_state = LEGUP_F_main_BB_if_then142_223;
LEGUP_F_main_BB_if_then142_223:
		next_state = LEGUP_F_main_BB_if_then142_224;
LEGUP_F_main_BB_if_then142_224:
		next_state = LEGUP_F_main_BB_if_then142_225;
LEGUP_F_main_BB_if_then142_225:
		next_state = LEGUP_F_main_BB_if_then142_226;
LEGUP_F_main_BB_if_then142_226:
		next_state = LEGUP_F_main_BB_if_then142_227;
LEGUP_F_main_BB_if_then142_227:
		next_state = LEGUP_F_main_BB_if_then142_228;
LEGUP_F_main_BB_if_then142_228:
		next_state = LEGUP_F_main_BB_if_then142_229;
LEGUP_F_main_BB_if_then142_229:
		next_state = LEGUP_F_main_BB_if_then142_230;
LEGUP_F_main_BB_if_then142_230:
		next_state = LEGUP_F_main_BB_if_then142_231;
LEGUP_F_main_BB_if_then142_231:
		next_state = LEGUP_F_main_BB_if_then142_232;
LEGUP_F_main_BB_if_then142_232:
		next_state = LEGUP_F_main_BB_if_then142_233;
LEGUP_F_main_BB_if_then142_233:
		next_state = LEGUP_F_main_BB_if_then142_234;
LEGUP_F_main_BB_if_then142_234:
		next_state = LEGUP_F_main_BB_if_then142_235;
LEGUP_F_main_BB_if_then142_235:
		next_state = LEGUP_F_main_BB_if_then142_236;
LEGUP_F_main_BB_if_then142_236:
		next_state = LEGUP_F_main_BB_if_then142_237;
LEGUP_F_main_BB_if_then142_237:
		next_state = LEGUP_F_main_BB_if_then142_238;
LEGUP_F_main_BB_if_then142_238:
		next_state = LEGUP_F_main_BB_if_then142_239;
LEGUP_F_main_BB_if_then142_239:
		next_state = LEGUP_F_main_BB_if_then142_240;
LEGUP_F_main_BB_if_then142_240:
		next_state = LEGUP_F_main_BB_if_then142_241;
LEGUP_F_main_BB_if_then142_241:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_then169_276:
		next_state = LEGUP_F_main_BB_if_then169_277;
LEGUP_F_main_BB_if_then169_277:
		next_state = LEGUP_F_main_BB_if_then169_278;
LEGUP_F_main_BB_if_then169_278:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_then176_282:
		next_state = LEGUP_F_main_BB_if_then176_283;
LEGUP_F_main_BB_if_then176_283:
		next_state = LEGUP_F_main_BB_if_then176_284;
LEGUP_F_main_BB_if_then176_284:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_then183_285:
		next_state = LEGUP_F_main_BB_if_then183_286;
LEGUP_F_main_BB_if_then183_286:
		next_state = LEGUP_F_main_BB_if_then183_287;
LEGUP_F_main_BB_if_then183_287:
		next_state = LEGUP_F_main_BB_if_end196_291;
LEGUP_F_main_BB_if_then208_294:
		next_state = LEGUP_F_main_BB_if_then208_295;
LEGUP_F_main_BB_if_then208_295:
		next_state = LEGUP_F_main_BB_if_end218_298;
LEGUP_F_main_BB_if_then215_297:
		next_state = LEGUP_F_main_BB_cleanup_395;
LEGUP_F_main_BB_if_then225_300:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then232_337:
		next_state = LEGUP_F_main_BB_if_end258_341;
LEGUP_F_main_BB_if_then239_338:
		next_state = LEGUP_F_main_BB_if_end258_341;
LEGUP_F_main_BB_if_then246_339:
		next_state = LEGUP_F_main_BB_if_end258_341;
LEGUP_F_main_BB_if_then271_347:
		next_state = LEGUP_F_main_BB_if_then271_348;
LEGUP_F_main_BB_if_then271_348:
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_if_then279_350:
		next_state = LEGUP_F_main_BB_cleanup_395;
LEGUP_F_main_BB_sw_bb106_72:
	if ((fsm_stall == 1'd0) && (main_sw_bb106_cmp107 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end109_73;
	else if ((fsm_stall == 1'd0) && (main_sw_bb106_cmp107 == 1'd0))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
LEGUP_F_main_BB_sw_bb223_299:
	if ((fsm_stall == 1'd0) && (main_sw_bb223_cmp224 == 1'd1))
		next_state = LEGUP_F_main_BB_if_end227_301;
	else if ((fsm_stall == 1'd0) && (main_sw_bb223_cmp224 == 1'd0))
		next_state = LEGUP_F_main_BB_if_then225_300;
LEGUP_F_main_BB_sw_bb288_351:
	if ((fsm_stall == 1'd0) && (main_sw_bb288_cmp289 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb288_cmp289 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end291_352;
LEGUP_F_main_BB_sw_bb95_68:
	if ((fsm_stall == 1'd0) && (main_sw_bb95_cmp96 == 1'd1))
		next_state = LEGUP_F_main_BB_NodeBlock9_backedge_6;
	else if ((fsm_stall == 1'd0) && (main_sw_bb95_cmp96 == 1'd0))
		next_state = LEGUP_F_main_BB_if_end_69;
LEGUP_F_main_BB_sw_bb_11:
		next_state = LEGUP_F_main_BB_sw_bb_12;
LEGUP_F_main_BB_sw_bb_12:
		next_state = LEGUP_F_main_BB_sw_bb_13;
LEGUP_F_main_BB_sw_bb_13:
		next_state = LEGUP_F_main_BB_sw_bb_14;
LEGUP_F_main_BB_sw_bb_14:
		next_state = LEGUP_F_main_BB_sw_bb_15;
LEGUP_F_main_BB_sw_bb_15:
		next_state = LEGUP_F_main_BB_sw_bb_16;
LEGUP_F_main_BB_sw_bb_16:
		next_state = LEGUP_F_main_BB_sw_bb_17;
LEGUP_F_main_BB_sw_bb_17:
		next_state = LEGUP_F_main_BB_sw_bb_18;
LEGUP_F_main_BB_sw_bb_18:
		next_state = LEGUP_F_main_BB_sw_bb_19;
LEGUP_F_main_BB_sw_bb_19:
		next_state = LEGUP_F_main_BB_sw_bb_20;
LEGUP_F_main_BB_sw_bb_20:
		next_state = LEGUP_F_main_BB_sw_bb_21;
LEGUP_F_main_BB_sw_bb_21:
		next_state = LEGUP_F_main_BB_sw_bb_22;
LEGUP_F_main_BB_sw_bb_22:
		next_state = LEGUP_F_main_BB_sw_bb_23;
LEGUP_F_main_BB_sw_bb_23:
		next_state = LEGUP_F_main_BB_sw_bb_24;
LEGUP_F_main_BB_sw_bb_24:
		next_state = LEGUP_F_main_BB_sw_bb_25;
LEGUP_F_main_BB_sw_bb_25:
		next_state = LEGUP_F_main_BB_sw_bb_26;
LEGUP_F_main_BB_sw_bb_26:
		next_state = LEGUP_F_main_BB_sw_bb_27;
LEGUP_F_main_BB_sw_bb_27:
		next_state = LEGUP_F_main_BB_sw_bb_28;
LEGUP_F_main_BB_sw_bb_28:
		next_state = LEGUP_F_main_BB_sw_bb_29;
LEGUP_F_main_BB_sw_bb_29:
		next_state = LEGUP_F_main_BB_for_body79_30;
default:
	next_state = cur_state;
endcase

end
assign fsm_stall = 1'd0;
assign main_entry_vla1516_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla1516_sub_reg <= main_entry_vla1516_sub;
	end
end
assign main_entry_vla515_sub = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_vla515_sub_reg <= main_entry_vla515_sub;
	end
end
assign main_entry_arrayidx6 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx6_reg <= main_entry_arrayidx6;
	end
end
assign main_entry_arrayidx7 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx7_reg <= main_entry_arrayidx7;
	end
end
assign main_entry_arrayidx8 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx8_reg <= main_entry_arrayidx8;
	end
end
assign main_entry_arrayidx9 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx9_reg <= main_entry_arrayidx9;
	end
end
assign main_entry_arrayidx10 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx10_reg <= main_entry_arrayidx10;
	end
end
assign main_entry_arrayidx11 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx11_reg <= main_entry_arrayidx11;
	end
end
assign main_entry_arrayidx12 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx12_reg <= main_entry_arrayidx12;
	end
end
assign main_entry_arrayidx13 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx13_reg <= main_entry_arrayidx13;
	end
end
assign main_entry_arrayidx14 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx14_reg <= main_entry_arrayidx14;
	end
end
assign main_entry_arrayidx15 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx15_reg <= main_entry_arrayidx15;
	end
end
assign main_entry_arrayidx16 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx16_reg <= main_entry_arrayidx16;
	end
end
assign main_entry_arrayidx17 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx17_reg <= main_entry_arrayidx17;
	end
end
assign main_entry_arrayidx18 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx18_reg <= main_entry_arrayidx18;
	end
end
assign main_entry_arrayidx19 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx19_reg <= main_entry_arrayidx19;
	end
end
assign main_entry_arrayidx20 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx20_reg <= main_entry_arrayidx20;
	end
end
assign main_entry_arrayidx21 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx21_reg <= main_entry_arrayidx21;
	end
end
assign main_entry_arrayidx22 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx22_reg <= main_entry_arrayidx22;
	end
end
assign main_entry_arrayidx23 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx23_reg <= main_entry_arrayidx23;
	end
end
assign main_entry_arrayidx24 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx24_reg <= main_entry_arrayidx24;
	end
end
assign main_entry_arrayidx25 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx25_reg <= main_entry_arrayidx25;
	end
end
assign main_entry_arrayidx26 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx26_reg <= main_entry_arrayidx26;
	end
end
assign main_entry_arrayidx27 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx27_reg <= main_entry_arrayidx27;
	end
end
assign main_entry_arrayidx28 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx28_reg <= main_entry_arrayidx28;
	end
end
assign main_entry_arrayidx29 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx29_reg <= main_entry_arrayidx29;
	end
end
assign main_entry_arrayidx30 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx30_reg <= main_entry_arrayidx30;
	end
end
assign main_entry_arrayidx31 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx31_reg <= main_entry_arrayidx31;
	end
end
assign main_entry_arrayidx32 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx32_reg <= main_entry_arrayidx32;
	end
end
assign main_entry_arrayidx33 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx33_reg <= main_entry_arrayidx33;
	end
end
assign main_entry_arrayidx34 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx34_reg <= main_entry_arrayidx34;
	end
end
assign main_entry_arrayidx35 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx35_reg <= main_entry_arrayidx35;
	end
end
assign main_entry_arrayidx36 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx36_reg <= main_entry_arrayidx36;
	end
end
assign main_entry_arrayidx37 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx37_reg <= main_entry_arrayidx37;
	end
end
assign main_entry_arrayidx38 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx38_reg <= main_entry_arrayidx38;
	end
end
assign main_entry_arrayidx39 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx39_reg <= main_entry_arrayidx39;
	end
end
assign main_entry_arrayidx40 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx40_reg <= main_entry_arrayidx40;
	end
end
assign main_entry_arrayidx41 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx41_reg <= main_entry_arrayidx41;
	end
end
assign main_entry_arrayidx42 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx42_reg <= main_entry_arrayidx42;
	end
end
assign main_entry_arrayidx43 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx43_reg <= main_entry_arrayidx43;
	end
end
assign main_entry_arrayidx44 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx44_reg <= main_entry_arrayidx44;
	end
end
assign main_entry_arrayidx45 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx45_reg <= main_entry_arrayidx45;
	end
end
assign main_entry_arrayidx46 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx46_reg <= main_entry_arrayidx46;
	end
end
assign main_entry_arrayidx47 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx47_reg <= main_entry_arrayidx47;
	end
end
assign main_entry_arrayidx48 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx48_reg <= main_entry_arrayidx48;
	end
end
assign main_entry_arrayidx49 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx49_reg <= main_entry_arrayidx49;
	end
end
assign main_entry_arrayidx50 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx50_reg <= main_entry_arrayidx50;
	end
end
assign main_entry_arrayidx51 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx51_reg <= main_entry_arrayidx51;
	end
end
assign main_entry_arrayidx52 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx52_reg <= main_entry_arrayidx52;
	end
end
assign main_entry_arrayidx53 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx53_reg <= main_entry_arrayidx53;
	end
end
assign main_entry_arrayidx54 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx54_reg <= main_entry_arrayidx54;
	end
end
assign main_entry_arrayidx55 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx55_reg <= main_entry_arrayidx55;
	end
end
assign main_entry_arrayidx56 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx56_reg <= main_entry_arrayidx56;
	end
end
assign main_entry_arrayidx57 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx57_reg <= main_entry_arrayidx57;
	end
end
assign main_entry_arrayidx58 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx58_reg <= main_entry_arrayidx58;
	end
end
assign main_entry_arrayidx59 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx59_reg <= main_entry_arrayidx59;
	end
end
assign main_entry_arrayidx60 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx60_reg <= main_entry_arrayidx60;
	end
end
assign main_entry_arrayidx61 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx61_reg <= main_entry_arrayidx61;
	end
end
assign main_entry_arrayidx62 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx62_reg <= main_entry_arrayidx62;
	end
end
assign main_entry_arrayidx63 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx63_reg <= main_entry_arrayidx63;
	end
end
assign main_entry_arrayidx64 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx64_reg <= main_entry_arrayidx64;
	end
end
assign main_entry_arrayidx65 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx65_reg <= main_entry_arrayidx65;
	end
end
assign main_entry_arrayidx66 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx66_reg <= main_entry_arrayidx66;
	end
end
assign main_entry_arrayidx67 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx67_reg <= main_entry_arrayidx67;
	end
end
assign main_entry_arrayidx73 = 1'd0;
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_reg <= main_entry_arrayidx73;
	end
end
assign main_entry_arrayidx73_1 = (1'd0 + (4 * 32'd1));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_1_reg <= main_entry_arrayidx73_1;
	end
end
assign main_entry_arrayidx73_2 = (1'd0 + (4 * 32'd2));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_2_reg <= main_entry_arrayidx73_2;
	end
end
assign main_entry_arrayidx73_3 = (1'd0 + (4 * 32'd3));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_3_reg <= main_entry_arrayidx73_3;
	end
end
assign main_entry_arrayidx73_4 = (1'd0 + (4 * 32'd4));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_4_reg <= main_entry_arrayidx73_4;
	end
end
assign main_entry_arrayidx73_5 = (1'd0 + (4 * 32'd5));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_5_reg <= main_entry_arrayidx73_5;
	end
end
assign main_entry_arrayidx73_1541 = (1'd0 + (4 * 32'd6));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_1541_reg <= main_entry_arrayidx73_1541;
	end
end
assign main_entry_arrayidx73_1_1 = (1'd0 + (4 * 32'd7));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_1_1_reg <= main_entry_arrayidx73_1_1;
	end
end
assign main_entry_arrayidx73_2_1 = (1'd0 + (4 * 32'd8));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_2_1_reg <= main_entry_arrayidx73_2_1;
	end
end
assign main_entry_arrayidx73_3_1 = (1'd0 + (4 * 32'd9));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_3_1_reg <= main_entry_arrayidx73_3_1;
	end
end
assign main_entry_arrayidx73_4_1 = (1'd0 + (4 * 32'd10));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_4_1_reg <= main_entry_arrayidx73_4_1;
	end
end
assign main_entry_arrayidx73_5_1 = (1'd0 + (4 * 32'd11));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_5_1_reg <= main_entry_arrayidx73_5_1;
	end
end
assign main_entry_arrayidx73_2542 = (1'd0 + (4 * 32'd12));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_2542_reg <= main_entry_arrayidx73_2542;
	end
end
assign main_entry_arrayidx73_1_2 = (1'd0 + (4 * 32'd13));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_1_2_reg <= main_entry_arrayidx73_1_2;
	end
end
assign main_entry_arrayidx73_2_2 = (1'd0 + (4 * 32'd14));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_2_2_reg <= main_entry_arrayidx73_2_2;
	end
end
assign main_entry_arrayidx73_3_2 = (1'd0 + (4 * 32'd15));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_3_2_reg <= main_entry_arrayidx73_3_2;
	end
end
assign main_entry_arrayidx73_4_2 = (1'd0 + (4 * 32'd16));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_4_2_reg <= main_entry_arrayidx73_4_2;
	end
end
assign main_entry_arrayidx73_5_2 = (1'd0 + (4 * 32'd17));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_5_2_reg <= main_entry_arrayidx73_5_2;
	end
end
assign main_entry_arrayidx73_3543 = (1'd0 + (4 * 32'd18));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_3543_reg <= main_entry_arrayidx73_3543;
	end
end
assign main_entry_arrayidx73_1_3 = (1'd0 + (4 * 32'd19));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_1_3_reg <= main_entry_arrayidx73_1_3;
	end
end
assign main_entry_arrayidx73_2_3 = (1'd0 + (4 * 32'd20));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_2_3_reg <= main_entry_arrayidx73_2_3;
	end
end
assign main_entry_arrayidx73_3_3 = (1'd0 + (4 * 32'd21));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_3_3_reg <= main_entry_arrayidx73_3_3;
	end
end
assign main_entry_arrayidx73_4_3 = (1'd0 + (4 * 32'd22));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_4_3_reg <= main_entry_arrayidx73_4_3;
	end
end
assign main_entry_arrayidx73_5_3 = (1'd0 + (4 * 32'd23));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_5_3_reg <= main_entry_arrayidx73_5_3;
	end
end
assign main_entry_arrayidx73_4544 = (1'd0 + (4 * 32'd24));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_4544_reg <= main_entry_arrayidx73_4544;
	end
end
assign main_entry_arrayidx73_1_4 = (1'd0 + (4 * 32'd25));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_1_4_reg <= main_entry_arrayidx73_1_4;
	end
end
assign main_entry_arrayidx73_2_4 = (1'd0 + (4 * 32'd26));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_2_4_reg <= main_entry_arrayidx73_2_4;
	end
end
assign main_entry_arrayidx73_3_4 = (1'd0 + (4 * 32'd27));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_3_4_reg <= main_entry_arrayidx73_3_4;
	end
end
assign main_entry_arrayidx73_4_4 = (1'd0 + (4 * 32'd28));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_4_4_reg <= main_entry_arrayidx73_4_4;
	end
end
assign main_entry_arrayidx73_5_4 = (1'd0 + (4 * 32'd29));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_5_4_reg <= main_entry_arrayidx73_5_4;
	end
end
assign main_entry_arrayidx73_5545 = (1'd0 + (4 * 32'd30));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_5545_reg <= main_entry_arrayidx73_5545;
	end
end
assign main_entry_arrayidx73_1_5 = (1'd0 + (4 * 32'd31));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_1_5_reg <= main_entry_arrayidx73_1_5;
	end
end
assign main_entry_arrayidx73_2_5 = (1'd0 + (4 * 32'd32));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_2_5_reg <= main_entry_arrayidx73_2_5;
	end
end
assign main_entry_arrayidx73_3_5 = (1'd0 + (4 * 32'd33));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_3_5_reg <= main_entry_arrayidx73_3_5;
	end
end
assign main_entry_arrayidx73_4_5 = (1'd0 + (4 * 32'd34));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_4_5_reg <= main_entry_arrayidx73_4_5;
	end
end
assign main_entry_arrayidx73_5_5 = (1'd0 + (4 * 32'd35));
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_entry_1)) begin
		main_entry_arrayidx73_5_5_reg <= main_entry_arrayidx73_5_5;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_state_0 = main_NodeBlock9_backedge_state_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_state_0_reg <= main_NodeBlock9_state_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_i_0 = main_NodeBlock9_backedge_i_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_i_0_reg <= main_NodeBlock9_i_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_j_0 = main_NodeBlock9_backedge_j_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_j_0_reg <= main_NodeBlock9_j_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_a_0 = main_NodeBlock9_backedge_a_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_a_0_reg <= main_NodeBlock9_a_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_b_0 = main_NodeBlock9_backedge_b_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_b_0_reg <= main_NodeBlock9_b_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_X_0 = main_NodeBlock9_backedge_pos_a_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_X_0_reg <= main_NodeBlock9_pos_a_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_a_Y_0 = main_NodeBlock9_backedge_pos_a_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_a_Y_0_reg <= main_NodeBlock9_pos_a_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_X_0 = main_NodeBlock9_backedge_pos_b_X_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_X_0_reg <= main_NodeBlock9_pos_b_X_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0 = 0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_pos_b_Y_0 = main_NodeBlock9_backedge_pos_b_Y_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_pos_b_Y_0_reg <= main_NodeBlock9_pos_b_Y_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_mesh_0 = main_NodeBlock9_backedge_sum_mesh_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_mesh_0_reg <= main_NodeBlock9_sum_mesh_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_sum_1hop_0 = main_NodeBlock9_backedge_sum_1hop_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_sum_1hop_0_reg <= main_NodeBlock9_sum_1hop_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0 = 32'd147621160;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_seed_0 = main_NodeBlock9_backedge_seed_0_be_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_entry_1) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
	if (((cur_state == LEGUP_F_main_BB_NodeBlock9_backedge_6) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_seed_0_reg <= main_NodeBlock9_seed_0;
	end
end
always @(*) begin
		main_NodeBlock9_Pivot10 = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock9_Pivot10_op1_temp}));
end
always @(*) begin
		main_NodeBlock7_Pivot8 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock7_Pivot8_op1_temp}));
end
always @(*) begin
		main_NodeBlock5_Pivot6 = ($signed(main_NodeBlock9_state_0_reg) < $signed({27'd0,main_NodeBlock5_Pivot6_op1_temp}));
end
always @(*) begin
		main_LeafBlock3_SwitchLeaf4 = (main_NodeBlock9_state_0_reg == 32'd5);
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = main_NodeBlock9_state_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end_1_reg};
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = {30'd0,main_if_end218_522};
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd3;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be = 32'd5;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_state_0_be = 32'd4;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_state_0_be_reg <= main_NodeBlock9_backedge_state_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then225_inc226;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_if_then271_inc276_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be = main_NodeBlock9_i_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be = 32'd32;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_i_0_be = main_if_end291_inc317_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_i_0_be_reg <= main_NodeBlock9_backedge_i_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_end218_inc197_1;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = 32'd0;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be = main_if_else277_inc259;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_j_0_be = main_NodeBlock9_j_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_j_0_be_reg <= main_NodeBlock9_backedge_j_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_for_end84_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_if_end_2_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be = main_NodeBlock9_a_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_a_0_be = main_if_end291_30_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_a_0_be_reg <= main_NodeBlock9_backedge_a_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_if_end_3_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be = main_NodeBlock9_b_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_b_0_be = main_if_end291_31_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_b_0_be_reg <= main_NodeBlock9_backedge_b_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end_4;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_if_end218_pos_a_X_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_X_0_be = main_NodeBlock9_pos_a_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_X_0_be_reg <= main_NodeBlock9_backedge_pos_a_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end_5;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_if_end218_pos_a_Y_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_a_Y_0_be = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_a_Y_0_be_reg <= main_NodeBlock9_backedge_pos_a_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end_6;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_if_end258_xi_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = -32'd1;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_X_0_be = main_NodeBlock9_pos_b_X_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_X_0_be_reg <= main_NodeBlock9_backedge_pos_b_X_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end_7;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_if_end258_xj_1_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_pos_b_Y_0_be = main_NodeBlock9_pos_b_Y_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_pos_b_Y_0_be_reg <= main_NodeBlock9_backedge_pos_b_Y_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_NodeBlock9_sum_mesh_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_mesh_0_be = main_if_end291_newCurOp_add308_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_mesh_0_be_reg <= main_NodeBlock9_backedge_sum_mesh_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_NodeBlock9_sum_1hop_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_sum_1hop_0_be = main_if_end291_newCurOp_add316;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_sum_1hop_0_be_reg <= main_NodeBlock9_backedge_sum_1hop_0_be;
	end
end
always @(*) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_for_end84_add90_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end196_seed_1_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end227_add230_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be = main_if_end227_add230_reg;
	end
	else if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) */ begin
		main_NodeBlock9_backedge_seed_0_be = main_NodeBlock9_seed_0_reg;
	end
end
always @(posedge clk) begin
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock3_5) & (fsm_stall == 1'd0)) & (main_LeafBlock3_SwitchLeaf4 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_LeafBlock_10) & (fsm_stall == 1'd0)) & (main_LeafBlock_SwitchLeaf == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end84_67) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb95_68) & (fsm_stall == 1'd0)) & (main_sw_bb95_cmp96 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end_71) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb106_72) & (fsm_stall == 1'd0)) & (main_sw_bb106_cmp107 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end218_298) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then225_300) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then271_348) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else277_349) & (fsm_stall == 1'd0)) & (main_if_else277_cmp278 == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if ((((cur_state == LEGUP_F_main_BB_sw_bb288_351) & (fsm_stall == 1'd0)) & (main_sw_bb288_cmp289 == 1'd1))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
	if (((cur_state == LEGUP_F_main_BB_if_end291_388) & (fsm_stall == 1'd0))) begin
		main_NodeBlock9_backedge_seed_0_be_reg <= main_NodeBlock9_backedge_seed_0_be;
	end
end
always @(*) begin
		main_NodeBlock1_Pivot2 = ($signed(main_NodeBlock9_state_0_reg) < $signed({29'd0,main_NodeBlock1_Pivot2_op1_temp}));
end
always @(*) begin
		main_NodeBlock_Pivot = ($signed(main_NodeBlock9_state_0_reg) < $signed({28'd0,main_NodeBlock_Pivot_op1_temp}));
end
always @(*) begin
		main_LeafBlock_SwitchLeaf = (main_NodeBlock9_state_0_reg == 32'd0);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_29) & (fsm_stall == 1'd0))) begin
		main_for_body79_i_2534 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_body79_31) & (fsm_stall == 1'd0)) & (main_for_body79_exitcond_reg == 1'd0))) */ begin
		main_for_body79_i_2534 = main_for_body79_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_sw_bb_29) & (fsm_stall == 1'd0))) begin
		main_for_body79_i_2534_reg <= main_for_body79_i_2534;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_body79_31) & (fsm_stall == 1'd0)) & (main_for_body79_exitcond_reg == 1'd0))) begin
		main_for_body79_i_2534_reg <= main_for_body79_i_2534;
	end
end
always @(*) begin
		main_for_body79_arrayidx80 = (1'd0 + (4 * main_for_body79_i_2534_reg));
end
always @(*) begin
		main_for_body79_arrayidx81 = (1'd0 + (4 * main_for_body79_i_2534_reg));
end
always @(*) begin
		main_for_body79_0 = (main_for_body79_i_2534_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_for_body79_0_reg <= main_for_body79_0;
	end
end
always @(*) begin
		main_for_body79_exitcond = (main_for_body79_0 == 32'd27);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_for_body79_exitcond_reg <= main_for_body79_exitcond;
	end
end
always @(*) begin
		main_for_end84_1 = main_entry_vla515_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_33)) begin
		main_for_end84_1_reg <= main_for_end84_1;
	end
end
always @(*) begin
		main_for_end84_sub_i = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_for_end84_xor2_i = (main_for_end84_sub_i ^ 32'd1);
end
always @(*) begin
	main_for_end84_rem = main_signed_modulus_32_0;
end
always @(*) begin
		main_for_end84_bit_select17 = main_for_end84_rem_width_extended[30:0];
end
always @(*) begin
		main_for_end84_bit_select15 = main_for_end84_rem_width_extended[29:0];
end
always @(*) begin
		main_for_end84_arrayidx86 = (1'd0 + (4 * main_for_end84_1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_33)) begin
		main_for_end84_arrayidx86_reg <= main_for_end84_arrayidx86;
	end
end
always @(*) begin
		main_for_end84_xor2_i16 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_32)) begin
		main_for_end84_xor2_i16_reg <= main_for_end84_xor2_i16;
	end
end
always @(*) begin
	main_for_end84_rem88 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_65)) begin
		main_for_end84_rem88_reg <= main_for_end84_rem88;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else140_208)) begin
		main_for_end84_rem88_reg <= main_if_else140_rem144;
	end
end
always @(*) begin
		main_for_end84_arrayidx89 = (1'd0 + (4 * main_for_end84_1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_33)) begin
		main_for_end84_arrayidx89_reg <= main_for_end84_arrayidx89;
	end
end
always @(*) begin
		main_for_end84_add90 = (main_NodeBlock9_seed_0_reg + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_32)) begin
		main_for_end84_add90_reg <= main_for_end84_add90;
	end
end
always @(*) begin
		main_for_end84_bit_concat18 = {main_for_end84_bit_select17[30:0], main_for_end84_bit_concat18_bit_select_operand_2};
end
always @(*) begin
		main_for_end84_bit_concat16 = {main_for_end84_bit_select15[29:0], main_for_end84_bit_concat16_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_end84_sr_add7 = (main_for_end84_bit_concat18 + main_for_end84_bit_concat16);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_64)) begin
		main_for_end84_sr_add7_reg <= main_for_end84_sr_add7;
	end
end
always @(*) begin
		main_for_end84_arrayidx93_sum = (main_for_end84_sr_add7_reg + $signed({{28{main_for_end84_rem88[3]}},main_for_end84_rem88}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_65)) begin
		main_for_end84_arrayidx93_sum_reg <= main_for_end84_arrayidx93_sum;
	end
end
always @(*) begin
		main_for_end84_arrayidx94 = (1'd0 + (4 * main_for_end84_arrayidx93_sum_reg));
end
always @(*) begin
		main_sw_bb95_cmp96 = (main_NodeBlock9_i_0_reg == 32'd32);
end
always @(*) begin
		main_if_end_arrayidx97 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_2 = main_entry_vla515_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_if_end_2_reg <= main_if_end_2;
	end
end
always @(*) begin
		main_if_end_arrayidx98 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end_3 = main_entry_vla1516_out_a;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_if_end_3_reg <= main_if_end_3;
	end
end
always @(*) begin
		main_if_end_arrayidx99 = (1'd0 + (4 * main_if_end_2));
end
always @(*) begin
		main_if_end_4 = main_entry_vla2517_out_a;
end
always @(*) begin
		main_if_end_arrayidx100 = (1'd0 + (4 * main_if_end_2));
end
always @(*) begin
		main_if_end_5 = main_entry_vla3518_out_a;
end
always @(*) begin
		main_if_end_arrayidx101 = (1'd0 + (4 * main_if_end_3));
end
always @(*) begin
		main_if_end_6 = main_entry_vla2517_out_b;
end
always @(*) begin
		main_if_end_arrayidx102 = (1'd0 + (4 * main_if_end_3));
end
always @(*) begin
		main_if_end_7 = main_entry_vla3518_out_b;
end
always @(*) begin
		main_if_end_cmp103 = (main_NodeBlock9_i_0_reg == 32'd0);
end
always @(*) begin
		main_if_end_1 = (main_if_end_cmp103 ? 32'd3 : 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end_69)) begin
		main_if_end_1_reg <= main_if_end_1;
	end
end
always @(*) begin
		main_sw_bb106_cmp107 = (main_NodeBlock9_pos_a_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end109_sub_i14 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end109_xor2_i15 = (main_if_end109_sub_i14 ^ 32'd1);
end
always @(*) begin
	main_if_end109_rem111 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end109_rem111_reg = main_if_end291_rem309_reg;
end
always @(*) begin
		main_if_end109_add112 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end109_73)) begin
		main_if_end109_add112_reg <= main_if_end109_add112;
	end
end
always @(*) begin
		main_if_end109_cmp113 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end109_73)) begin
		main_if_end109_cmp113_reg <= main_if_end109_cmp113;
	end
end
always @(*) begin
		main_if_end109_cmp115 = ($signed(main_if_end109_rem111) == 32'd0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end109_105)) begin
		main_if_end109_cmp115_reg <= main_if_end109_cmp115;
	end
end
always @(*) begin
		main_if_then116_xor2_i13 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then116_rem118 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then116_arrayidx119 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then116_8 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_109)) begin
		main_if_then116_8_reg <= main_if_then116_8;
	end
end
always @(*) begin
		main_if_then116_add120 = (main_if_then116_8_reg + $signed({{28{main_if_then116_rem118[3]}},main_if_then116_rem118}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_139)) begin
		main_if_then116_add120_reg <= main_if_then116_add120;
	end
end
always @(*) begin
		main_if_then116_xor2_i12 = (main_if_end109_add112_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		main_if_then116_xor2_i12_reg <= main_if_then116_xor2_i12;
	end
end
always @(*) begin
	main_if_then116_rem123 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then116_arrayidx124 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then116_9 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_109)) begin
		main_if_then116_9_reg <= main_if_then116_9;
	end
end
always @(*) begin
		main_if_then116_add125 = (main_if_then116_9_reg + $signed({{28{main_if_then116_rem123[3]}},main_if_then116_rem123}));
end
always @(*) begin
		main_if_then116_add126 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		main_if_then116_add126_reg <= main_if_then116_add126;
	end
end
always @(*) begin
		main_if_else127_cmp128 = ($signed(main_if_end109_rem111_reg) == 32'd1);
end
always @(*) begin
		main_if_then129_xor2_i10 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_then129_rem131 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then129_arrayidx132 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then129_10 = memory_controller_1_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then129_144)) begin
		main_if_then129_10_reg <= main_if_then129_10;
	end
end
always @(*) begin
		main_if_then129_add133 = (main_if_then129_10_reg + $signed({{28{main_if_then129_rem131[3]}},main_if_then129_rem131}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then129_174)) begin
		main_if_then129_add133_reg <= main_if_then129_add133;
	end
end
always @(*) begin
		main_if_then129_xor2_i9 = (main_if_end109_add112_reg ^ 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		main_if_then129_xor2_i9_reg <= main_if_then129_xor2_i9;
	end
end
always @(*) begin
	main_if_then129_rem136 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then129_arrayidx137 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then129_11 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then129_144)) begin
		main_if_then129_11_reg <= main_if_then129_11;
	end
end
always @(*) begin
		main_if_then129_add138 = (main_if_then129_11_reg + $signed({{28{main_if_then129_rem136[3]}},main_if_then129_rem136}));
end
always @(*) begin
		main_if_then129_add139 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		main_if_then129_add139_reg <= main_if_then129_add139;
	end
end
always @(*) begin
		main_if_else140_cmp141 = ($signed(main_if_end109_rem111_reg) == 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else140_176)) begin
		main_if_else140_cmp141_reg <= main_if_else140_cmp141;
	end
end
always @(*) begin
		main_if_else140_xor2_i7 = (main_NodeBlock9_seed_0_reg ^ 32'd1);
end
always @(*) begin
	main_if_else140_rem144 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_else140_rem144_reg = main_for_end84_rem88_reg;
end
always @(*) begin
		main_if_then142_arrayidx145 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then142_12 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then142_add146 = (main_if_then142_12 + $signed({{28{main_if_else140_rem144_reg[3]}},main_if_else140_rem144_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then142_211)) begin
		main_if_then142_add146_reg <= main_if_then142_add146;
	end
end
always @(*) begin
		main_if_then142_xor2_i6 = (main_if_end109_add112_reg ^ 32'd1);
end
always @(*) begin
	main_if_then142_rem149 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_then142_arrayidx150 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then142_13 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then142_211)) begin
		main_if_then142_13_reg <= main_if_then142_13;
	end
end
always @(*) begin
		main_if_then142_add151 = (main_if_then142_13_reg + $signed({{28{main_if_then142_rem149[3]}},main_if_then142_rem149}));
end
always @(*) begin
		main_if_then142_add152 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		main_if_then142_add152_reg <= main_if_then142_add152;
	end
end
always @(*) begin
		main_if_else153_arrayidx156 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else153_14 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else153_add157 = (main_if_else153_14 + $signed({{28{main_if_else140_rem144_reg[3]}},main_if_else140_rem144_reg}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else153_244)) begin
		main_if_else153_add157_reg <= main_if_else153_add157;
	end
end
always @(*) begin
		main_if_else153_xor2_i4 = (main_if_end109_add112_reg ^ 32'd1);
end
always @(*) begin
	main_if_else153_rem160 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_else153_arrayidx161 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else153_15 = memory_controller_0_out_a[31:0];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else153_244)) begin
		main_if_else153_15_reg <= main_if_else153_15;
	end
end
always @(*) begin
		main_if_else153_add162 = (main_if_else153_15_reg + $signed({{28{main_if_else153_rem160[3]}},main_if_else153_rem160}));
end
always @(*) begin
		main_if_else153_add163 = (main_NodeBlock9_seed_0_reg + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		main_if_else153_add163_reg <= main_if_else153_add163;
	end
end
always @(*) begin
		main_if_then169_arrayidx170 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then169_16 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then169_add171 = (main_if_then169_16 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then169_arrayidx172 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then169_17 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then169_add173 = (main_if_then169_17 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_NodeBlock16_Pivot17 = ($signed($signed({{28{main_if_end109_rem111_reg[3]}},main_if_end109_rem111_reg})) < $signed({28'd0,main_NodeBlock16_Pivot17_op1_temp}));
end
always @(*) begin
		main_LeafBlock14_SwitchLeaf15 = ($signed(main_if_end109_rem111_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock12_SwitchLeaf13 = ($signed(main_if_end109_rem111_reg) == 32'd1);
end
always @(*) begin
		main_if_then176_arrayidx177 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then176_18 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then176_add178 = (main_if_then176_18 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then176_arrayidx179 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then176_19 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then176_add180 = (main_if_then176_19 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_then183_arrayidx184 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then183_20 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_then183_add185 = (main_if_then183_20 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_then183_arrayidx186 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then183_21 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_then183_add187 = (main_if_then183_21 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
		main_if_else188_arrayidx189 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else188_22 = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_else188_add190 = (main_if_else188_22 + main_NodeBlock9_pos_b_X_0_reg);
end
always @(*) begin
		main_if_else188_arrayidx191 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else188_23 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_else188_add192 = (main_if_else188_23 + main_NodeBlock9_pos_b_Y_0_reg);
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then116_140) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0 = main_if_then116_add120_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then129_175) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0 = main_if_then129_add133_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then142_241) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0 = main_if_then142_add146_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else153_274) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0 = main_if_else153_add157_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then169_278) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0 = main_if_then169_add171;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then176_284) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0 = main_if_then176_add178;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then183_287) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0 = main_if_then183_add185;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else188_290) & (fsm_stall == 1'd0))) */ begin
		main_if_end196_xi_0 = main_if_else188_add190;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then116_140) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then129_175) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then142_241) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else153_274) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then169_278) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then176_284) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then183_287) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else188_290) & (fsm_stall == 1'd0))) begin
		main_if_end196_xi_0_reg <= main_if_end196_xi_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then116_140) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0 = main_if_then116_add125;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then129_175) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0 = main_if_then129_add138;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then142_241) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0 = main_if_then142_add151;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else153_274) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0 = main_if_else153_add162;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then169_278) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0 = main_if_then169_add173;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then176_284) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0 = main_if_then176_add180;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then183_287) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0 = main_if_then183_add187;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else188_290) & (fsm_stall == 1'd0))) */ begin
		main_if_end196_xj_0 = main_if_else188_add192;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then116_140) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then129_175) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then142_241) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else153_274) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then169_278) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then176_284) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then183_287) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else188_290) & (fsm_stall == 1'd0))) begin
		main_if_end196_xj_0_reg <= main_if_end196_xj_0;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then116_140) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1 = main_if_then116_add126_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then129_175) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1 = main_if_then129_add139_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then142_241) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1 = main_if_then142_add152_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_else153_274) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1 = main_if_else153_add163_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then169_278) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1 = main_if_end109_add112_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then176_284) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1 = main_if_end109_add112_reg;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then183_287) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1 = main_if_end109_add112_reg;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else188_290) & (fsm_stall == 1'd0))) */ begin
		main_if_end196_seed_1 = main_if_end109_add112_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then116_140) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then129_175) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then142_241) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else153_274) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then169_278) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then176_284) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then183_287) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else188_290) & (fsm_stall == 1'd0))) begin
		main_if_end196_seed_1_reg <= main_if_end196_seed_1;
	end
end
always @(*) begin
		main_if_end196_bit_select13 = main_if_end196_xi_0_reg[30:0];
end
always @(*) begin
		main_if_end196_bit_select11 = main_if_end196_xi_0_reg[29:0];
end
always @(*) begin
		main_if_end196_inc197 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end196_291)) begin
		main_if_end196_inc197_reg <= main_if_end196_inc197;
	end
end
always @(*) begin
		main_if_end196_bit_concat14 = {main_if_end196_bit_select13[30:0], main_if_end196_bit_concat14_bit_select_operand_2};
end
always @(*) begin
		main_if_end196_bit_concat12 = {main_if_end196_bit_select11[29:0], main_if_end196_bit_concat12_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end196_sr_add = (main_if_end196_bit_concat14 + main_if_end196_bit_concat12);
end
always @(*) begin
		main_if_end196_arrayidx198_sum = (main_if_end196_sr_add + main_if_end196_xj_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end196_291)) begin
		main_if_end196_arrayidx198_sum_reg <= main_if_end196_arrayidx198_sum;
	end
end
always @(*) begin
		main_if_end196_arrayidx199 = (1'd0 + (4 * main_if_end196_arrayidx198_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end196_292)) begin
		main_if_end196_arrayidx199_reg <= main_if_end196_arrayidx199;
	end
end
always @(*) begin
		main_if_end196_24 = main_entry_vla4519_out_b;
end
always @(*) begin
		main_if_end196_cmp200 = (main_if_end196_24 == $signed(-32'd1));
end
always @(*) begin
		main_if_end196_25 = (main_if_end196_xi_0_reg < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end196_291)) begin
		main_if_end196_25_reg <= main_if_end196_25;
	end
end
always @(*) begin
		main_if_end196_or_cond = (main_if_end196_cmp200 & main_if_end196_25_reg);
end
always @(*) begin
		main_if_end196_26 = (main_if_end196_xj_0_reg < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end196_291)) begin
		main_if_end196_26_reg <= main_if_end196_26;
	end
end
always @(*) begin
		main_if_end196_or_cond521 = (main_if_end196_or_cond & main_if_end196_26_reg);
end
always @(*) begin
		main_if_then208_arrayidx211 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_then208_arrayidx212 = (1'd0 + (4 * main_NodeBlock9_a_0_reg));
end
always @(*) begin
		main_if_else213_cmp214 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else213_cmp214_op1_temp}));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then208_295) & (fsm_stall == 1'd0))) begin
		main_if_end218_pos_a_X_1 = main_if_end196_xi_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else213_296) & (fsm_stall == 1'd0)) & (main_if_else213_cmp214 == 1'd0))) */ begin
		main_if_end218_pos_a_X_1 = -32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then208_295) & (fsm_stall == 1'd0))) begin
		main_if_end218_pos_a_X_1_reg <= main_if_end218_pos_a_X_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else213_296) & (fsm_stall == 1'd0)) & (main_if_else213_cmp214 == 1'd0))) begin
		main_if_end218_pos_a_X_1_reg <= main_if_end218_pos_a_X_1;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then208_295) & (fsm_stall == 1'd0))) begin
		main_if_end218_pos_a_Y_1 = main_if_end196_xj_0_reg;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_if_else213_296) & (fsm_stall == 1'd0)) & (main_if_else213_cmp214 == 1'd0))) */ begin
		main_if_end218_pos_a_Y_1 = main_NodeBlock9_pos_a_Y_0_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then208_295) & (fsm_stall == 1'd0))) begin
		main_if_end218_pos_a_Y_1_reg <= main_if_end218_pos_a_Y_1;
	end
	if ((((cur_state == LEGUP_F_main_BB_if_else213_296) & (fsm_stall == 1'd0)) & (main_if_else213_cmp214 == 1'd0))) begin
		main_if_end218_pos_a_Y_1_reg <= main_if_end218_pos_a_Y_1;
	end
end
always @(*) begin
		main_if_end218_cmp219 = (main_if_end218_pos_a_X_1_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_end218_522 = (main_if_end218_cmp219 ? 32'd2 : 32'd3);
end
always @(*) begin
		main_if_end218_inc197_1 = (main_if_end218_cmp219 ? main_if_end196_inc197_reg : 32'd0);
end
always @(*) begin
		main_sw_bb223_cmp224 = (main_NodeBlock9_pos_b_X_0_reg == $signed(-32'd1));
end
always @(*) begin
		main_if_then225_inc226 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(*) begin
		main_if_end227_sub_i1 = (main_NodeBlock9_seed_0_reg + $signed(-32'd1));
end
always @(*) begin
		main_if_end227_xor2_i2 = (main_if_end227_sub_i1 ^ 32'd1);
end
always @(*) begin
	main_if_end227_rem229 = main_signed_modulus_32_0;
end
always @(*) begin
	main_if_end227_rem229_reg = main_if_end291_rem309_reg;
end
always @(*) begin
		main_if_end227_add230 = (main_NodeBlock9_seed_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end227_301)) begin
		main_if_end227_add230_reg <= main_if_end227_add230;
	end
end
always @(*) begin
		main_if_end227_Pivot26 = ($signed($signed({{28{main_if_end227_rem229[3]}},main_if_end227_rem229})) < $signed({29'd0,main_if_end227_Pivot26_op1_temp}));
end
always @(*) begin
		main_NodeBlock23_Pivot24 = ($signed($signed({{28{main_if_end227_rem229_reg[3]}},main_if_end227_rem229_reg})) < $signed({28'd0,main_NodeBlock23_Pivot24_op1_temp}));
end
always @(*) begin
		main_LeafBlock21_SwitchLeaf22 = ($signed(main_if_end227_rem229_reg) == 32'd2);
end
always @(*) begin
		main_LeafBlock19_SwitchLeaf20 = ($signed(main_if_end227_rem229_reg) == 32'd0);
end
always @(*) begin
		main_if_then232_arrayidx233 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then232_arrayidx235 = (`TAG_g_main_opcY0_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then239_arrayidx240 = (`TAG_g_main_opcX1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then239_arrayidx242 = (`TAG_g_main_opcY1_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then246_arrayidx247 = (`TAG_g_main_opcX2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_then246_arrayidx249 = (`TAG_g_main_opcY2_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else251_arrayidx252 = (`TAG_g_main_opcX3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
		main_if_else251_arrayidx254 = (`TAG_g_main_opcY3_a + (4 * main_NodeBlock9_j_0_reg));
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then232_337) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn_in = main_if_then232_arrayidx233;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then239_338) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn_in = main_if_then239_arrayidx240;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then246_339) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn_in = main_if_then246_arrayidx247;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else251_340) & (fsm_stall == 1'd0))) */ begin
		main_if_end258_pn_in = main_if_else251_arrayidx252;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then232_337) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn_in_reg <= main_if_end258_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then239_338) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn_in_reg <= main_if_end258_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then246_339) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn_in_reg <= main_if_end258_pn_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else251_340) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn_in_reg <= main_if_end258_pn_in;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then232_337) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn520_in = main_if_then232_arrayidx235;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then239_338) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn520_in = main_if_then239_arrayidx242;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then246_339) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn520_in = main_if_then246_arrayidx249;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_if_else251_340) & (fsm_stall == 1'd0))) */ begin
		main_if_end258_pn520_in = main_if_else251_arrayidx254;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then232_337) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn520_in_reg <= main_if_end258_pn520_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then239_338) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn520_in_reg <= main_if_end258_pn520_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then246_339) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn520_in_reg <= main_if_end258_pn520_in;
	end
	if (((cur_state == LEGUP_F_main_BB_if_else251_340) & (fsm_stall == 1'd0))) begin
		main_if_end258_pn520_in_reg <= main_if_end258_pn520_in;
	end
end
always @(*) begin
		main_if_end258_pn520 = memory_controller_0_out_a[31:0];
end
always @(*) begin
		main_if_end258_pn = memory_controller_1_out_a[31:0];
end
always @(*) begin
		main_if_end258_xj_1 = (main_if_end258_pn520 + main_NodeBlock9_pos_a_Y_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end258_343)) begin
		main_if_end258_xj_1_reg <= main_if_end258_xj_1;
	end
end
always @(*) begin
		main_if_end258_xi_1 = (main_if_end258_pn + main_NodeBlock9_pos_a_X_0_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end258_343)) begin
		main_if_end258_xi_1_reg <= main_if_end258_xi_1;
	end
end
always @(*) begin
		main_if_end258_bit_select9 = main_if_end258_xi_1[30:0];
end
always @(*) begin
		main_if_end258_bit_select7 = main_if_end258_xi_1[29:0];
end
always @(*) begin
		main_if_end258_bit_concat10 = {main_if_end258_bit_select9[30:0], main_if_end258_bit_concat10_bit_select_operand_2};
end
always @(*) begin
		main_if_end258_bit_concat8 = {main_if_end258_bit_select7[29:0], main_if_end258_bit_concat8_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_if_end258_sr_add12 = (main_if_end258_bit_concat10 + main_if_end258_bit_concat8);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end258_343)) begin
		main_if_end258_sr_add12_reg <= main_if_end258_sr_add12;
	end
end
always @(*) begin
		main_if_end258_arrayidx260_sum = (main_if_end258_sr_add12_reg + main_if_end258_xj_1_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end258_344)) begin
		main_if_end258_arrayidx260_sum_reg <= main_if_end258_arrayidx260_sum;
	end
end
always @(*) begin
		main_if_end258_arrayidx261 = (1'd0 + (4 * main_if_end258_arrayidx260_sum_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end258_345)) begin
		main_if_end258_arrayidx261_reg <= main_if_end258_arrayidx261;
	end
end
always @(*) begin
		main_if_end258_27 = main_entry_vla4519_out_a;
end
always @(*) begin
		main_if_end258_cmp262 = (main_if_end258_27 == $signed(-32'd1));
end
always @(*) begin
		main_if_end258_28 = (main_if_end258_xi_1 < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end258_343)) begin
		main_if_end258_28_reg <= main_if_end258_28;
	end
end
always @(*) begin
		main_if_end258_or_cond523 = (main_if_end258_cmp262 & main_if_end258_28_reg);
end
always @(*) begin
		main_if_end258_29 = (main_if_end258_xj_1 < 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end258_343)) begin
		main_if_end258_29_reg <= main_if_end258_29;
	end
end
always @(*) begin
		main_if_end258_or_cond524 = (main_if_end258_or_cond523 & main_if_end258_29_reg);
end
always @(*) begin
		main_if_then271_arrayidx274 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then271_arrayidx275 = (1'd0 + (4 * main_NodeBlock9_b_0_reg));
end
always @(*) begin
		main_if_then271_inc276 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_if_then271_inc276_reg <= main_if_then271_inc276;
	end
end
always @(*) begin
		main_if_else277_inc259 = (main_NodeBlock9_j_0_reg + 32'd1);
end
always @(*) begin
		main_if_else277_cmp278 = ($signed(main_NodeBlock9_j_0_reg) > $signed({24'd0,main_if_else277_cmp278_op1_temp}));
end
always @(*) begin
		main_sw_bb288_cmp289 = (main_NodeBlock9_i_0_reg == 32'd32);
end
always @(*) begin
		main_if_end291_arrayidx292 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end291_30 = main_entry_vla515_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_353)) begin
		main_if_end291_30_reg <= main_if_end291_30;
	end
end
always @(*) begin
		main_if_end291_arrayidx293 = (1'd0 + (4 * main_NodeBlock9_i_0_reg));
end
always @(*) begin
		main_if_end291_31 = main_entry_vla1516_out_b;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_353)) begin
		main_if_end291_31_reg <= main_if_end291_31;
	end
end
always @(*) begin
		main_if_end291_arrayidx294 = (1'd0 + (4 * main_if_end291_30));
end
always @(*) begin
		main_if_end291_32 = main_entry_vla2517_out_a;
end
always @(*) begin
		main_if_end291_arrayidx295 = (1'd0 + (4 * main_if_end291_31));
end
always @(*) begin
		main_if_end291_33 = main_entry_vla2517_out_b;
end
always @(*) begin
		main_if_end291_sub = (main_if_end291_32 - main_if_end291_33);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_354)) begin
		main_if_end291_sub_reg <= main_if_end291_sub;
	end
end
always @(*) begin
		main_if_end291_bit_select6 = main_if_end291_sub[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_354)) begin
		main_if_end291_bit_select6_reg <= main_if_end291_bit_select6;
	end
end
always @(*) begin
		main_if_end291_mul = (32'd0 - main_if_end291_sub);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_354)) begin
		main_if_end291_mul_reg <= main_if_end291_mul;
	end
end
always @(*) begin
		main_if_end291_mul_sub = (main_if_end291_bit_select6_reg ? main_if_end291_mul_reg : main_if_end291_sub_reg);
end
always @(*) begin
		main_if_end291_arrayidx299 = (1'd0 + (4 * main_if_end291_30));
end
always @(*) begin
		main_if_end291_34 = main_entry_vla3518_out_a;
end
always @(*) begin
		main_if_end291_arrayidx300 = (1'd0 + (4 * main_if_end291_31));
end
always @(*) begin
		main_if_end291_35 = main_entry_vla3518_out_b;
end
always @(*) begin
		main_if_end291_sub301 = (main_if_end291_34 - main_if_end291_35);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_354)) begin
		main_if_end291_sub301_reg <= main_if_end291_sub301;
	end
end
always @(*) begin
		main_if_end291_bit_select5 = main_if_end291_sub301[31];
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_354)) begin
		main_if_end291_bit_select5_reg <= main_if_end291_bit_select5;
	end
end
always @(*) begin
		main_if_end291_mul304 = (32'd0 - main_if_end291_sub301);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_354)) begin
		main_if_end291_mul304_reg <= main_if_end291_mul304;
	end
end
always @(*) begin
		main_if_end291_diff_pos_y_0 = (main_if_end291_bit_select5_reg ? main_if_end291_mul304_reg : main_if_end291_sub301_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_355)) begin
		main_if_end291_diff_pos_y_0_reg <= main_if_end291_diff_pos_y_0;
	end
end
always @(*) begin
		main_if_end291_add306 = (main_NodeBlock9_sum_mesh_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_352)) begin
		main_if_end291_add306_reg <= main_if_end291_add306;
	end
end
always @(*) begin
		main_if_end291_newEarly_add308 = (main_if_end291_mul_sub + main_if_end291_diff_pos_y_0);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_355)) begin
		main_if_end291_newEarly_add308_reg <= main_if_end291_newEarly_add308;
	end
end
always @(*) begin
		main_if_end291_newCurOp_add308 = (main_if_end291_add306_reg + main_if_end291_newEarly_add308_reg);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_356)) begin
		main_if_end291_newCurOp_add308_reg <= main_if_end291_newCurOp_add308;
	end
end
always @(*) begin
	main_if_end291_div = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end291_rem309 = main_signed_modulus_32_0;
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_387)) begin
		main_if_end291_rem309_reg <= main_if_end291_rem309;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end291_388)) begin
		main_if_end291_rem309_reg <= main_if_end291_rem312;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_64)) begin
		main_if_end291_rem309_reg <= main_for_end84_rem;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end109_105)) begin
		main_if_end291_rem309_reg <= main_if_end109_rem111;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_139)) begin
		main_if_end291_rem309_reg <= main_if_then116_rem118;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then116_140)) begin
		main_if_end291_rem309_reg <= main_if_then116_rem123;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_174)) begin
		main_if_end291_rem309_reg <= main_if_then129_rem131;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_175)) begin
		main_if_end291_rem309_reg <= main_if_then129_rem136;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then142_241)) begin
		main_if_end291_rem309_reg <= main_if_then142_rem149;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else153_274)) begin
		main_if_end291_rem309_reg <= main_if_else153_rem160;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end227_333)) begin
		main_if_end291_rem309_reg <= main_if_end227_rem229;
	end
end
always @(*) begin
	main_if_end291_div311 = main_signed_divide_32_0;
end
always @(*) begin
	main_if_end291_rem312 = main_signed_modulus_32_0;
end
always @(*) begin
		main_if_end291_add313 = (main_NodeBlock9_sum_1hop_0_reg + $signed(-32'd1));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_352)) begin
		main_if_end291_add313_reg <= main_if_end291_add313;
	end
end
always @(*) begin
		main_if_end291_newEarly_add314 = ($signed({{1{main_if_end291_div[30]}},main_if_end291_div}) + $signed({{28{main_if_end291_rem309[3]}},main_if_end291_rem309}));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_387)) begin
		main_if_end291_newEarly_add314_reg <= main_if_end291_newEarly_add314;
	end
end
always @(*) begin
		main_if_end291_newEarly_sub315 = (main_if_end291_add313_reg + $signed({{1{main_if_end291_div311[30]}},main_if_end291_div311}));
end
always @(*) begin
		main_if_end291_newEarly_add316 = (main_if_end291_newEarly_add314_reg + $signed({{28{main_if_end291_rem312[3]}},main_if_end291_rem312}));
end
always @(*) begin
		main_if_end291_newCurOp_add316 = (main_if_end291_newEarly_sub315 + main_if_end291_newEarly_add316);
end
always @(*) begin
		main_if_end291_inc317 = (main_NodeBlock9_i_0_reg + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_352)) begin
		main_if_end291_inc317_reg <= main_if_end291_inc317;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond321_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond321_preheader_i_3531 = 32'd0;
	end
	else /* if ((((cur_state == LEGUP_F_main_BB_for_cond321_preheader_393) & (fsm_stall == 1'd0)) & (main_for_cond321_preheader_exitcond5_reg == 1'd0))) */ begin
		main_for_cond321_preheader_i_3531 = main_for_cond321_preheader_46_reg;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_for_cond321_preheader_preheader_7) & (fsm_stall == 1'd0))) begin
		main_for_cond321_preheader_i_3531_reg <= main_for_cond321_preheader_i_3531;
	end
	if ((((cur_state == LEGUP_F_main_BB_for_cond321_preheader_393) & (fsm_stall == 1'd0)) & (main_for_cond321_preheader_exitcond5_reg == 1'd0))) begin
		main_for_cond321_preheader_i_3531_reg <= main_for_cond321_preheader_i_3531;
	end
end
always @(*) begin
		main_for_cond321_preheader_bit_select3 = main_for_cond321_preheader_i_3531_reg_width_extended[30:0];
end
always @(*) begin
		main_for_cond321_preheader_bit_select1 = main_for_cond321_preheader_i_3531_reg_width_extended[29:0];
end
always @(*) begin
		main_for_cond321_preheader_bit_concat4 = {main_for_cond321_preheader_bit_select3[30:0], main_for_cond321_preheader_bit_concat4_bit_select_operand_2};
end
always @(*) begin
		main_for_cond321_preheader_bit_concat2 = {main_for_cond321_preheader_bit_select1[29:0], main_for_cond321_preheader_bit_concat2_bit_select_operand_2[1:0]};
end
always @(*) begin
		main_for_cond321_preheader_sr_add15 = (main_for_cond321_preheader_bit_concat4 + main_for_cond321_preheader_bit_concat2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_sr_add15_reg <= main_for_cond321_preheader_sr_add15;
	end
end
always @(*) begin
		main_for_cond321_preheader_bit_select = main_for_cond321_preheader_sr_add15[31:1];
end
always @(*) begin
		main_for_cond321_preheader_arrayidx325 = (1'd0 + (4 * main_for_cond321_preheader_sr_add15_reg));
end
always @(*) begin
		main_for_cond321_preheader_bit_concat = {main_for_cond321_preheader_bit_select[30:0], main_for_cond321_preheader_bit_concat_bit_select_operand_2};
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_bit_concat_reg <= main_for_cond321_preheader_bit_concat;
	end
end
always @(*) begin
		main_for_cond321_preheader_arrayidx325_1 = (1'd0 + (4 * main_for_cond321_preheader_bit_concat_reg));
end
always @(*) begin
		main_for_cond321_preheader_36 = (main_for_cond321_preheader_sr_add15 + 32'd2);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_36_reg <= main_for_cond321_preheader_36;
	end
end
always @(*) begin
		main_for_cond321_preheader_arrayidx325_2 = (1'd0 + (4 * main_for_cond321_preheader_36_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_390)) begin
		main_for_cond321_preheader_arrayidx325_2_reg <= main_for_cond321_preheader_arrayidx325_2;
	end
end
always @(*) begin
		main_for_cond321_preheader_37 = (main_for_cond321_preheader_sr_add15 + 32'd3);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_37_reg <= main_for_cond321_preheader_37;
	end
end
always @(*) begin
		main_for_cond321_preheader_arrayidx325_3 = (1'd0 + (4 * main_for_cond321_preheader_37_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_390)) begin
		main_for_cond321_preheader_arrayidx325_3_reg <= main_for_cond321_preheader_arrayidx325_3;
	end
end
always @(*) begin
		main_for_cond321_preheader_38 = (main_for_cond321_preheader_sr_add15 + 32'd4);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_38_reg <= main_for_cond321_preheader_38;
	end
end
always @(*) begin
		main_for_cond321_preheader_arrayidx325_4 = (1'd0 + (4 * main_for_cond321_preheader_38_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_390)) begin
		main_for_cond321_preheader_arrayidx325_4_reg <= main_for_cond321_preheader_arrayidx325_4;
	end
end
always @(*) begin
		main_for_cond321_preheader_39 = (main_for_cond321_preheader_sr_add15 + 32'd5);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_39_reg <= main_for_cond321_preheader_39;
	end
end
always @(*) begin
		main_for_cond321_preheader_arrayidx325_5 = (1'd0 + (4 * main_for_cond321_preheader_39_reg));
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_390)) begin
		main_for_cond321_preheader_arrayidx325_5_reg <= main_for_cond321_preheader_arrayidx325_5;
	end
end
always @(*) begin
		main_for_cond321_preheader_40 = main_entry_vla4519_out_a;
end
always @(*) begin
		main_for_cond321_preheader_41 = main_entry_vla4519_out_b;
end
always @(*) begin
		main_for_cond321_preheader_42 = main_entry_vla4519_out_a;
end
always @(*) begin
		main_for_cond321_preheader_43 = main_entry_vla4519_out_b;
end
always @(*) begin
		main_for_cond321_preheader_44 = main_entry_vla4519_out_a;
end
always @(*) begin
		main_for_cond321_preheader_45 = main_entry_vla4519_out_b;
end
always @(*) begin
		main_for_cond321_preheader_46 = ({1'd0,main_for_cond321_preheader_i_3531_reg} + 32'd1);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_46_reg <= main_for_cond321_preheader_46;
	end
end
always @(*) begin
		main_for_cond321_preheader_exitcond5 = (main_for_cond321_preheader_46 == 32'd6);
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_389)) begin
		main_for_cond321_preheader_exitcond5_reg <= main_for_cond321_preheader_exitcond5;
	end
end
always @(*) begin
	if (((cur_state == LEGUP_F_main_BB_if_then215_297) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else if (((cur_state == LEGUP_F_main_BB_if_then279_350) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0 = 32'd0;
	end
	else /* if (((cur_state == LEGUP_F_main_BB_for_end333_394) & (fsm_stall == 1'd0))) */ begin
		main_cleanup_retval_0 = 32'd1;
	end
end
always @(posedge clk) begin
	if (((cur_state == LEGUP_F_main_BB_if_then215_297) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_if_then279_350) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
	if (((cur_state == LEGUP_F_main_BB_for_end333_394) & (fsm_stall == 1'd0))) begin
		main_cleanup_retval_0_reg <= main_cleanup_retval_0;
	end
end
always @(*) begin
	main_entry_vla515_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla515_address_a = (main_entry_vla515_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx8_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx12_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx16_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx20_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx24_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx28_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx32_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx36_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx40_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx44_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx48_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx52_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx56_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx60_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla515_address_a = (main_entry_arrayidx64_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_32)) begin
		main_entry_vla515_address_a = (main_entry_vla515_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_69)) begin
		main_entry_vla515_address_a = (main_if_end_arrayidx97 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla515_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla515_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla515_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla515_in_a = 32'd26;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla515_in_a = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla515_in_a = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla515_in_a = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla515_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla515_in_a = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla515_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla515_in_a = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla515_in_a = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla515_in_a = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla515_in_a = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla515_in_a = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla515_in_a = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla515_in_a = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla515_in_a = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla515_in_a = 32'd14;
	end
end
always @(*) begin
	main_entry_vla515_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx6_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx10_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx14_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx18_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx22_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx26_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx30_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx34_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx38_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx42_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx46_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx50_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx54_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx58_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx62_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla515_address_b = (main_entry_arrayidx66_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end291_352)) begin
		main_entry_vla515_address_b = (main_if_end291_arrayidx292 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla515_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla515_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla515_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla515_in_b = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla515_in_b = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla515_in_b = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla515_in_b = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla515_in_b = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla515_in_b = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla515_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla515_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla515_in_b = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla515_in_b = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla515_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla515_in_b = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla515_in_b = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla515_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla515_in_b = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla515_in_b = 32'd8;
	end
end
always @(*) begin
	main_entry_vla1516_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1516_address_a = (main_entry_vla1516_sub_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx9_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx13_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx17_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx21_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx25_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx29_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx33_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx37_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx41_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx45_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx49_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx53_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx57_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx61_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1516_address_a = (main_entry_arrayidx65_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_69)) begin
		main_entry_vla1516_address_a = (main_if_end_arrayidx98 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1516_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1516_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1516_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1516_in_a = 32'd25;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1516_in_a = 32'd23;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1516_in_a = 32'd20;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1516_in_a = 32'd15;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1516_in_a = 32'd9;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1516_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1516_in_a = 32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1516_in_a = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1516_in_a = 32'd5;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1516_in_a = 32'd17;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1516_in_a = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1516_in_a = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1516_in_a = 32'd22;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1516_in_a = 32'd14;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1516_in_a = 32'd6;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1516_in_a = 32'd8;
	end
end
always @(*) begin
	main_entry_vla1516_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx7_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx11_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx15_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx19_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx23_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx27_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx31_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx35_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx39_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx43_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx47_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx51_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx55_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx59_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx63_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1516_address_b = (main_entry_arrayidx67_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end291_352)) begin
		main_entry_vla1516_address_b = (main_if_end291_arrayidx293 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla1516_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1516_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla1516_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla1516_in_b = 32'd24;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla1516_in_b = 32'd21;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla1516_in_b = 32'd18;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla1516_in_b = 32'd13;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla1516_in_b = 32'd3;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla1516_in_b = 32'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla1516_in_b = 32'd7;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla1516_in_b = 32'd11;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla1516_in_b = 32'd16;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla1516_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla1516_in_b = 32'd4;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla1516_in_b = 32'd10;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla1516_in_b = 32'd19;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla1516_in_b = 32'd12;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla1516_in_b = 32'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla1516_in_b = 32'd2;
	end
end
always @(*) begin
	main_entry_vla2517_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_entry_vla2517_address_a = (main_for_body79_arrayidx80 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_64)) begin
		main_entry_vla2517_address_a = (main_for_end84_arrayidx86_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_entry_vla2517_address_a = (main_if_end_arrayidx99 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end291_353)) begin
		main_entry_vla2517_address_a = (main_if_end291_arrayidx294 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2517_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_entry_vla2517_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_64)) begin
		main_entry_vla2517_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2517_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_entry_vla2517_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_64)) begin
		main_entry_vla2517_in_a = {{28{main_for_end84_rem[3]}},main_for_end84_rem};
	end
end
always @(*) begin
	main_entry_vla2517_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_entry_vla2517_address_b = (main_if_end_arrayidx101 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla2517_address_b = (main_if_then208_arrayidx211 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla2517_address_b = (main_if_then271_arrayidx274 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end291_353)) begin
		main_entry_vla2517_address_b = (main_if_end291_arrayidx295 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla2517_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla2517_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla2517_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla2517_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla2517_in_b = main_if_end196_xi_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla2517_in_b = main_if_end258_xi_1_reg;
	end
end
always @(*) begin
	main_entry_vla3518_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_entry_vla3518_address_a = (main_for_body79_arrayidx81 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_65)) begin
		main_entry_vla3518_address_a = (main_for_end84_arrayidx89_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_entry_vla3518_address_a = (main_if_end_arrayidx100 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end291_353)) begin
		main_entry_vla3518_address_a = (main_if_end291_arrayidx299 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3518_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_entry_vla3518_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_65)) begin
		main_entry_vla3518_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3518_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_for_body79_30)) begin
		main_entry_vla3518_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_65)) begin
		main_entry_vla3518_in_a = {{28{main_for_end84_rem88[3]}},main_for_end84_rem88};
	end
end
always @(*) begin
	main_entry_vla3518_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_end_70)) begin
		main_entry_vla3518_address_b = (main_if_end_arrayidx102 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla3518_address_b = (main_if_then208_arrayidx212 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla3518_address_b = (main_if_then271_arrayidx275 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end291_353)) begin
		main_entry_vla3518_address_b = (main_if_end291_arrayidx300 >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla3518_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla3518_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla3518_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla3518_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla3518_in_b = main_if_end196_xj_0_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla3518_in_b = main_if_end258_xj_1_reg;
	end
end
always @(*) begin
	main_entry_vla4519_address_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_1541_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_2_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_4_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_2542_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_2_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_4_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_3543_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_2_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_4_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_4544_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_2_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_4_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_5545_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_2_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4519_address_a = (main_entry_arrayidx73_4_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_66)) begin
		main_entry_vla4519_address_a = (main_for_end84_arrayidx94 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end258_345)) begin
		main_entry_vla4519_address_a = (main_if_end258_arrayidx261 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla4519_address_a = (main_if_end258_arrayidx261_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_390)) begin
		main_entry_vla4519_address_a = (main_for_cond321_preheader_arrayidx325 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_391)) begin
		main_entry_vla4519_address_a = (main_for_cond321_preheader_arrayidx325_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_392)) begin
		main_entry_vla4519_address_a = (main_for_cond321_preheader_arrayidx325_4_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4519_write_enable_a = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_66)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla4519_write_enable_a = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4519_in_a = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4519_in_a = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_for_end84_66)) begin
		main_entry_vla4519_in_a = main_for_end84_1_reg;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then271_347)) begin
		main_entry_vla4519_in_a = main_NodeBlock9_b_0_reg;
	end
end
always @(*) begin
	main_entry_vla4519_address_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_1_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_3_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_5_1_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_1_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_3_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_5_2_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_1_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_3_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_5_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_1_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_3_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_5_4_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_1_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_3_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4519_address_b = (main_entry_arrayidx73_5_5_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_end196_292)) begin
		main_entry_vla4519_address_b = (main_if_end196_arrayidx199 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla4519_address_b = (main_if_end196_arrayidx199_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_390)) begin
		main_entry_vla4519_address_b = (main_for_cond321_preheader_arrayidx325_1 >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_391)) begin
		main_entry_vla4519_address_b = (main_for_cond321_preheader_arrayidx325_3_reg >>> 3'd2);
	end
	if ((cur_state == LEGUP_F_main_BB_for_cond321_preheader_392)) begin
		main_entry_vla4519_address_b = (main_for_cond321_preheader_arrayidx325_5_reg >>> 3'd2);
	end
end
always @(*) begin
	main_entry_vla4519_write_enable_b = 'd0;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla4519_write_enable_b = 1'd1;
	end
end
always @(*) begin
	main_entry_vla4519_in_b = 'dx;
	if ((cur_state == LEGUP_F_main_BB_sw_bb_11)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_12)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_13)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_14)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_15)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_16)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_17)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_18)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_19)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_20)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_21)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_22)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_23)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_24)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_25)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_26)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_27)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_sw_bb_28)) begin
		main_entry_vla4519_in_b = -32'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then208_294)) begin
		main_entry_vla4519_in_b = main_NodeBlock9_a_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_355)) begin
		main_signed_divide_32_0_op0 = main_if_end291_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end291_356)) */ begin
		main_signed_divide_32_0_op0 = main_if_end291_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_if_end291_355)) begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end291_356)) */ begin
		main_signed_divide_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_divide_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_divide_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_divide_32_0_inst_clken = divide_main_if_end291_div_en;
end
always @(*) begin
	main_signed_divide_32_0_inst_numer = main_signed_divide_32_0_op0;
end
always @(*) begin
	main_signed_divide_32_0_inst_denom = main_signed_divide_32_0_op1;
end
always @(*) begin
	divide_main_if_end291_div_temp_out = main_signed_divide_32_0_inst_quotient;
end
always @(*) begin
	divide_main_if_end291_div_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end291_div_out = divide_main_if_end291_div_temp_out;
end
always @(*) begin
	main_signed_divide_32_0 = divide_main_if_end291_div_out;
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_32)) begin
		main_signed_modulus_32_0_op0 = main_for_end84_xor2_i;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end84_33)) begin
		main_signed_modulus_32_0_op0 = main_for_end84_xor2_i16_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end109_73)) begin
		main_signed_modulus_32_0_op0 = main_if_end109_xor2_i15;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		main_signed_modulus_32_0_op0 = main_if_then116_xor2_i13;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then116_108)) begin
		main_signed_modulus_32_0_op0 = main_if_then116_xor2_i12_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		main_signed_modulus_32_0_op0 = main_if_then129_xor2_i10;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then129_143)) begin
		main_signed_modulus_32_0_op0 = main_if_then129_xor2_i9_reg;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else140_176)) begin
		main_signed_modulus_32_0_op0 = main_if_else140_xor2_i7;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		main_signed_modulus_32_0_op0 = main_if_then142_xor2_i6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		main_signed_modulus_32_0_op0 = main_if_else153_xor2_i4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end227_301)) begin
		main_signed_modulus_32_0_op0 = main_if_end227_xor2_i2;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end291_355)) begin
		main_signed_modulus_32_0_op0 = main_if_end291_mul_sub;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end291_356)) */ begin
		main_signed_modulus_32_0_op0 = main_if_end291_diff_pos_y_0_reg;
	end
end
always @(*) begin
	if ((cur_state == LEGUP_F_main_BB_for_end84_32)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_for_end84_33)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end109_73)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then116_108)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then129_143)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else140_176)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		main_signed_modulus_32_0_op1 = 32'd6;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end227_301)) begin
		main_signed_modulus_32_0_op1 = 32'd4;
	end
	else if ((cur_state == LEGUP_F_main_BB_if_end291_355)) begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
	else /* if ((cur_state == LEGUP_F_main_BB_if_end291_356)) */ begin
		main_signed_modulus_32_0_op1 = 32'd2;
	end
end
always @(*) begin
	main_signed_modulus_32_0_inst_clock = clk;
end
always @(*) begin
	main_signed_modulus_32_0_inst_aclr = reset;
end
always @(*) begin
	main_signed_modulus_32_0_inst_clken = divide_main_if_end291_rem309_en;
end
always @(*) begin
	main_signed_modulus_32_0_inst_numer = main_signed_modulus_32_0_op0;
end
always @(*) begin
	main_signed_modulus_32_0_inst_denom = main_signed_modulus_32_0_op1;
end
always @(*) begin
	divide_main_if_end291_rem309_temp_out = main_signed_modulus_32_0_inst_remain;
end
always @(*) begin
	divide_main_if_end291_rem309_en = ~(fsm_stall);
end
always @(*) begin
	divide_main_if_end291_rem309_out = divide_main_if_end291_rem309_temp_out;
end
always @(*) begin
	main_signed_modulus_32_0 = divide_main_if_end291_rem309_out;
end
assign main_NodeBlock9_Pivot10_op1_temp = 32'd3;
assign main_NodeBlock7_Pivot8_op1_temp = 32'd4;
assign main_NodeBlock5_Pivot6_op1_temp = 32'd5;
assign main_NodeBlock1_Pivot2_op1_temp = 32'd1;
assign main_NodeBlock_Pivot_op1_temp = 32'd2;
always @(*) begin
	main_for_end84_rem_width_extended = {{27{main_for_end84_rem[3]}},main_for_end84_rem};
end
assign main_for_end84_bit_concat18_bit_select_operand_2 = 1'd0;
assign main_for_end84_bit_concat16_bit_select_operand_2 = 2'd0;
assign main_NodeBlock16_Pivot17_op1_temp = 32'd2;
assign main_if_end196_bit_concat14_bit_select_operand_2 = 1'd0;
assign main_if_end196_bit_concat12_bit_select_operand_2 = 2'd0;
assign main_if_else213_cmp214_op1_temp = 32'd60;
assign main_if_end227_Pivot26_op1_temp = 32'd1;
assign main_NodeBlock23_Pivot24_op1_temp = 32'd2;
assign main_if_end258_bit_concat10_bit_select_operand_2 = 1'd0;
assign main_if_end258_bit_concat8_bit_select_operand_2 = 2'd0;
assign main_if_else277_cmp278_op1_temp = 32'd60;
always @(*) begin
	main_for_cond321_preheader_i_3531_reg_width_extended = {28'd0,main_for_cond321_preheader_i_3531_reg};
end
assign main_for_cond321_preheader_bit_concat4_bit_select_operand_2 = 1'd0;
assign main_for_cond321_preheader_bit_concat2_bit_select_operand_2 = 2'd0;
assign main_for_cond321_preheader_bit_concat_bit_select_operand_2 = 1'd1;
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		finish <= 1'd0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_395)) begin
		finish <= (fsm_stall == 1'd0);
	end
end
always @(posedge clk) begin
	if ((cur_state == LEGUP_0)) begin
		return_val <= 0;
	end
	if ((cur_state == LEGUP_F_main_BB_cleanup_395)) begin
		return_val <= main_cleanup_retval_0_reg;
	end
end
assign memory_controller_1_write_enable_a = 1'd0;
assign memory_controller_1_in_a = 64'd0;
always @(*) begin
	memory_controller_1_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_276)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then176_282)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then183_285)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else188_288)) begin
		memory_controller_1_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end258_341)) begin
		memory_controller_1_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_1_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		memory_controller_1_address_a = main_if_then116_arrayidx119;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		memory_controller_1_address_a = main_if_then129_arrayidx132;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		memory_controller_1_address_a = main_if_then142_arrayidx145;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		memory_controller_1_address_a = main_if_else153_arrayidx156;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_276)) begin
		memory_controller_1_address_a = main_if_then169_arrayidx170;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then176_282)) begin
		memory_controller_1_address_a = main_if_then176_arrayidx177;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then183_285)) begin
		memory_controller_1_address_a = main_if_then183_arrayidx184;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else188_288)) begin
		memory_controller_1_address_a = main_if_else188_arrayidx189;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end258_341)) begin
		memory_controller_1_address_a = main_if_end258_pn_in_reg;
	end
end
always @(*) begin
	memory_controller_1_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_276)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then176_282)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then183_285)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else188_288)) begin
		memory_controller_1_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end258_341)) begin
		memory_controller_1_size_a = 2'd2;
	end
end
assign memory_controller_1_write_enable_b = 1'd0;
assign memory_controller_1_in_b = 64'd0;
assign memory_controller_1_enable_b = 1'd0;
assign memory_controller_1_address_b = 0;
assign memory_controller_1_size_b = 2'd0;
assign memory_controller_0_write_enable_a = 1'd0;
assign memory_controller_0_in_a = 64'd0;
always @(*) begin
	memory_controller_0_enable_a = 1'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_276)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then176_282)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then183_285)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else188_288)) begin
		memory_controller_0_enable_a = 1'd1;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end258_341)) begin
		memory_controller_0_enable_a = 1'd1;
	end
end
always @(*) begin
	memory_controller_0_address_a = 0;
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		memory_controller_0_address_a = main_if_then116_arrayidx124;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		memory_controller_0_address_a = main_if_then129_arrayidx137;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		memory_controller_0_address_a = main_if_then142_arrayidx150;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		memory_controller_0_address_a = main_if_else153_arrayidx161;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_276)) begin
		memory_controller_0_address_a = main_if_then169_arrayidx172;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then176_282)) begin
		memory_controller_0_address_a = main_if_then176_arrayidx179;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then183_285)) begin
		memory_controller_0_address_a = main_if_then183_arrayidx186;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else188_288)) begin
		memory_controller_0_address_a = main_if_else188_arrayidx191;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end258_341)) begin
		memory_controller_0_address_a = main_if_end258_pn520_in_reg;
	end
end
always @(*) begin
	memory_controller_0_size_a = 2'd0;
	if ((cur_state == LEGUP_F_main_BB_if_then116_107)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then129_142)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then142_209)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else153_242)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then169_276)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then176_282)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_then183_285)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_else188_288)) begin
		memory_controller_0_size_a = 2'd2;
	end
	if ((cur_state == LEGUP_F_main_BB_if_end258_341)) begin
		memory_controller_0_size_a = 2'd2;
	end
end
assign memory_controller_0_write_enable_b = 1'd0;
assign memory_controller_0_in_b = 64'd0;
assign memory_controller_0_enable_b = 1'd0;
assign memory_controller_0_address_b = 0;
assign memory_controller_0_size_b = 2'd0;

endmodule
module ram_dual_port
(
	clk,
	clken,
	address_a,
	address_b,
	wren_a,
	data_a,
	byteena_a,
	wren_b,
	data_b,
	byteena_b,
	q_b,
	q_a
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  latency = 1;
parameter  init_file = "UNUSED";
parameter  width_be_a = 1'd0;
parameter  width_be_b = 1'd0;
localparam output_registered = (latency == 1)? "UNREGISTERED" : "CLOCK0";
input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
wire [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
wire [(width_b-1):0] q_b_wire;
input  wren_a;
input [(width_a-1):0] data_a;
input [width_be_a-1:0] byteena_a;
input  wren_b;
input [(width_b-1):0] data_b;
input [width_be_b-1:0] byteena_b;
reg  clk_wire;

altsyncram altsyncram_component (
	.address_a (address_a),
    .clock0 (clk_wire),
    .clock1 (1'd1),
    .clocken0 (clken),
    .clocken1 (1'd1),
    .clocken2 (1'd1),
    .clocken3 (1'd1),
    .aclr0 (1'd0),
    .aclr1 (1'd0),
    .addressstall_a (1'd0),
    .eccstatus (),
    .rden_a (clken),
    .q_a (q_a),
	.address_b (address_b),
    .addressstall_b (1'd0),
    .rden_b (clken),
    .q_b (q_b),
    .wren_a (wren_a),
    .data_a (data_a),
    .wren_b (wren_b),
    .data_b (data_b),
    .byteena_b (byteena_b),
    .byteena_a (byteena_a)
);
defparam
    altsyncram_component.width_byteena_a = width_be_a,
    altsyncram_component.width_byteena_b = width_be_b,
    altsyncram_component.operation_mode = "BIDIR_DUAL_PORT",
    altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
    altsyncram_component.init_file = init_file,
    altsyncram_component.lpm_hint = "ENABLE_RUNTIME_MOD=NO",
    altsyncram_component.lpm_type = "altsyncram",
    altsyncram_component.power_up_uninitialized = "FALSE",
    altsyncram_component.intended_device_family = "Arria10",
    altsyncram_component.clock_enable_input_b = "BYPASS",
    altsyncram_component.clock_enable_output_b = "BYPASS",
    altsyncram_component.outdata_aclr_b = "NONE",
    altsyncram_component.outdata_reg_b = output_registered,
    altsyncram_component.numwords_b = numwords_b,
    altsyncram_component.widthad_b = widthad_b,
    altsyncram_component.width_b = width_b,
    altsyncram_component.address_reg_b = "CLOCK0",
    altsyncram_component.byteena_reg_b = "CLOCK0",
    altsyncram_component.indata_reg_b = "CLOCK0",
    altsyncram_component.wrcontrol_wraddress_reg_b = "CLOCK0",
    altsyncram_component.clock_enable_input_a = "BYPASS",
    altsyncram_component.clock_enable_output_a = "BYPASS",
    altsyncram_component.outdata_aclr_a = "NONE",
    altsyncram_component.outdata_reg_a = output_registered,
    altsyncram_component.numwords_a = numwords_a,
    altsyncram_component.widthad_a = widthad_a,
    altsyncram_component.width_a = width_a;

always @(*) begin
	clk_wire = clk;
end


endmodule
module rom_dual_port
(
	clk,
	clken,
	address_a,
	q_a,
	address_b,
	q_b
);

parameter  width_a = 1'd0;
parameter  widthad_a = 1'd0;
parameter  numwords_a = 1'd0;
parameter  width_b = 1'd0;
parameter  widthad_b = 1'd0;
parameter  numwords_b = 1'd0;
parameter  init_file = {`MEM_INIT_DIR, "UNUSED.mif"};
parameter  latency = 1;

input  clk;
input  clken;
input [(widthad_a-1):0] address_a;
output wire [(width_a-1):0] q_a;
reg [(width_a-1):0] q_a_wire;
input [(widthad_b-1):0] address_b;
output wire [(width_b-1):0] q_b;
reg [(width_b-1):0] q_b_wire;

(* ram_init_file = init_file *) reg [width_a-1:0] ram [numwords_a-1:0];

integer i;
/* synthesis translate_off */
ALTERA_MF_MEMORY_INITIALIZATION mem ();
reg [8*256:1] ram_ver_file;
initial begin
	if (init_file == {`MEM_INIT_DIR, "UNUSED.mif"})
    begin
		for (i = 0; i < numwords_a; i = i + 1)
			ram[i] = 0;
    end
	else
    begin
        // modelsim can't read .mif files directly. So use Altera function to
        // convert them to .ver files
        mem.convert_to_ver_file(init_file, width_a, ram_ver_file);
        $readmemh(ram_ver_file, ram);
    end
end
/* synthesis translate_on */

localparam input_latency = ((latency - 1) >> 1);
localparam output_latency = (latency - 1) - input_latency;
integer j;

reg [(widthad_a-1):0] address_a_reg[input_latency:0];
reg [(widthad_b-1):0] address_b_reg[input_latency:0];

always @(*)
begin
  address_a_reg[0] = address_a;
  address_b_reg[0] = address_b;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < input_latency; j=j+1)
   begin
       address_a_reg[j+1] <= address_a_reg[j];
       address_b_reg[j+1] <= address_b_reg[j];
   end
end

always @ (posedge clk)
if (clken)
begin
    q_a_wire <= ram[address_a_reg[input_latency]];
end

always @ (posedge clk)
if (clken)
begin
    q_b_wire <= ram[address_b_reg[input_latency]];
end


reg [(width_a-1):0] q_a_reg[output_latency:0];

always @(*)
begin
   q_a_reg[0] <= q_a_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_a_reg[j+1] <= q_a_reg[j];
   end
end

assign q_a = q_a_reg[output_latency];
reg [(width_b-1):0] q_b_reg[output_latency:0];

always @(*)
begin
   q_b_reg[0] <= q_b_wire;
end

always @(posedge clk)
if (clken)
begin
   for (j = 0; j < output_latency; j=j+1)
   begin
       q_b_reg[j+1] <= q_b_reg[j];
   end
end

assign q_b = q_b_reg[output_latency];

endmodule
`timescale 1 ns / 1 ns
module main_tb
(
);

reg  clk;
reg  reset;
reg  start;
wire [31:0] return_val;
wire  finish;


top top_inst (
	.clk (clk),
	.reset (reset),
	.start (start),
	.finish (finish),
	.return_val (return_val)
);




initial 
    clk = 0;
always @(clk)
    clk <= #10 ~clk;

initial begin
//$monitor("At t=%t clk=%b %b %b %b %d", $time, clk, reset, start, finish, return_val);
reset <= 1;
@(negedge clk);
reset <= 0;
start <= 1;
@(negedge clk);
start <= 0;
end

always@(posedge clk) begin
    if (finish == 1) begin
        $display("At t=%t clk=%b finish=%b return_val=%d", $time, clk, finish, return_val);
        $display("Cycles: %d", ($time-50)/20);
        $finish;
    end
end


endmodule
